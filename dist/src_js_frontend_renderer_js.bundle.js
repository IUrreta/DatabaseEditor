/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/backend/UESaveHandler.js":
/*!*****************************************!*\
  !*** ./src/js/backend/UESaveHandler.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyzeFileToDatabase: () => (/* binding */ analyzeFileToDatabase),\n/* harmony export */   dump: () => (/* binding */ dump),\n/* harmony export */   parseGvasProps: () => (/* binding */ parseGvasProps),\n/* harmony export */   repack: () => (/* binding */ repack)\n/* harmony export */ });\n/* harmony import */ var _UESaveTool__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./UESaveTool */ \"./src/js/backend/UESaveTool/index.js\");\n/* harmony import */ var _initSql_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./initSql.js */ \"./src/js/backend/initSql.js\");\n/* harmony import */ var pako__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! pako */ \"./node_modules/pako/dist/pako.esm.mjs\");\n/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! file-saver */ \"./node_modules/file-saver/dist/FileSaver.min.js\");\n/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\");\n\n\n\n\n\nconst parseGvasProps = Properties => {\n  const careerSaveMetadata = {};\n  const metadataProperty = Properties.Properties.filter(x => x.Name === \"MetaData\")[0];\n  const careerSaveMetadataProperty = metadataProperty.Properties[0];\n  careerSaveMetadataProperty.Properties.forEach(prop => {\n    careerSaveMetadata[prop.Name] = prop.Property || prop.Properties;\n  });\n  return {\n    careerSaveMetadata\n  };\n};\nconst analyzeFileToDatabase = async file => {\n  if (!window.SQL) return;\n  return new Promise(resolve => {\n    if (file !== undefined) {\n      let reader = new FileReader();\n      reader.onload = async e => {\n        const serial = new _UESaveTool__WEBPACK_IMPORTED_MODULE_0__.Serializer(buffer__WEBPACK_IMPORTED_MODULE_4__.Buffer.from(reader.result));\n        const gvasMeta = new _UESaveTool__WEBPACK_IMPORTED_MODULE_0__.Gvas().deserialize(serial);\n        const {\n          Header,\n          Properties\n        } = gvasMeta;\n        const {\n          SaveGameVersion,\n          EngineVersion\n        } = Header;\n        const {\n          BuildId,\n          Build\n        } = EngineVersion;\n        let version = 0,\n          gameVersion,\n          gameVersionWithBuild;\n        switch (SaveGameVersion) {\n          case 2:\n            version = 2;\n            gameVersion = BuildId.substring(BuildId.indexOf(\"22_\") + 3);\n            gameVersionWithBuild = `${gameVersion}.${Build & 0x7fffffff}`;\n            break;\n          case 3:\n            if (BuildId.indexOf(\"volta23\") !== -1) {\n              version = 3;\n              gameVersion = BuildId.substring(BuildId.indexOf(\"23+\") + 3);\n              gameVersionWithBuild = `${gameVersion}.${Build & 0x7fffffff}`;\n            }\n            if (BuildId.indexOf(\"volta24\") !== -1) {\n              version = 4;\n              gameVersion = BuildId.substring(BuildId.indexOf(\"24+\") + 8);\n              gameVersionWithBuild = `${gameVersion}.${Build & 0x7fffffff}`;\n            }\n            break;\n          default:\n            version = 0;\n        }\n        const unk_zero = serial.readInt32();\n        const total_size = serial.readInt32();\n        const size_1 = serial.readInt32();\n        const size_2 = serial.readInt32();\n        const size_3 = serial.readInt32();\n        const compressedData = serial.read(total_size);\n        const output = pako__WEBPACK_IMPORTED_MODULE_2__[\"default\"].inflate(compressedData);\n        const databaseFile = output.slice(0, size_1);\n        const text = new TextDecoder().decode(databaseFile.slice(0, 16));\n\n        // @ts-ignore\n\n        if (window.db) window.db.close();\n        const db = new window.SQL.Database(databaseFile);\n        window.db = db;\n        const metadata = {\n          filename: file.name,\n          // for in-app\n\n          version,\n          fullBuildId: BuildId,\n          gameVersion,\n          gameVersionWithBuild,\n          databaseFile,\n          gvasMeta,\n          gvasHeader: Header,\n          // read-only\n\n          ...parseGvasProps(Properties),\n          otherDatabases: [{\n            size: size_2,\n            file: output.slice(size_1, size_1 + size_2)\n          }, {\n            size: size_3,\n            file: output.slice(size_1 + size_2, size_1 + size_2 + size_3)\n          }]\n        };\n        if (true) {\n          // saveAs(new Blob([metadata.chunk0], {type: \"application/binary\"}), \"chunk0\");\n        }\n        resolve({\n          db,\n          metadata\n        });\n      };\n      reader.readAsArrayBuffer(file);\n    }\n  });\n};\nconst repack = (db, metadata, overwrite = false) => {\n  const db_data = db.export();\n  const db_size = db_data.length;\n  const {\n    otherDatabases,\n    gvasMeta\n  } = metadata;\n  const s1 = otherDatabases[0].size;\n  const s2 = otherDatabases[1].size;\n  const compressedData = new buffer__WEBPACK_IMPORTED_MODULE_4__.Buffer(db_size + s1 + s2);\n  compressedData.set(db_data, 0);\n  compressedData.set(otherDatabases[0].file, db_size);\n  compressedData.set(otherDatabases[1].file, db_size + s1);\n  const compressed = pako__WEBPACK_IMPORTED_MODULE_2__[\"default\"].deflate(compressedData);\n  const compressed_size = compressed.length;\n  const serialized = gvasMeta.serialize();\n  const meta_length = serialized.length;\n  const check = new _UESaveTool__WEBPACK_IMPORTED_MODULE_0__.Gvas().deserialize(new _UESaveTool__WEBPACK_IMPORTED_MODULE_0__.Serializer(buffer__WEBPACK_IMPORTED_MODULE_4__.Buffer.from(serialized)));\n  if (JSON.stringify(gvasMeta) === JSON.stringify(check)) {\n    const finalData = new buffer__WEBPACK_IMPORTED_MODULE_4__.Buffer(meta_length + 16 + compressed_size);\n    finalData.set(serialized, 0);\n    finalData.writeInt32LE(compressed_size, meta_length);\n    finalData.writeInt32LE(db_size, meta_length + 4);\n    finalData.writeInt32LE(s1, meta_length + 8);\n    finalData.writeInt32LE(s2, meta_length + 12);\n    finalData.set(compressed, meta_length + 16);\n    (0,file_saver__WEBPACK_IMPORTED_MODULE_3__.saveAs)(new Blob([finalData], {\n      type: \"application/binary\"\n    }), metadata.filename);\n  } else {\n    alert(\"Savefile Serialization Check failed.\");\n  }\n};\nconst dump = (db, metadata) => {\n  (0,file_saver__WEBPACK_IMPORTED_MODULE_3__.saveAs)(new Blob([db.export()], {\n    type: \"application/vnd.sqlite3\"\n  }), metadata.filename + \".db\");\n};\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveHandler.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/Gvas.js":
/*!*******************************************!*\
  !*** ./src/js/backend/UESaveTool/Gvas.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Gvas: () => (/* binding */ Gvas)\n/* harmony export */ });\n/* harmony import */ var _factories__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./factories */ \"./src/js/backend/UESaveTool/factories.js\");\n/* harmony import */ var _GvasHeader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GvasHeader */ \"./src/js/backend/UESaveTool/GvasHeader.js\");\n/* harmony import */ var _properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./properties */ \"./src/js/backend/UESaveTool/properties/index.js\");\n/* harmony import */ var _PropertyErrors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./PropertyErrors */ \"./src/js/backend/UESaveTool/PropertyErrors.js\");\n/* harmony import */ var _Serializer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Serializer */ \"./src/js/backend/UESaveTool/Serializer.js\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\");\n\n\n\n\n\n\nclass Gvas {\n  constructor() {\n    this.Header = new _GvasHeader__WEBPACK_IMPORTED_MODULE_1__.GvasHeader();\n    this.Properties = new _properties__WEBPACK_IMPORTED_MODULE_2__.Tuple();\n  }\n  get Size() {\n    let size = this.Header.Size;\n    size += this.Properties.Size;\n    size += 4;\n    return size;\n  }\n  deserialize(serial) {\n    let format = serial.read(4);\n    if (buffer__WEBPACK_IMPORTED_MODULE_5__.Buffer.compare(buffer__WEBPACK_IMPORTED_MODULE_5__.Buffer.from('GVAS'), format) !== 0) throw Error(`Unexpected header, expected 'GVAS`);\n    this.Header.deserialize(serial);\n    this.Properties.Name = this.Header.SaveGameClassName;\n    this.Properties.deserialize(serial);\n    return this;\n  }\n  serialize() {\n    let serial = _Serializer__WEBPACK_IMPORTED_MODULE_4__.Serializer.alloc(this.Size);\n    serial.write(this.Header.serialize());\n    serial.write(this.Properties.serialize());\n    serial.seek(4);\n    if (serial.tell !== this.Size) throw new _PropertyErrors__WEBPACK_IMPORTED_MODULE_3__.SerializationError(this);\n    return serial.Data;\n  }\n  static from(obj) {\n    let gvas = new Gvas();\n    gvas.Header = _GvasHeader__WEBPACK_IMPORTED_MODULE_1__.GvasHeader.from(obj.Header);\n    gvas.Properties = _factories__WEBPACK_IMPORTED_MODULE_0__.PropertyFactory.create(obj.Properties);\n    return gvas;\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/Gvas.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/GvasHeader.js":
/*!*************************************************!*\
  !*** ./src/js/backend/UESaveTool/GvasHeader.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GvasHeader: () => (/* binding */ GvasHeader)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"./src/js/backend/UESaveTool/index.js\");\n/* harmony import */ var _factories__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./factories */ \"./src/js/backend/UESaveTool/factories.js\");\n/* harmony import */ var _Serializer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Serializer */ \"./src/js/backend/UESaveTool/Serializer.js\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\");\n\n\n\n\nclass GvasHeader {\n  constructor() {\n    this.Format = 'GVAS';\n    this.SaveGameVersion = 0;\n    this.PackageVersion = 0;\n    this.PackageFileVersionUE5 = 0;\n    this.EngineVersion = {\n      Major: 0,\n      Minor: 0,\n      Patch: 0,\n      Build: 0,\n      BuildId: \"\"\n    };\n    this.CustomFormatVersion = 0;\n    this.CustomFormatData = {\n      Count: 0,\n      Entries: []\n    };\n    this.SaveGameClassName = \"\";\n  }\n  get Size() {\n    let size = this.Format.length;\n    size += 18;\n    size += this.EngineVersion.BuildId.length + 1 + 4;\n    if (this.EngineVersion.Major >= 5) {\n      size += 4;\n    }\n    size += 8;\n    this.CustomFormatData.Entries.forEach(guid => {\n      size += guid.Size; // 20\n    });\n    size += this.SaveGameClassName.length + 1 + 4;\n    return size;\n  }\n  deserialize(serial) {\n    /* 5.3: https://github.com/EpicGames/UnrealEngine/blob/5.3/Engine/Source/Runtime/Engine/Private/GameplayStatics.cpp#L85 */\n\n    // FileTypeTag: GVAS\n    this.SaveGameVersion = serial.readInt32();\n    this.PackageVersion = serial.readInt32();\n    if (this.SaveGameVersion >= 3) {\n      this.PackageFileVersionUE5 = serial.readInt32();\n      /* this needs to be larger than 1000 */\n    }\n    /*\r\n        3 means PackageFileSummaryVersionChange, rather than F1M 2023\r\n        https://github.com/EpicGames/UnrealEngine/blob/5.3/Engine/Source/Runtime/Engine/Private/GameplayStatics.cpp#L93\r\n    */\n    this.EngineVersion.Major = serial.readUInt16();\n    this.EngineVersion.Minor = serial.readUInt16();\n    this.EngineVersion.Patch = serial.readUInt16();\n    this.EngineVersion.Build = serial.readUInt32();\n    this.EngineVersion.BuildId = serial.readString();\n    this.CustomFormatVersion = serial.readInt32();\n    this.CustomFormatData.Count = serial.readInt32();\n    for (let i = 0; i < this.CustomFormatData.Count; i++) {\n      let guid = _factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.create({\n        Type: 'Guid'\n      });\n      this.CustomFormatData.Entries.push(guid.deserialize(serial));\n    }\n    this.SaveGameClassName = serial.readString();\n    return this;\n  }\n  serialize() {\n    let serial = _Serializer__WEBPACK_IMPORTED_MODULE_2__.Serializer.alloc(this.Size);\n    serial.write(buffer__WEBPACK_IMPORTED_MODULE_3__.Buffer.from(this.Format));\n    serial.writeInt32(this.SaveGameVersion);\n    serial.writeInt32(this.PackageVersion);\n    if (this.SaveGameVersion >= 3) {\n      serial.writeInt32(this.PackageFileVersionUE5);\n    } // UE 5 for F1M 23\n\n    serial.writeUInt16(this.EngineVersion.Major);\n    serial.writeUInt16(this.EngineVersion.Minor);\n    serial.writeUInt16(this.EngineVersion.Patch);\n    serial.writeUInt32(this.EngineVersion.Build);\n    serial.writeString(this.EngineVersion.BuildId);\n    serial.writeInt32(this.CustomFormatVersion);\n    serial.writeInt32(this.CustomFormatData.Count);\n    this.CustomFormatData.Entries.forEach(guid => serial.write(guid.serialize()));\n    serial.writeString(this.SaveGameClassName);\n    if (serial.tell != this.Size) throw new ___WEBPACK_IMPORTED_MODULE_0__.SerializationError(this);\n    return serial.Data;\n  }\n  static from(obj) {\n    let header = new GvasHeader();\n    header.SaveGameVersion = obj.SaveGameVersion;\n    header.PackageVersion = obj.PackageVersion;\n    header.EngineVersion = obj.EngineVersion;\n    header.CustomFormatVersion = obj.CustomFormatVersion;\n    header.CustomFormatData.Count = obj.CustomFormatData.Count;\n    obj.CustomFormatData.Entries.forEach(guid => {\n      header.CustomFormatData.Entries.push(_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.create(guid));\n    });\n    header.SaveGameClassName = obj.SaveGameClassName;\n    return header;\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/GvasHeader.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/PropertyErrors.js":
/*!*****************************************************!*\
  !*** ./src/js/backend/UESaveTool/PropertyErrors.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeserializationError: () => (/* binding */ DeserializationError),\n/* harmony export */   SerializationError: () => (/* binding */ SerializationError),\n/* harmony export */   TypeNotImplementedError: () => (/* binding */ TypeNotImplementedError)\n/* harmony export */ });\nclass SerializationError extends Error {\n  constructor(prop) {\n    super(`Problem occurred during serialization of Property: ${prop.Name}`);\n  }\n}\nclass DeserializationError extends Error {\n  constructor(type, offset) {\n    super(`Problem occurred during deserialization of Property '${type}' at offset 0x${offset.toString(16)}`);\n  }\n}\nclass TypeNotImplementedError extends Error {\n  constructor(type) {\n    super(`No implementation for Property type: '${type}'`);\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/PropertyErrors.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/Serializer.js":
/*!*************************************************!*\
  !*** ./src/js/backend/UESaveTool/Serializer.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Serializer: () => (/* binding */ Serializer)\n/* harmony export */ });\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\");\n\nclass Serializer {\n  constructor(buf) {\n    this._data = buf;\n    this._offset = 0;\n  }\n  get Data() {\n    return this._data;\n  }\n  get tell() {\n    return this._offset;\n  }\n  seek(count) {\n    if (this._offset >= this._data.length) throw new Error(`Reached end of Buffer at offset 0x${this.tell.toString(16)}`);\n    return this._offset += count;\n  }\n  read(count) {\n    return this.Data.slice(this.tell, this.seek(count));\n  }\n  readInt32() {\n    let int = this.Data.readInt32LE(this.tell);\n    this.seek(4);\n    return int;\n  }\n  readUInt32() {\n    let int = this.Data.readUInt32LE(this.tell);\n    this.seek(4);\n    return int;\n  }\n  readInt64() {\n    let int1 = this.Data.readUInt32LE(this.tell);\n    this.seek(4);\n    let int2 = this.Data.readInt32LE(this.tell);\n    this.seek(4);\n    const val = (BigInt(int2) << 32n) + BigInt(int1);\n    if (val > 1n << 52n) {\n      return val.toString();\n    }\n    return Number(val);\n  }\n  readInt16() {\n    let int = this.Data.readInt16LE(this.tell);\n    this.seek(2);\n    return int;\n  }\n  readUInt16() {\n    let int = this.Data.readUInt16LE(this.tell);\n    this.seek(2);\n    return int;\n  }\n  readInt8() {\n    let int = this.Data.readInt8(this.tell);\n    this.seek(1);\n    return int;\n  }\n  readUInt8() {\n    let int = this.Data.readUInt8(this.tell);\n    this.seek(1);\n    return int;\n  }\n  readFloat() {\n    let float = this.Data.readFloatLE(this.tell);\n    this.seek(4);\n    return float;\n  }\n  readString() {\n    let length = this.readInt32();\n    let str = this.read(length - 1).toString('latin1');\n    this.read(1);\n    return str;\n  }\n  readUnicodeString() {\n    let length = this.readInt32();\n    if (length < 0) {\n      let str = this.read(-length * 2 - 2).toString('utf16le');\n      this.read(2);\n      return [str, \"utf16le\"];\n    } else {\n      let str = this.read(length - 1).toString('latin1');\n      this.read(1);\n      return [str, \"latin1\"];\n    }\n  }\n  write(buf) {\n    this._offset += buf.copy(this.Data, this.tell);\n  }\n  writeInt64(num) {\n    let bi = BigInt.asIntN(64, BigInt(num));\n    let high = Number(bi >> 32n);\n    let low = Number(bi & (1n << 32n) - 1n);\n    this._offset = this.Data.writeUInt32LE(low, this.tell);\n    this._offset = this.Data.writeInt32LE(high, this.tell);\n    // TODO: this._offset = this.Data.writeBigInt64LE(num, this.tell);\n  }\n  writeUInt32(num) {\n    this._offset = this.Data.writeUInt32LE(num, this.tell);\n  }\n  writeInt32(num) {\n    this._offset = this.Data.writeInt32LE(num, this.tell);\n  }\n  writeUInt16(num) {\n    this._offset = this.Data.writeUInt16LE(num, this.tell);\n  }\n  writeInt16(num) {\n    this._offset = this.Data.writeInt16LE(num, this.tell);\n  }\n  writeUInt8(byte) {\n    this._offset = this.Data.writeUInt8(byte, this.tell);\n  }\n  writeInt8(byte) {\n    this._offset = this.Data.writeInt8(byte, this.tell);\n  }\n  writeFloat(num) {\n    this._offset = this.Data.writeFloatLE(num, this.tell);\n  }\n  writeString(str) {\n    this._offset = this.Data.writeInt32LE(str.length + 1, this.tell);\n    this._offset += this.Data.write(str, this.tell);\n    this._offset = this.Data.writeInt8(0, this.tell);\n  }\n  writeUTF16String(str) {\n    this._offset += this.Data.write(str + \"\\0\", this.tell, \"utf16le\");\n  }\n  writeLatin1String(str) {\n    this._offset += this.Data.write(str + \"\\0\", this.tell, \"latin1\");\n  }\n  append(buf) {\n    this._data = buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.concat([this.Data, buf]);\n    this._offset += buf.length;\n  }\n  static alloc(size) {\n    return new Serializer(buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.alloc(size));\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/Serializer.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/arrays/IntArray.js":
/*!******************************************************!*\
  !*** ./src/js/backend/UESaveTool/arrays/IntArray.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IntArray: () => (/* binding */ IntArray)\n/* harmony export */ });\n/* harmony import */ var _properties___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../properties/ */ \"./src/js/backend/UESaveTool/properties/index.js\");\n/* harmony import */ var _factories__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../factories */ \"./src/js/backend/UESaveTool/factories.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! .. */ \"./src/js/backend/UESaveTool/index.js\");\n/* harmony import */ var _Serializer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Serializer */ \"./src/js/backend/UESaveTool/Serializer.js\");\n\n\n\n\nclass IntArray extends _properties___WEBPACK_IMPORTED_MODULE_0__.Property {\n  constructor() {\n    super();\n    this.Type = \"IntProperty\";\n    this.Properties = [];\n  }\n  get Size() {\n    let size = this.Properties.length * 4;\n    this.Properties.forEach(int => {\n      size += int.Size;\n    });\n    return size;\n  }\n  get Count() {\n    return this.Properties.length;\n  }\n  deserialize(serial, count) {\n    serial.seek(count * 4);\n    for (let i = 1; i < count; i++) {\n      let Name = serial.readString();\n      let Type = serial.readString();\n      let Size = serial.readInt32();\n      let prop = _factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.create({\n        Name,\n        Type\n      });\n      prop.deserialize(serial);\n      this.Properties.push(prop);\n    }\n    return this;\n  }\n  serialize() {\n    let serial = _Serializer__WEBPACK_IMPORTED_MODULE_3__.Serializer.alloc(this.Size);\n    serial.seek(this.Count * 4);\n    this.Properties.forEach(int => serial.write(int.serialize()));\n    if (serial.tell !== this.Size) throw new ___WEBPACK_IMPORTED_MODULE_2__.SerializationError(this);\n    return serial.Data;\n  }\n  static from(obj) {\n    let array = new IntArray();\n    if (obj.Properties !== undefined) obj.Properties.forEach(int => array.Properties.push(_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.create(int)));\n    return array;\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/arrays/IntArray.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/arrays/SoftObjectArray.js":
/*!*************************************************************!*\
  !*** ./src/js/backend/UESaveTool/arrays/SoftObjectArray.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SoftObjectArray: () => (/* binding */ SoftObjectArray)\n/* harmony export */ });\n/* harmony import */ var _properties___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../properties/ */ \"./src/js/backend/UESaveTool/properties/index.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! .. */ \"./src/js/backend/UESaveTool/index.js\");\n/* harmony import */ var _Serializer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Serializer */ \"./src/js/backend/UESaveTool/Serializer.js\");\n\n\n\nclass SoftObjectArray extends _properties___WEBPACK_IMPORTED_MODULE_0__.Property {\n  constructor() {\n    super();\n    this.Type = \"SoftObjectProperty\";\n    this.Properties = [];\n  }\n  get Size() {\n    let size = 0;\n    this.Properties.forEach(str => {\n      size += str.length + 1 + 4;\n      size += 4;\n    });\n    return size;\n  }\n  get Count() {\n    return this.Properties.length;\n  }\n  deserialize(serial, count) {\n    for (let i = 0; i < count; i++) {\n      this.Properties.push(serial.readString());\n      serial.seek(4);\n    }\n    return this;\n  }\n  serialize() {\n    let serial = _Serializer__WEBPACK_IMPORTED_MODULE_2__.Serializer.alloc(this.Size);\n    this.Properties.forEach(str => {\n      serial.writeString(str);\n      serial.seek(4);\n    });\n    if (serial.tell !== this.Size) throw new ___WEBPACK_IMPORTED_MODULE_1__.SerializationError(this);\n    return serial.Data;\n  }\n  static from(obj) {\n    let array = new SoftObjectArray();\n    if (obj.Properties !== undefined) array.Properties = obj.Properties;\n    return array;\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/arrays/SoftObjectArray.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/arrays/StructArray.js":
/*!*********************************************************!*\
  !*** ./src/js/backend/UESaveTool/arrays/StructArray.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StructArray: () => (/* binding */ StructArray)\n/* harmony export */ });\n/* harmony import */ var _properties_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../properties/index.js */ \"./src/js/backend/UESaveTool/properties/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../index.js */ \"./src/js/backend/UESaveTool/index.js\");\n\n\nclass StructArray extends _properties_index_js__WEBPACK_IMPORTED_MODULE_0__.StructProperty {\n  deserialize(serial, count) {\n    // console.log(`Deserializing ${this.Name} Count: ${count}`)\n    this.Name = serial.readString();\n    this.Type = serial.readString();\n    let Size = serial.readInt32();\n    serial.seek(4);\n    this.StoredPropertyType = serial.readString();\n    serial.seek(17);\n    let i = 0;\n    while (i < count) {\n      let Name = this.StoredPropertyType;\n      let Type = 'Tuple';\n      let prop = _index_js__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.create({\n        Name,\n        Type\n      });\n      prop.deserialize(serial);\n      this.Properties.push(prop);\n      i++;\n    }\n    // console.log(`Done Deserializing ${this.Name} Offset: ${serial.tell}`)\n    return this;\n  }\n  static from(obj) {\n    let struct = new StructArray();\n    struct.Name = obj.Name;\n    struct.Type = obj.Type;\n    struct.StoredPropertyType = obj.StoredPropertyType;\n    struct.Properties = [];\n    if (obj.Properties !== undefined) obj.Properties.forEach(prop => struct.Properties.push(_index_js__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.create(prop)));\n    return struct;\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/arrays/StructArray.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/arrays/index.js":
/*!***************************************************!*\
  !*** ./src/js/backend/UESaveTool/arrays/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IntArray: () => (/* reexport safe */ _IntArray__WEBPACK_IMPORTED_MODULE_0__.IntArray),\n/* harmony export */   SoftObjectArray: () => (/* reexport safe */ _SoftObjectArray__WEBPACK_IMPORTED_MODULE_1__.SoftObjectArray),\n/* harmony export */   StructArray: () => (/* reexport safe */ _arrays_StructArray__WEBPACK_IMPORTED_MODULE_2__.StructArray)\n/* harmony export */ });\n/* harmony import */ var _IntArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./IntArray */ \"./src/js/backend/UESaveTool/arrays/IntArray.js\");\n/* harmony import */ var _SoftObjectArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SoftObjectArray */ \"./src/js/backend/UESaveTool/arrays/SoftObjectArray.js\");\n/* harmony import */ var _arrays_StructArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../arrays/StructArray */ \"./src/js/backend/UESaveTool/arrays/StructArray.js\");\n\n\n\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/arrays/index.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/factories.js":
/*!************************************************!*\
  !*** ./src/js/backend/UESaveTool/factories.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PropertyFactory: () => (/* binding */ PropertyFactory)\n/* harmony export */ });\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ \"./src/js/backend/UESaveTool/index.js\");\n\nclass Factory {\n  constructor() {\n    this.Properties = {};\n    this.Arrays = {};\n  }\n  create(obj) {\n    let type = obj.Type;\n    if (this.Properties[type] === undefined) throw new _index__WEBPACK_IMPORTED_MODULE_0__.TypeNotImplementedError(type);\n    return this.Properties[type].from(obj);\n  }\n  createArray(obj) {\n    let type = obj.Type;\n    if (this.Arrays[type] === undefined) throw new _index__WEBPACK_IMPORTED_MODULE_0__.TypeNotImplementedError(type);\n    return this.Arrays[type].from(obj);\n  }\n}\nconst PropertyFactory = new Factory();\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/factories.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/index.js":
/*!********************************************!*\
  !*** ./src/js/backend/UESaveTool/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ArrayProperty: () => (/* reexport safe */ _properties__WEBPACK_IMPORTED_MODULE_2__.ArrayProperty),\n/* harmony export */   BoolProperty: () => (/* reexport safe */ _properties__WEBPACK_IMPORTED_MODULE_2__.BoolProperty),\n/* harmony export */   DeserializationError: () => (/* reexport safe */ _PropertyErrors__WEBPACK_IMPORTED_MODULE_6__.DeserializationError),\n/* harmony export */   EnumProperty: () => (/* reexport safe */ _properties__WEBPACK_IMPORTED_MODULE_2__.EnumProperty),\n/* harmony export */   FloatProperty: () => (/* reexport safe */ _properties__WEBPACK_IMPORTED_MODULE_2__.FloatProperty),\n/* harmony export */   Guid: () => (/* reexport safe */ _properties__WEBPACK_IMPORTED_MODULE_2__.Guid),\n/* harmony export */   Gvas: () => (/* reexport safe */ _Gvas__WEBPACK_IMPORTED_MODULE_3__.Gvas),\n/* harmony export */   GvasHeader: () => (/* reexport safe */ _GvasHeader__WEBPACK_IMPORTED_MODULE_4__.GvasHeader),\n/* harmony export */   Int16Property: () => (/* reexport safe */ _properties__WEBPACK_IMPORTED_MODULE_2__.Int16Property),\n/* harmony export */   Int64Property: () => (/* reexport safe */ _properties__WEBPACK_IMPORTED_MODULE_2__.Int64Property),\n/* harmony export */   Int8Property: () => (/* reexport safe */ _properties__WEBPACK_IMPORTED_MODULE_2__.Int8Property),\n/* harmony export */   IntArray: () => (/* reexport safe */ _arrays__WEBPACK_IMPORTED_MODULE_0__.IntArray),\n/* harmony export */   IntProperty: () => (/* reexport safe */ _properties__WEBPACK_IMPORTED_MODULE_2__.IntProperty),\n/* harmony export */   ObjectProperty: () => (/* reexport safe */ _properties__WEBPACK_IMPORTED_MODULE_2__.ObjectProperty),\n/* harmony export */   Property: () => (/* reexport safe */ _properties__WEBPACK_IMPORTED_MODULE_2__.Property),\n/* harmony export */   PropertyFactory: () => (/* reexport safe */ _factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory),\n/* harmony export */   SerializationError: () => (/* reexport safe */ _PropertyErrors__WEBPACK_IMPORTED_MODULE_6__.SerializationError),\n/* harmony export */   Serializer: () => (/* reexport safe */ _Serializer__WEBPACK_IMPORTED_MODULE_5__.Serializer),\n/* harmony export */   SoftObjectArray: () => (/* reexport safe */ _arrays__WEBPACK_IMPORTED_MODULE_0__.SoftObjectArray),\n/* harmony export */   SoftObjectProperty: () => (/* reexport safe */ _properties__WEBPACK_IMPORTED_MODULE_2__.SoftObjectProperty),\n/* harmony export */   StrProperty: () => (/* reexport safe */ _properties__WEBPACK_IMPORTED_MODULE_2__.StrProperty),\n/* harmony export */   StructArray: () => (/* reexport safe */ _arrays__WEBPACK_IMPORTED_MODULE_0__.StructArray),\n/* harmony export */   StructProperty: () => (/* reexport safe */ _properties__WEBPACK_IMPORTED_MODULE_2__.StructProperty),\n/* harmony export */   Tuple: () => (/* reexport safe */ _properties__WEBPACK_IMPORTED_MODULE_2__.Tuple),\n/* harmony export */   TypeNotImplementedError: () => (/* reexport safe */ _PropertyErrors__WEBPACK_IMPORTED_MODULE_6__.TypeNotImplementedError),\n/* harmony export */   UInt32Property: () => (/* reexport safe */ _properties__WEBPACK_IMPORTED_MODULE_2__.UInt32Property)\n/* harmony export */ });\n/* harmony import */ var _arrays__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrays */ \"./src/js/backend/UESaveTool/arrays/index.js\");\n/* harmony import */ var _factories__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./factories */ \"./src/js/backend/UESaveTool/factories.js\");\n/* harmony import */ var _properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./properties */ \"./src/js/backend/UESaveTool/properties/index.js\");\n/* harmony import */ var _Gvas__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Gvas */ \"./src/js/backend/UESaveTool/Gvas.js\");\n/* harmony import */ var _GvasHeader__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./GvasHeader */ \"./src/js/backend/UESaveTool/GvasHeader.js\");\n/* harmony import */ var _Serializer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Serializer */ \"./src/js/backend/UESaveTool/Serializer.js\");\n/* harmony import */ var _PropertyErrors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./PropertyErrors */ \"./src/js/backend/UESaveTool/PropertyErrors.js\");\n\n\n\n_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.Properties['ArrayProperty'] = _properties__WEBPACK_IMPORTED_MODULE_2__.ArrayProperty;\n_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.Properties['BoolProperty'] = _properties__WEBPACK_IMPORTED_MODULE_2__.BoolProperty;\n_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.Properties['EnumProperty'] = _properties__WEBPACK_IMPORTED_MODULE_2__.EnumProperty;\n_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.Properties['FloatProperty'] = _properties__WEBPACK_IMPORTED_MODULE_2__.FloatProperty;\n_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.Properties['IntProperty'] = _properties__WEBPACK_IMPORTED_MODULE_2__.IntProperty;\n_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.Properties['UInt32Property'] = _properties__WEBPACK_IMPORTED_MODULE_2__.UInt32Property;\n_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.Properties['Int64Property'] = _properties__WEBPACK_IMPORTED_MODULE_2__.Int64Property;\n_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.Properties['UInt64Property'] = _properties__WEBPACK_IMPORTED_MODULE_2__.Int64Property;\n_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.Properties['Int8Property'] = _properties__WEBPACK_IMPORTED_MODULE_2__.Int8Property;\n_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.Properties['Int16Property'] = _properties__WEBPACK_IMPORTED_MODULE_2__.Int16Property;\n_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.Properties['ObjectProperty'] = _properties__WEBPACK_IMPORTED_MODULE_2__.ObjectProperty;\n_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.Properties['SoftObjectProperty'] = _properties__WEBPACK_IMPORTED_MODULE_2__.SoftObjectProperty;\n_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.Properties['StrProperty'] = _properties__WEBPACK_IMPORTED_MODULE_2__.StrProperty;\n_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.Properties['StructProperty'] = _properties__WEBPACK_IMPORTED_MODULE_2__.StructProperty;\n_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.Properties['Tuple'] = _properties__WEBPACK_IMPORTED_MODULE_2__.Tuple;\n_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.Properties['Guid'] = _properties__WEBPACK_IMPORTED_MODULE_2__.Guid;\n_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.Arrays['IntArray'] = _arrays__WEBPACK_IMPORTED_MODULE_0__.IntArray;\n_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.Arrays['SoftObjectArray'] = _arrays__WEBPACK_IMPORTED_MODULE_0__.SoftObjectArray;\n_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.Arrays['StructProperty'] = _arrays__WEBPACK_IMPORTED_MODULE_0__.StructArray;\n_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.Arrays['IntProperty'] = _arrays__WEBPACK_IMPORTED_MODULE_0__.IntArray;\n_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.Arrays['IntProperty'] = _arrays__WEBPACK_IMPORTED_MODULE_0__.IntArray;\n_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.Arrays['SoftObjectProperty'] = _arrays__WEBPACK_IMPORTED_MODULE_0__.SoftObjectArray;\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/index.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/properties/ArrayProperty.js":
/*!***************************************************************!*\
  !*** ./src/js/backend/UESaveTool/properties/ArrayProperty.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ArrayProperty: () => (/* binding */ ArrayProperty)\n/* harmony export */ });\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ \"./src/js/backend/UESaveTool/properties/index.js\");\n/* harmony import */ var _factories__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../factories */ \"./src/js/backend/UESaveTool/factories.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ */ \"./src/js/backend/UESaveTool/index.js\");\n/* harmony import */ var _Serializer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Serializer */ \"./src/js/backend/UESaveTool/Serializer.js\");\n\n\n\n\n\nclass ArrayProperty extends ___WEBPACK_IMPORTED_MODULE_1__.Property {\n  constructor() {\n    super();\n    this.StoredPropertyType = \"\";\n    this.Property = new ___WEBPACK_IMPORTED_MODULE_1__.Property();\n  }\n  get Size() {\n    let size = 0;\n    size += this.Name.length + 1 + 4;\n    size += this.Type.length + 1 + 4;\n    size += 8; // 4 byte size + 4 byte padding\n    size += this.StoredPropertyType.length + 1 + 4;\n    size += 5; // 1 byte padding + 2 byte int + 2 byte padding\n    size += this.Property.Size;\n    return size;\n  }\n  get HeaderSize() {\n    let size = this.Name.length + 1 + 4;\n    size += this.Type.length + 1 + 4;\n    size += 8;\n    size += this.StoredPropertyType.length + 1 + 4;\n    size += 1;\n    return size;\n  }\n  get ArraySize() {\n    if (this.StoredPropertyType === 'IntProperty') return 12;else return this.Size - this.HeaderSize;\n  }\n  deserialize(serial) {\n    serial.seek(4);\n    this.StoredPropertyType = serial.readString();\n    serial.seek(1);\n    let count = serial.readInt16();\n    serial.seek(2);\n    this.Property = _factories__WEBPACK_IMPORTED_MODULE_2__.PropertyFactory.createArray({\n      Name: this.Name,\n      Type: this.StoredPropertyType\n    });\n    this.Property.deserialize(serial, count);\n    return this;\n  }\n  serialize() {\n    let serial = _Serializer__WEBPACK_IMPORTED_MODULE_4__.Serializer.alloc(this.Size);\n    serial.writeString(this.Name);\n    serial.writeString(this.Type);\n    serial.writeInt32(this.ArraySize);\n    serial.seek(4);\n    serial.writeString(this.StoredPropertyType);\n    serial.seek(1);\n    serial.writeInt16(this.Property.Count);\n    serial.seek(2);\n    serial.write(this.Property.serialize());\n    if (serial.tell !== this.Size) throw new ___WEBPACK_IMPORTED_MODULE_3__.SerializationError(this);\n    return serial.Data;\n  }\n  static from(obj) {\n    let array = new ArrayProperty();\n    array.Name = obj.Name;\n    array.Type = obj.Type;\n    array.StoredPropertyType = obj.StoredPropertyType;\n    if (obj.Property !== undefined) array.Property = _factories__WEBPACK_IMPORTED_MODULE_2__.PropertyFactory.createArray(obj.Property);\n    return array;\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/properties/ArrayProperty.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/properties/BoolProperty.js":
/*!**************************************************************!*\
  !*** ./src/js/backend/UESaveTool/properties/BoolProperty.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BoolProperty: () => (/* binding */ BoolProperty)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"./src/js/backend/UESaveTool/properties/index.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! .. */ \"./src/js/backend/UESaveTool/index.js\");\n/* harmony import */ var _PropertyErrors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../PropertyErrors */ \"./src/js/backend/UESaveTool/PropertyErrors.js\");\n\n\n\nclass BoolProperty extends ___WEBPACK_IMPORTED_MODULE_0__.Property {\n  constructor() {\n    super();\n    this.Property = false;\n  }\n  get Size() {\n    return this.Name.length + 1 + 4 + this.Type.length + 1 + 4 + 10;\n  }\n  deserialize(serial) {\n    serial.seek(4);\n    this.Property = serial.readUInt8() === 1;\n    serial.seek(1);\n    return this;\n  }\n  serialize() {\n    let serial = ___WEBPACK_IMPORTED_MODULE_1__.Serializer.alloc(this.Size);\n    serial.writeString(this.Name);\n    serial.writeString(this.Type);\n    serial.seek(8);\n    serial.writeUInt8(this.Property === true ? 1 : 0);\n    serial.seek(1);\n    if (serial.tell !== this.Size) throw new _PropertyErrors__WEBPACK_IMPORTED_MODULE_2__.SerializationError(this);\n    return serial.Data;\n  }\n  static from(obj) {\n    let prop = new BoolProperty();\n    obj.Property = !!obj.Property;\n    Object.assign(prop, obj);\n    return prop;\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/properties/BoolProperty.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/properties/EnumProperty.js":
/*!**************************************************************!*\
  !*** ./src/js/backend/UESaveTool/properties/EnumProperty.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EnumProperty: () => (/* binding */ EnumProperty)\n/* harmony export */ });\n/* harmony import */ var _Serializer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Serializer */ \"./src/js/backend/UESaveTool/Serializer.js\");\n/* harmony import */ var _PropertyErrors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../PropertyErrors */ \"./src/js/backend/UESaveTool/PropertyErrors.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! . */ \"./src/js/backend/UESaveTool/properties/index.js\");\n\n\n\nclass EnumProperty extends ___WEBPACK_IMPORTED_MODULE_2__.Property {\n  constructor() {\n    super();\n    this.EnumType = \"\";\n    this.Property = \"\";\n  }\n  get Size() {\n    return this.Name.length + 1 + 4 + this.Type.length + 1 + 4 + this.Property.length + 1 + 4 + this.EnumType.length + 1 + 4 + 9;\n  }\n  deserialize(serial) {\n    serial.seek(4);\n    this.EnumType = serial.readString();\n    serial.seek(1);\n    this.Property = serial.readString();\n    return this;\n  }\n  serialize() {\n    let serial = _Serializer__WEBPACK_IMPORTED_MODULE_0__.Serializer.alloc(this.Size);\n    serial.writeString(this.Name);\n    serial.writeString(this.Type);\n    serial.writeInt32(this.Property.length + 1 + 4);\n    serial.seek(4);\n    serial.writeString(this.EnumType);\n    serial.seek(1);\n    serial.writeString(this.Property);\n    if (serial.tell !== this.Size) throw new _PropertyErrors__WEBPACK_IMPORTED_MODULE_1__.SerializationError(this);\n    return serial.Data;\n  }\n  static from(obj) {\n    let prop = new EnumProperty();\n    Object.assign(prop, obj);\n    return prop;\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/properties/EnumProperty.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/properties/FloatProperty.js":
/*!***************************************************************!*\
  !*** ./src/js/backend/UESaveTool/properties/FloatProperty.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FloatProperty: () => (/* binding */ FloatProperty)\n/* harmony export */ });\n/* harmony import */ var _Serializer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Serializer */ \"./src/js/backend/UESaveTool/Serializer.js\");\n/* harmony import */ var _PropertyErrors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../PropertyErrors */ \"./src/js/backend/UESaveTool/PropertyErrors.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ */ \"./src/js/backend/UESaveTool/properties/index.js\");\n\n\n\nclass FloatProperty extends ___WEBPACK_IMPORTED_MODULE_2__.Property {\n  constructor() {\n    super();\n    this.Property = 0;\n    this.Index = 0;\n  }\n  get Size() {\n    return this.Name.length + 1 + 4 + this.Type.length + 1 + 4 + 13;\n  }\n  deserialize(serial) {\n    this.Index = serial.readInt32();\n    serial.seek(1);\n    this.Property = serial.readFloat();\n    return this;\n  }\n  serialize() {\n    let serial = _Serializer__WEBPACK_IMPORTED_MODULE_0__.Serializer.alloc(this.Size);\n    serial.writeString(this.Name);\n    serial.writeString(this.Type);\n    serial.writeInt32(4);\n    serial.writeInt32(this.Index);\n    serial.seek(1);\n    serial.writeFloat(this.Property);\n    if (serial.tell !== this.Size) throw new _PropertyErrors__WEBPACK_IMPORTED_MODULE_1__.SerializationError(this);\n    return serial.Data;\n  }\n  static from(obj) {\n    let prop = new FloatProperty();\n    obj.Property = Number(obj.Property);\n    Object.assign(prop, obj);\n    return prop;\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/properties/FloatProperty.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/properties/Guid.js":
/*!******************************************************!*\
  !*** ./src/js/backend/UESaveTool/properties/Guid.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Guid: () => (/* binding */ Guid)\n/* harmony export */ });\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ \"./src/js/backend/UESaveTool/properties/index.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! .. */ \"./src/js/backend/UESaveTool/index.js\");\n/* harmony import */ var _Serializer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Serializer */ \"./src/js/backend/UESaveTool/Serializer.js\");\n\n\n\n\nclass Guid extends ___WEBPACK_IMPORTED_MODULE_1__.Property {\n  constructor() {\n    super();\n    this.Type = 'Guid';\n    this.Id = \"00000000-00-00-00-000000000000\";\n    this.Value = 0;\n  }\n  get Size() {\n    return 20;\n  }\n  deserialize(serial) {\n    this.Id = `${serial.read(4).swap32().toString('hex')}`;\n    this.Id += `-${serial.read(2).swap16().toString('hex')}`;\n    this.Id += `-${serial.read(2).swap16().toString('hex')}`;\n    this.Id += `-${serial.read(2).toString('hex')}`;\n    this.Id += `-${serial.read(6).toString('hex')}`;\n    this.Value = serial.readInt32();\n    return this;\n  }\n  serialize() {\n    let guid = this.Id.split('-');\n    let serial = _Serializer__WEBPACK_IMPORTED_MODULE_3__.Serializer.alloc(this.Size);\n    serial.write(buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(guid[0], 'hex').swap32());\n    serial.write(buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(guid[1], 'hex').swap16());\n    serial.write(buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(guid[2], 'hex').swap16());\n    serial.write(buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(guid[3], 'hex'));\n    serial.write(buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(guid[4], 'hex'));\n    serial.writeInt32(this.Value);\n    if (serial.tell !== 20) throw new ___WEBPACK_IMPORTED_MODULE_2__.SerializationError(this);\n    return serial.Data;\n  }\n  static from(obj) {\n    let guid = new Guid();\n    guid.Id = obj.Id;\n    guid.Value = obj.Value;\n    return guid;\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/properties/Guid.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/properties/Int16Property.js":
/*!***************************************************************!*\
  !*** ./src/js/backend/UESaveTool/properties/Int16Property.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Int16Property: () => (/* binding */ Int16Property)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"./src/js/backend/UESaveTool/properties/index.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! .. */ \"./src/js/backend/UESaveTool/index.js\");\n/* harmony import */ var _PropertyErrors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../PropertyErrors */ \"./src/js/backend/UESaveTool/PropertyErrors.js\");\n\n\n\nclass Int16Property extends ___WEBPACK_IMPORTED_MODULE_0__.Property {\n  constructor() {\n    super();\n    this.Property = 0;\n    this.Index = 0;\n  }\n  get Size() {\n    return this.Name.length + 1 + 4 + this.Type.length + 1 + 4 + 9 + 2;\n  }\n  deserialize(serial) {\n    this.Index = serial.readInt32();\n    serial.seek(1);\n    this.Property = serial.readInt16();\n    return this;\n  }\n  serialize() {\n    let serial = ___WEBPACK_IMPORTED_MODULE_1__.Serializer.alloc(this.Size);\n    serial.writeString(this.Name);\n    serial.writeString(this.Type);\n    serial.writeInt32(4);\n    serial.writeInt32(this.Index);\n    serial.seek(1);\n    serial.writeInt16(this.Property);\n    if (serial.tell !== this.Size) throw new _PropertyErrors__WEBPACK_IMPORTED_MODULE_2__.SerializationError(this);\n    return serial.Data;\n  }\n  static from(obj) {\n    let prop = new Int16Property();\n    obj.Property = obj.Property || 0;\n    const lb = -1 << 15;\n    const ub = (1 << 15) - 1;\n    if (obj.Property > ub || obj.Property < lb) {\n      throw Error(`${obj.Name} = ${obj.Property} out of range [${lb}, ${ub}]`);\n    }\n    Object.assign(prop, obj);\n    return prop;\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/properties/Int16Property.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/properties/Int64Property.js":
/*!***************************************************************!*\
  !*** ./src/js/backend/UESaveTool/properties/Int64Property.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Int64Property: () => (/* binding */ Int64Property)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"./src/js/backend/UESaveTool/properties/index.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! .. */ \"./src/js/backend/UESaveTool/index.js\");\n/* harmony import */ var _PropertyErrors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../PropertyErrors */ \"./src/js/backend/UESaveTool/PropertyErrors.js\");\n\n\n\nclass Int64Property extends ___WEBPACK_IMPORTED_MODULE_0__.Property {\n  constructor() {\n    super();\n    this.Property = 0n;\n    this.Index = 0;\n  }\n  get Size() {\n    return this.Name.length + 1 + 4 + this.Type.length + 1 + 4 + 9 + 8;\n  }\n  deserialize(serial) {\n    this.Index = serial.readInt32();\n    serial.seek(1);\n    this.Property = serial.readInt64();\n    return this;\n  }\n  serialize() {\n    let serial = ___WEBPACK_IMPORTED_MODULE_1__.Serializer.alloc(this.Size);\n    serial.writeString(this.Name);\n    serial.writeString(this.Type);\n    serial.writeInt32(4);\n    serial.writeInt32(this.Index);\n    serial.seek(1);\n    serial.writeInt64(this.Property);\n    if (serial.tell !== this.Size) throw new _PropertyErrors__WEBPACK_IMPORTED_MODULE_2__.SerializationError(this);\n    return serial.Data;\n  }\n  static from(obj) {\n    let prop = new Int64Property();\n    let bi = 0n;\n    try {\n      bi = BigInt(obj.Property || 0);\n      const lb = -1n << 64n;\n      const ub = (1n << 63n) - 1n;\n      if (bi > ub || bi < lb) {\n        throw Error(`out of range [${lb}, ${ub}]`);\n      }\n      const doubleVal = Number(obj.Property);\n      if (Math.abs(doubleVal) >= 2 ** 53) {\n        obj.Property = BigInt(obj.Property).toString();\n      } else {\n        obj.Property = Number(obj.Property);\n      }\n    } catch (e) {\n      throw Error(`${obj.Name} = ${obj.Property}: ${e.toString()}`);\n    }\n    Object.assign(prop, obj);\n    return prop;\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/properties/Int64Property.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/properties/Int8Property.js":
/*!**************************************************************!*\
  !*** ./src/js/backend/UESaveTool/properties/Int8Property.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Int8Property: () => (/* binding */ Int8Property)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"./src/js/backend/UESaveTool/properties/index.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! .. */ \"./src/js/backend/UESaveTool/index.js\");\n/* harmony import */ var _PropertyErrors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../PropertyErrors */ \"./src/js/backend/UESaveTool/PropertyErrors.js\");\n\n\n\nclass Int8Property extends ___WEBPACK_IMPORTED_MODULE_0__.Property {\n  constructor() {\n    super();\n    this.Property = 0;\n    this.Index = 0;\n  }\n  get Size() {\n    return this.Name.length + 1 + 4 + this.Type.length + 1 + 4 + 9 + 1;\n  }\n  deserialize(serial) {\n    this.Index = serial.readInt32();\n    serial.seek(1);\n    this.Property = serial.readInt8();\n    return this;\n  }\n  serialize() {\n    let serial = ___WEBPACK_IMPORTED_MODULE_1__.Serializer.alloc(this.Size);\n    serial.writeString(this.Name);\n    serial.writeString(this.Type);\n    serial.writeInt32(4);\n    serial.writeInt32(this.Index);\n    serial.seek(1);\n    serial.writeInt8(this.Property);\n    if (serial.tell !== this.Size) throw new _PropertyErrors__WEBPACK_IMPORTED_MODULE_2__.SerializationError(this);\n    return serial.Data;\n  }\n  static from(obj) {\n    let prop = new Int8Property();\n    obj.Property = obj.Property || 0;\n    const lb = -128;\n    const ub = 127;\n    if (obj.Property > ub || obj.Property < lb) {\n      throw Error(`${obj.Name} = ${obj.Property} out of range [${lb}, ${ub}]`);\n    }\n    Object.assign(prop, obj);\n    return prop;\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/properties/Int8Property.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/properties/IntProperty.js":
/*!*************************************************************!*\
  !*** ./src/js/backend/UESaveTool/properties/IntProperty.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IntProperty: () => (/* binding */ IntProperty),\n/* harmony export */   UInt32Property: () => (/* binding */ UInt32Property)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"./src/js/backend/UESaveTool/properties/index.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! .. */ \"./src/js/backend/UESaveTool/index.js\");\n/* harmony import */ var _PropertyErrors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../PropertyErrors */ \"./src/js/backend/UESaveTool/PropertyErrors.js\");\n\n\n\nclass IntProperty extends ___WEBPACK_IMPORTED_MODULE_0__.Property {\n  constructor() {\n    super();\n    this.Property = 0;\n    this.Index = 0;\n  }\n  get Size() {\n    return this.Name.length + 1 + 4 + this.Type.length + 1 + 4 + 9 + 4;\n  }\n  deserialize(serial) {\n    this.Index = serial.readInt32();\n    serial.seek(1);\n    this.Property = serial.readInt32();\n    return this;\n  }\n  serialize() {\n    let serial = ___WEBPACK_IMPORTED_MODULE_1__.Serializer.alloc(this.Size);\n    serial.writeString(this.Name);\n    serial.writeString(this.Type);\n    serial.writeInt32(4);\n    serial.writeInt32(this.Index);\n    serial.seek(1);\n    serial.writeInt32(this.Property);\n    if (serial.tell !== this.Size) throw new _PropertyErrors__WEBPACK_IMPORTED_MODULE_2__.SerializationError(this);\n    return serial.Data;\n  }\n  static from(obj) {\n    let prop = new IntProperty();\n    obj.Property = obj.Property || 0;\n    const lb = -1 << 31;\n    const ub = 0x7fffffff;\n    if (obj.Property > ub || obj.Property < lb) {\n      throw Error(`${obj.Name} = ${obj.Property} out of range [${lb}, ${ub}]`);\n    }\n    Object.assign(prop, obj);\n    return prop;\n  }\n}\nclass UInt32Property extends ___WEBPACK_IMPORTED_MODULE_0__.Property {\n  constructor() {\n    super();\n    this.Property = 0;\n    this.Index = 0;\n  }\n  get Size() {\n    return this.Name.length + 1 + 4 + this.Type.length + 1 + 4 + 9 + 4;\n  }\n  deserialize(serial) {\n    this.Index = serial.readInt32();\n    serial.seek(1);\n    this.Property = serial.readUInt32();\n    return this;\n  }\n  serialize() {\n    let serial = ___WEBPACK_IMPORTED_MODULE_1__.Serializer.alloc(this.Size);\n    serial.writeString(this.Name);\n    serial.writeString(this.Type);\n    serial.writeInt32(4);\n    serial.writeInt32(this.Index);\n    serial.seek(1);\n    serial.writeUInt32(this.Property);\n    if (serial.tell !== this.Size) throw new _PropertyErrors__WEBPACK_IMPORTED_MODULE_2__.SerializationError(this);\n    return serial.Data;\n  }\n  static from(obj) {\n    let prop = new IntProperty();\n    obj.Property = obj.Property || 0;\n    const lb = 0;\n    const ub = 0xffffffff;\n    if (obj.Property > ub || obj.Property < lb) {\n      throw Error(`${obj.Name} = ${obj.Property} out of range [${lb}, ${ub}]`);\n    }\n    Object.assign(prop, obj);\n    return prop;\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/properties/IntProperty.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/properties/ObjectProperty.js":
/*!****************************************************************!*\
  !*** ./src/js/backend/UESaveTool/properties/ObjectProperty.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ObjectProperty: () => (/* binding */ ObjectProperty)\n/* harmony export */ });\n/* harmony import */ var _Serializer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Serializer */ \"./src/js/backend/UESaveTool/Serializer.js\");\n/* harmony import */ var _PropertyErrors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../PropertyErrors */ \"./src/js/backend/UESaveTool/PropertyErrors.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ */ \"./src/js/backend/UESaveTool/properties/index.js\");\n\n\n\nclass ObjectProperty extends ___WEBPACK_IMPORTED_MODULE_2__.Property {\n  constructor() {\n    super();\n    this.Property = \"\";\n  }\n  get Size() {\n    return this.Name.length + 1 + 4 + this.Type.length + 1 + 4 + this.Property.length + 1 + 4 + 9;\n  }\n  deserialize(serial) {\n    serial.seek(5);\n    this.Property = serial.readString();\n    return this;\n  }\n  serialize() {\n    let serial = _Serializer__WEBPACK_IMPORTED_MODULE_0__.Serializer.alloc(this.Size);\n    serial.writeString(this.Name);\n    serial.writeString(this.Type);\n    serial.writeInt32(this.Property.length + 1 + 4);\n    serial.seek(5);\n    serial.writeString(this.Property);\n    if (serial.tell !== this.Size) throw new _PropertyErrors__WEBPACK_IMPORTED_MODULE_1__.SerializationError(this);\n    return serial.Data;\n  }\n  static from(obj) {\n    let prop = new ObjectProperty();\n    Object.assign(prop, obj);\n    return prop;\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/properties/ObjectProperty.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/properties/Property.js":
/*!**********************************************************!*\
  !*** ./src/js/backend/UESaveTool/properties/Property.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Property: () => (/* binding */ Property)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ */ \"./src/js/backend/UESaveTool/index.js\");\n\nclass Property {\n  constructor() {\n    this.Name = \"\";\n    this.Type = \"\";\n  }\n  /**\r\n   * Per-property byte size getter\r\n   * @returns {Number} `Size` in bytes of all attributes and properties held by this property to be serialized\r\n   */\n  get Size() {\n    throw new Error(`Size getter not implemented for property: ${this.Type}`);\n  }\n  /**\r\n   * Per-property deserialization function\r\n   * @param {Serializer} serial Serializer instance used to read a buffer\r\n   * @param {Number} size Size in bytes or Count of elements for Arrays\r\n   * @returns {Property} Returns `this` instance\r\n   */\n  deserialize(serial, size) {\n    throw new Error(`Deserialization not implemented for property: ${this.Type}`);\n  }\n  /**\r\n   * Per-property serialization function\r\n   * @returns {Buffer} Returns a `Buffer` of the serialized data\r\n   */\n  serialize() {\n    throw new Error(`Serialization not implemented for property: ${this.Type}`);\n  }\n  /**\r\n   * Factory function for a `Property` type. This should instantiate a `new Property` with default values if not given in the `json`\r\n   * @param {Object} json Template from which to create a new instance of a `Property`\r\n   */\n  static from(json) {\n    throw new Error(`from() not implemented for property: ${this.Type}`);\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/properties/Property.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/properties/SoftObjectProperty.js":
/*!********************************************************************!*\
  !*** ./src/js/backend/UESaveTool/properties/SoftObjectProperty.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SoftObjectProperty: () => (/* binding */ SoftObjectProperty)\n/* harmony export */ });\n/* harmony import */ var _PropertyErrors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../PropertyErrors */ \"./src/js/backend/UESaveTool/PropertyErrors.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ */ \"./src/js/backend/UESaveTool/properties/index.js\");\n/* harmony import */ var _Serializer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Serializer */ \"./src/js/backend/UESaveTool/Serializer.js\");\n\n\n\nclass SoftObjectProperty extends ___WEBPACK_IMPORTED_MODULE_1__.Property {\n  constructor() {\n    super();\n    this.Property = \"\";\n  }\n  get Size() {\n    return this.Name.length + 1 + 4 + this.Type.length + 1 + 4 + this.Property.length + 1 + 4 + 13;\n  }\n  deserialize(serial) {\n    serial.seek(5);\n    this.Property = serial.readString();\n    serial.seek(4);\n    return this;\n  }\n  serialize() {\n    let serial = _Serializer__WEBPACK_IMPORTED_MODULE_2__.Serializer.alloc(this.Size);\n    serial.writeString(this.Name);\n    serial.writeString(this.Type);\n    serial.writeInt32(this.Property.length + 8);\n    serial.seek(5);\n    serial.writeString(this.Property);\n    serial.seek(4);\n    if (serial.tell !== this.Size) throw new _PropertyErrors__WEBPACK_IMPORTED_MODULE_0__.SerializationError(this);\n    return serial.Data;\n  }\n  static from(obj) {\n    let prop = new SoftObjectProperty();\n    Object.assign(prop, obj);\n    return prop;\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/properties/SoftObjectProperty.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/properties/StrProperty.js":
/*!*************************************************************!*\
  !*** ./src/js/backend/UESaveTool/properties/StrProperty.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StrProperty: () => (/* binding */ StrProperty)\n/* harmony export */ });\n/* harmony import */ var _PropertyErrors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../PropertyErrors */ \"./src/js/backend/UESaveTool/PropertyErrors.js\");\n/* harmony import */ var _Serializer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Serializer */ \"./src/js/backend/UESaveTool/Serializer.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ */ \"./src/js/backend/UESaveTool/properties/index.js\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\");\n\n\n\n\nconst is8Bit = string => /^[\\x00-\\xFF]*$/.test(string);\nclass StrProperty extends ___WEBPACK_IMPORTED_MODULE_2__.Property {\n  constructor() {\n    super();\n    this.Property = \"\";\n  }\n  get Encoding() {\n    return is8Bit(this.Property) ? \"latin1\" : \"utf16le\";\n  }\n  get StringEncodedLength() {\n    return buffer__WEBPACK_IMPORTED_MODULE_3__.Buffer.from(this.Property + \"\\0\", this.Encoding).length;\n  }\n  get Size() {\n    const baseLength = this.Name.length + 1 + 4 + this.Type.length + 1 + 4;\n    return baseLength + this.StringEncodedLength + 4 + 9;\n  }\n  deserialize(serial) {\n    serial.seek(5);\n    [this.Property] = serial.readUnicodeString();\n    return this;\n  }\n  serialize() {\n    let serial = _Serializer__WEBPACK_IMPORTED_MODULE_1__.Serializer.alloc(this.Size);\n    serial.writeString(this.Name);\n    serial.writeString(this.Type);\n    serial.writeInt32(this.StringEncodedLength + 4);\n    serial.seek(5);\n    switch (this.Encoding) {\n      case \"latin1\":\n        serial.writeInt32(this.StringEncodedLength);\n        serial.writeLatin1String(this.Property);\n        break;\n      case \"utf16le\":\n        serial.writeInt32(-(this.StringEncodedLength / 2));\n        serial.writeUTF16String(this.Property);\n        break;\n    }\n    if (serial.tell !== this.Size) throw new _PropertyErrors__WEBPACK_IMPORTED_MODULE_0__.SerializationError(this);\n    return serial.Data;\n  }\n  static from(obj) {\n    let prop = new StrProperty();\n    Object.assign(prop, obj);\n    return prop;\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/properties/StrProperty.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/properties/StructProperty.js":
/*!****************************************************************!*\
  !*** ./src/js/backend/UESaveTool/properties/StructProperty.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StructProperty: () => (/* binding */ StructProperty)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"./src/js/backend/UESaveTool/properties/index.js\");\n/* harmony import */ var _factories__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../factories */ \"./src/js/backend/UESaveTool/factories.js\");\n/* harmony import */ var _Serializer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Serializer */ \"./src/js/backend/UESaveTool/Serializer.js\");\n\n\n\nclass StructProperty extends ___WEBPACK_IMPORTED_MODULE_0__.Property {\n  constructor() {\n    super();\n    this.StoredPropertyType = \"\";\n    this.Properties = [];\n  }\n  get Size() {\n    let size = this.Name.length + 1 + 4;\n    size += this.Type.length + 1 + 4;\n    size += 8; // 4 byte size + 4 byte padding\n    size += this.StoredPropertyType.length + 1 + 4;\n    size += 17; // 17 byte padding\n    for (let i = 0; i < this.Properties.length; i++) {\n      size += this.Properties[i].Size;\n    }\n    return size;\n  }\n  get HeaderSize() {\n    let size = this.Name.length + 1 + 4;\n    size += this.Type.length + 1 + 4;\n    size += 8;\n    size += this.StoredPropertyType.length + 1 + 4;\n    size += 17;\n    return size;\n  }\n  get Count() {\n    return this.Properties.length;\n  }\n  deserialize(serial, size) {\n    // console.log(`Deserializing ${this.Name} Size: ${size}`)\n    serial.seek(4);\n    this.StoredPropertyType = serial.readString();\n    serial.seek(17);\n    let end = serial.tell + size;\n    let i = 0;\n    while (serial.tell < end) {\n      let Name = this.StoredPropertyType;\n      let Type = 'Tuple';\n      let prop = _factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.create({\n        Name,\n        Type\n      });\n      prop.deserialize(serial);\n      this.Properties.push(prop);\n      i++;\n    }\n    // console.log(`Done Deserializing ${this.Name} Offset: ${serial.tell}`)\n    return this;\n  }\n  serialize() {\n    let serial = _Serializer__WEBPACK_IMPORTED_MODULE_2__.Serializer.alloc(this.Size);\n    serial.writeString(this.Name);\n    serial.writeString(this.Type);\n    serial.writeInt32(this.Size - this.HeaderSize);\n    serial.seek(4);\n    serial.writeString(this.StoredPropertyType);\n    serial.seek(17);\n    for (let i = 0; i < this.Properties.length; i++) {\n      serial.write(this.Properties[i].serialize());\n    }\n    if (serial.tell !== this.Size) throw new SerializationError(this);\n    return serial.Data;\n  }\n  static from(obj) {\n    let struct = new StructProperty();\n    struct.Name = obj.Name;\n    struct.Type = obj.Type;\n    struct.StoredPropertyType = obj.StoredPropertyType;\n    struct.Properties = [];\n    if (obj.Properties !== undefined) obj.Properties.forEach(prop => struct.Properties.push(_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.create(prop)));\n    return struct;\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/properties/StructProperty.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/properties/Tuple.js":
/*!*******************************************************!*\
  !*** ./src/js/backend/UESaveTool/properties/Tuple.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Tuple: () => (/* binding */ Tuple)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ */ \"./src/js/backend/UESaveTool/properties/index.js\");\n/* harmony import */ var _factories__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../factories */ \"./src/js/backend/UESaveTool/factories.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! .. */ \"./src/js/backend/UESaveTool/index.js\");\n/* harmony import */ var _Serializer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Serializer */ \"./src/js/backend/UESaveTool/Serializer.js\");\n\n\n\n\nclass Tuple extends ___WEBPACK_IMPORTED_MODULE_0__.Property {\n  constructor() {\n    super();\n    this.Type = 'Tuple';\n    this.Properties = [];\n  }\n  get Size() {\n    let size = 0;\n    for (let i = 0; i < this.Properties.length; i++) {\n      size += this.Properties[i].Size;\n    }\n    size += 9;\n    return size;\n  }\n  get Count() {\n    return this.Properties.length;\n  }\n  deserialize(serial) {\n    let Name;\n    while ((Name = serial.readString()) !== 'None') {\n      let Type = serial.readString();\n      let Size = serial.readInt32();\n      let prop = _factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.create({\n        Name,\n        Type\n      });\n      prop.deserialize(serial, Size);\n      this.Properties.push(prop);\n    }\n    return this;\n  }\n  serialize() {\n    let serial = _Serializer__WEBPACK_IMPORTED_MODULE_3__.Serializer.alloc(this.Size);\n    for (let i = 0; i < this.Properties.length; i++) {\n      serial.write(this.Properties[i].serialize());\n    }\n    serial.writeString('None');\n    if (serial.tell !== this.Size) throw new ___WEBPACK_IMPORTED_MODULE_2__.SerializationError(this);\n    return serial.Data;\n  }\n  static from(obj) {\n    let tuple = new Tuple();\n    tuple.Name = obj.Name;\n    if (obj.Properties !== undefined) obj.Properties.forEach(prop => tuple.Properties.push(_factories__WEBPACK_IMPORTED_MODULE_1__.PropertyFactory.create(prop)));\n    return tuple;\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/properties/Tuple.js?");

/***/ }),

/***/ "./src/js/backend/UESaveTool/properties/index.js":
/*!*******************************************************!*\
  !*** ./src/js/backend/UESaveTool/properties/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ArrayProperty: () => (/* reexport safe */ _ArrayProperty__WEBPACK_IMPORTED_MODULE_11__.ArrayProperty),\n/* harmony export */   BoolProperty: () => (/* reexport safe */ _BoolProperty__WEBPACK_IMPORTED_MODULE_1__.BoolProperty),\n/* harmony export */   EnumProperty: () => (/* reexport safe */ _EnumProperty__WEBPACK_IMPORTED_MODULE_12__.EnumProperty),\n/* harmony export */   FloatProperty: () => (/* reexport safe */ _FloatProperty__WEBPACK_IMPORTED_MODULE_6__.FloatProperty),\n/* harmony export */   Guid: () => (/* reexport safe */ _Guid__WEBPACK_IMPORTED_MODULE_14__.Guid),\n/* harmony export */   Int16Property: () => (/* reexport safe */ _Int16Property__WEBPACK_IMPORTED_MODULE_4__.Int16Property),\n/* harmony export */   Int64Property: () => (/* reexport safe */ _Int64Property__WEBPACK_IMPORTED_MODULE_5__.Int64Property),\n/* harmony export */   Int8Property: () => (/* reexport safe */ _Int8Property__WEBPACK_IMPORTED_MODULE_3__.Int8Property),\n/* harmony export */   IntProperty: () => (/* reexport safe */ _IntProperty__WEBPACK_IMPORTED_MODULE_2__.IntProperty),\n/* harmony export */   ObjectProperty: () => (/* reexport safe */ _ObjectProperty__WEBPACK_IMPORTED_MODULE_8__.ObjectProperty),\n/* harmony export */   Property: () => (/* reexport safe */ _Property__WEBPACK_IMPORTED_MODULE_0__.Property),\n/* harmony export */   SoftObjectProperty: () => (/* reexport safe */ _SoftObjectProperty__WEBPACK_IMPORTED_MODULE_9__.SoftObjectProperty),\n/* harmony export */   StrProperty: () => (/* reexport safe */ _StrProperty__WEBPACK_IMPORTED_MODULE_7__.StrProperty),\n/* harmony export */   StructProperty: () => (/* reexport safe */ _StructProperty__WEBPACK_IMPORTED_MODULE_10__.StructProperty),\n/* harmony export */   Tuple: () => (/* reexport safe */ _Tuple__WEBPACK_IMPORTED_MODULE_13__.Tuple),\n/* harmony export */   UInt32Property: () => (/* reexport safe */ _IntProperty__WEBPACK_IMPORTED_MODULE_2__.UInt32Property)\n/* harmony export */ });\n/* harmony import */ var _Property__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Property */ \"./src/js/backend/UESaveTool/properties/Property.js\");\n/* harmony import */ var _BoolProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BoolProperty */ \"./src/js/backend/UESaveTool/properties/BoolProperty.js\");\n/* harmony import */ var _IntProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./IntProperty */ \"./src/js/backend/UESaveTool/properties/IntProperty.js\");\n/* harmony import */ var _Int8Property__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Int8Property */ \"./src/js/backend/UESaveTool/properties/Int8Property.js\");\n/* harmony import */ var _Int16Property__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Int16Property */ \"./src/js/backend/UESaveTool/properties/Int16Property.js\");\n/* harmony import */ var _Int64Property__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Int64Property */ \"./src/js/backend/UESaveTool/properties/Int64Property.js\");\n/* harmony import */ var _FloatProperty__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./FloatProperty */ \"./src/js/backend/UESaveTool/properties/FloatProperty.js\");\n/* harmony import */ var _StrProperty__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./StrProperty */ \"./src/js/backend/UESaveTool/properties/StrProperty.js\");\n/* harmony import */ var _ObjectProperty__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ObjectProperty */ \"./src/js/backend/UESaveTool/properties/ObjectProperty.js\");\n/* harmony import */ var _SoftObjectProperty__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./SoftObjectProperty */ \"./src/js/backend/UESaveTool/properties/SoftObjectProperty.js\");\n/* harmony import */ var _StructProperty__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./StructProperty */ \"./src/js/backend/UESaveTool/properties/StructProperty.js\");\n/* harmony import */ var _ArrayProperty__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ArrayProperty */ \"./src/js/backend/UESaveTool/properties/ArrayProperty.js\");\n/* harmony import */ var _EnumProperty__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./EnumProperty */ \"./src/js/backend/UESaveTool/properties/EnumProperty.js\");\n/* harmony import */ var _Tuple__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Tuple */ \"./src/js/backend/UESaveTool/properties/Tuple.js\");\n/* harmony import */ var _Guid__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./Guid */ \"./src/js/backend/UESaveTool/properties/Guid.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/UESaveTool/properties/index.js?");

/***/ }),

/***/ "./src/js/backend/commandFactory.js":
/*!******************************************!*\
  !*** ./src/js/backend/commandFactory.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CommandFactory: () => (/* binding */ CommandFactory)\n/* harmony export */ });\n/* harmony import */ var _commands_saveSelected_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./commands/saveSelected.js */ \"./src/js/backend/commands/saveSelected.js\");\n/* harmony import */ var _commands_performanceRequest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./commands/performanceRequest.js */ \"./src/js/backend/commands/performanceRequest.js\");\n/* harmony import */ var _commands_partRequest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./commands/partRequest.js */ \"./src/js/backend/commands/partRequest.js\");\n/* harmony import */ var _commands_driverRequest_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./commands/driverRequest.js */ \"./src/js/backend/commands/driverRequest.js\");\n/* harmony import */ var _commands_editPerformance_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./commands/editPerformance.js */ \"./src/js/backend/commands/editPerformance.js\");\n/* harmony import */ var _commands_yearSelectedH2H_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./commands/yearSelectedH2H.js */ \"./src/js/backend/commands/yearSelectedH2H.js\");\n/* harmony import */ var _commands_configuredH2H_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./commands/configuredH2H.js */ \"./src/js/backend/commands/configuredH2H.js\");\n/* harmony import */ var _commands_customEngines_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./commands/customEngines.js */ \"./src/js/backend/commands/customEngines.js\");\n/* harmony import */ var _commands_teamRequest_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./commands/teamRequest.js */ \"./src/js/backend/commands/teamRequest.js\");\n/* harmony import */ var _commands_yearSelected_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./commands/yearSelected.js */ \"./src/js/backend/commands/yearSelected.js\");\n/* harmony import */ var _commands_editTeam_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./commands/editTeam.js */ \"./src/js/backend/commands/editTeam.js\");\n/* harmony import */ var _commands_editStats_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./commands/editStats.js */ \"./src/js/backend/commands/editStats.js\");\n/* harmony import */ var _commands_editCalendar_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./commands/editCalendar.js */ \"./src/js/backend/commands/editCalendar.js\");\n/* harmony import */ var _commands_editContract_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./commands/editContract.js */ \"./src/js/backend/commands/editContract.js\");\n/* harmony import */ var _commands_editEngine_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./commands/editEngine.js */ \"./src/js/backend/commands/editEngine.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass CommandFactory {\n  constructor() {\n    this.commandDict = {\n      saveSelected: _commands_saveSelected_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n      driverRequest: _commands_driverRequest_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n      // hire: HireCommand,\n      // fire: FireCommand,\n      // autoContract: AutoContractCommand,\n      // swap: SwapCommand,\n      editStats: _commands_editStats_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"],\n      editCalendar: _commands_editCalendar_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"],\n      editContract: _commands_editContract_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"],\n      editPerformance: _commands_editPerformance_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n      editEngine: _commands_editEngine_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"],\n      yearSelected: _commands_yearSelected_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\n      yearSelectedH2H: _commands_yearSelectedH2H_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n      configuredH2H: _commands_configuredH2H_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n      teamRequest: _commands_teamRequest_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\n      editTeam: _commands_editTeam_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"],\n      // configUpdate: ConfigUpdateCommand,\n      performanceRequest: _commands_performanceRequest_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n      // fitParts: FitPartsCommand,\n      partRequest: _commands_partRequest_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n      customEngines: _commands_customEngines_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]\n    };\n  }\n  createCommand(message) {\n    const commandType = message.command;\n    if (commandType in this.commandDict) {\n      return new this.commandDict[commandType](message);\n    } else {\n      throw new Error(\"Unknown command type\");\n    }\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/commandFactory.js?");

/***/ }),

/***/ "./src/js/backend/commands/command.js":
/*!********************************************!*\
  !*** ./src/js/backend/commands/command.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Command: () => (/* binding */ Command)\n/* harmony export */ });\n/* harmony import */ var _commandGlobals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./commandGlobals */ \"./src/js/backend/commands/commandGlobals.js\");\n/* harmony import */ var _frontend_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../frontend/renderer */ \"./src/js/frontend/renderer.js\");\n\n\nclass Command {\n  constructor(message) {\n    this.message = message;\n  }\n  execute() {\n    throw new Error(\"Method not implemented.\");\n  }\n  replaceTeam(originalTeam, newTeam) {\n    _commandGlobals__WEBPACK_IMPORTED_MODULE_0__.teamReplaceDict[originalTeam] = _commandGlobals__WEBPACK_IMPORTED_MODULE_0__.prettyNames[newTeam] || newTeam;\n  }\n  addTeam(originalTeam, newTeam) {\n    _commandGlobals__WEBPACK_IMPORTED_MODULE_0__.teamReplaceDict[originalTeam] = newTeam;\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/commands/command.js?");

/***/ }),

/***/ "./src/js/backend/commands/commandGlobals.js":
/*!***************************************************!*\
  !*** ./src/js/backend/commands/commandGlobals.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getGlobals: () => (/* binding */ getGlobals),\n/* harmony export */   prettyNames: () => (/* binding */ prettyNames),\n/* harmony export */   setGlobals: () => (/* binding */ setGlobals),\n/* harmony export */   teamReplaceDict: () => (/* binding */ teamReplaceDict)\n/* harmony export */ });\n// commandGlobals.js\nconst teamReplaceDict = {\n  \"Alpha Tauri\": \"Alpha Tauri\",\n  \"Alpine\": \"Alpine\",\n  \"Alfa Romeo\": \"Alfa Romeo\",\n  \"Aston Martin\": \"Aston Martin\",\n  \"Ferrari\": \"Ferrari\",\n  \"Haas\": \"Haas\",\n  \"McLaren\": \"McLaren\",\n  \"Mercedes\": \"Mercedes\",\n  \"Red Bull\": \"Red Bull\",\n  \"Williams\": \"Williams\",\n  \"Renault\": \"Renault\",\n  \"F2\": \"Formula 2\",\n  \"F3\": \"Formula 3\",\n  \"Custom Team\": \"Custom Team\"\n};\nconst prettyNames = {\n  \"visarb\": \"Visa Cashapp RB\",\n  \"toyota\": \"Toyota\",\n  \"hugo\": \"Hugo Boss\",\n  \"alphatauri\": \"Alpha Tauri\",\n  \"brawn\": \"Brawn GP\",\n  \"porsche\": \"Porsche\",\n  \"alpine\": \"Alpine\",\n  \"renault\": \"Renault\",\n  \"andretti\": \"Andretti\",\n  \"lotus\": \"Lotus\",\n  \"alfa\": \"Alfa Romeo\",\n  \"audi\": \"Audi\",\n  \"sauber\": \"Sauber\",\n  \"stake\": \"Stake Sauber\"\n};\nlet dbUtils = null;\nlet path = null;\nlet yearIteration = null;\nlet isCreateATeam = false;\nfunction setGlobals({\n  db,\n  dbPath,\n  year,\n  createTeam\n}) {\n  dbUtils = db || dbUtils;\n  path = dbPath || path;\n  yearIteration = year || yearIteration;\n  isCreateATeam = createTeam || isCreateATeam;\n}\nfunction getGlobals() {\n  return {\n    dbUtils,\n    path,\n    yearIteration,\n    isCreateATeam\n  };\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/commands/commandGlobals.js?");

/***/ }),

/***/ "./src/js/backend/commands/configuredH2H.js":
/*!**************************************************!*\
  !*** ./src/js/backend/commands/configuredH2H.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ConfiguredH2HCommand)\n/* harmony export */ });\n/* harmony import */ var _frontend_dragFile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../frontend/dragFile */ \"./src/js/frontend/dragFile.js\");\n/* harmony import */ var _frontend_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../frontend/renderer */ \"./src/js/frontend/renderer.js\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./command */ \"./src/js/backend/commands/command.js\");\n/* harmony import */ var _commandGlobals__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./commandGlobals */ \"./src/js/backend/commands/commandGlobals.js\");\n/* harmony import */ var _scriptUtils_head2head__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../scriptUtils/head2head */ \"./src/js/backend/scriptUtils/head2head.js\");\n\n\n\n\n\nclass ConfiguredH2HCommand extends _command__WEBPACK_IMPORTED_MODULE_2__.Command {\n  execute() {\n    const dbUtils = (0,_frontend_dragFile__WEBPACK_IMPORTED_MODULE_0__.getDBUtils)();\n    if (this.message.data.h2h !== \"-1\") {\n      if (this.message.data.mode === \"driver\") {\n        const h2hRes = (0,_scriptUtils_head2head__WEBPACK_IMPORTED_MODULE_4__.fetchHead2Head)(this.message.data.h2h[0], this.message.data.h2h[1], this.message.data.year);\n        const h2hResponse = {\n          responseMessage: \"H2H fetched\",\n          content: h2hRes\n        };\n        (0,_frontend_renderer__WEBPACK_IMPORTED_MODULE_1__.updateFront)(h2hResponse);\n      } else if (this.message.data.mode === \"team\") {\n        const h2hRes = (0,_scriptUtils_head2head__WEBPACK_IMPORTED_MODULE_4__.fetchHead2HeadTeam)(this.message.data.h2h[0], this.message.data.h2h[1], this.message.data.year, \"team\");\n        const h2hResponse = {\n          responseMessage: \"H2H fetched\",\n          content: h2hRes\n        };\n        (0,_frontend_renderer__WEBPACK_IMPORTED_MODULE_1__.updateFront)(h2hResponse);\n      }\n    }\n    const h2hDrivers = [];\n    this.message.data.graph.forEach(driver => {\n      if (this.message.data.mode === \"driver\") {\n        const res = dbUtils.fetchOneDriverSeasonResults(driver, this.message.data.year);\n        h2hDrivers.push(res);\n      } else if (this.message.data.mode === \"team\") {\n        const res = dbUtils.fetchOneTeamSeasonResults(driver, this.message.data.year);\n        h2hDrivers.push(res);\n      }\n    });\n    const eventsDone = dbUtils.fetchEventsDoneFrom(this.message.data.year);\n    const allEvents = dbUtils.fetchEventsFrom(this.message.data.year);\n    h2hDrivers.push(eventsDone);\n    h2hDrivers.unshift(allEvents);\n    const h2hResponse = {\n      responseMessage: \"H2HDriver fetched\",\n      content: h2hDrivers\n    };\n    (0,_frontend_renderer__WEBPACK_IMPORTED_MODULE_1__.updateFront)(h2hResponse);\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/commands/configuredH2H.js?");

/***/ }),

/***/ "./src/js/backend/commands/customEngines.js":
/*!**************************************************!*\
  !*** ./src/js/backend/commands/customEngines.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CustomEnginesCommand)\n/* harmony export */ });\n/* harmony import */ var _frontend_dragFile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../frontend/dragFile */ \"./src/js/frontend/dragFile.js\");\n/* harmony import */ var _frontend_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../frontend/renderer */ \"./src/js/frontend/renderer.js\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./command */ \"./src/js/backend/commands/command.js\");\n/* harmony import */ var _commandGlobals__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./commandGlobals */ \"./src/js/backend/commands/commandGlobals.js\");\n\n\n\n\nclass CustomEnginesCommand extends _command__WEBPACK_IMPORTED_MODULE_2__.Command {\n  execute() {\n    const dbUtils = (0,_frontend_dragFile__WEBPACK_IMPORTED_MODULE_0__.getDBUtils)();\n    dbUtils.updateCustomEngines(this.message.data.enginesData);\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/commands/customEngines.js?");

/***/ }),

/***/ "./src/js/backend/commands/driverRequest.js":
/*!**************************************************!*\
  !*** ./src/js/backend/commands/driverRequest.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DriverRequestCommand)\n/* harmony export */ });\n/* harmony import */ var _frontend_dragFile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../frontend/dragFile */ \"./src/js/frontend/dragFile.js\");\n/* harmony import */ var _frontend_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../frontend/renderer */ \"./src/js/frontend/renderer.js\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./command */ \"./src/js/backend/commands/command.js\");\n/* harmony import */ var _commandGlobals__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./commandGlobals */ \"./src/js/backend/commands/commandGlobals.js\");\n\n\n\n\nclass DriverRequestCommand extends _command__WEBPACK_IMPORTED_MODULE_2__.Command {\n  execute() {\n    const dbUtils = (0,_frontend_dragFile__WEBPACK_IMPORTED_MODULE_0__.getDBUtils)();\n    const contract = dbUtils.fetchDriverContract(this.message.data.driverID);\n    const contractResponse = {\n      responseMessage: \"Contract fetched\",\n      content: contract\n    };\n    (0,_frontend_renderer__WEBPACK_IMPORTED_MODULE_1__.updateFront)(contractResponse);\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/commands/driverRequest.js?");

/***/ }),

/***/ "./src/js/backend/commands/editCalendar.js":
/*!*************************************************!*\
  !*** ./src/js/backend/commands/editCalendar.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EditCalendarCommand)\n/* harmony export */ });\n/* harmony import */ var _frontend_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../frontend/renderer */ \"./src/js/frontend/renderer.js\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./command */ \"./src/js/backend/commands/command.js\");\n/* harmony import */ var _commandGlobals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./commandGlobals */ \"./src/js/backend/commands/commandGlobals.js\");\n/* harmony import */ var _scriptUtils_calendarUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../scriptUtils/calendarUtils */ \"./src/js/backend/scriptUtils/calendarUtils.js\");\n\n\n\n\nclass EditCalendarCommand extends _command__WEBPACK_IMPORTED_MODULE_1__.Command {\n  execute() {\n    const year = (0,_commandGlobals__WEBPACK_IMPORTED_MODULE_2__.getGlobals)().yearIteration;\n    (0,_scriptUtils_calendarUtils__WEBPACK_IMPORTED_MODULE_3__.editCalendar)(this.message.data.calendarCodes, year);\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/commands/editCalendar.js?");

/***/ }),

/***/ "./src/js/backend/commands/editContract.js":
/*!*************************************************!*\
  !*** ./src/js/backend/commands/editContract.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EditContractCommand)\n/* harmony export */ });\n/* harmony import */ var _frontend_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../frontend/renderer */ \"./src/js/frontend/renderer.js\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./command */ \"./src/js/backend/commands/command.js\");\n/* harmony import */ var _commandGlobals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./commandGlobals */ \"./src/js/backend/commands/commandGlobals.js\");\n/* harmony import */ var _scriptUtils_transferUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../scriptUtils/transferUtils */ \"./src/js/backend/scriptUtils/transferUtils.js\");\n\n\n\n\nclass EditContractCommand extends _command__WEBPACK_IMPORTED_MODULE_1__.Command {\n  execute() {\n    const year = (0,_commandGlobals__WEBPACK_IMPORTED_MODULE_2__.getGlobals)().yearIteration;\n    (0,_scriptUtils_transferUtils__WEBPACK_IMPORTED_MODULE_3__.editContract)(this.message.data.driverID, this.message.data.salary, this.message.data.year, this.message.data.signBonus, this.message.data.raceBonus, this.message.data.raceBonusPos);\n    (0,_scriptUtils_transferUtils__WEBPACK_IMPORTED_MODULE_3__.futureContract)(this.message.data.futureTeam, this.message.data.driverID, this.message.data.futureSalary, this.message.data.futureYear, this.message.data.futureSignBonus, this.message.data.futureRaceBonus, this.message.data.futureRaceBonusPos, this.message.data.futurePosition, year);\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/commands/editContract.js?");

/***/ }),

/***/ "./src/js/backend/commands/editEngine.js":
/*!***********************************************!*\
  !*** ./src/js/backend/commands/editEngine.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EditEngineCommand)\n/* harmony export */ });\n/* harmony import */ var _frontend_dragFile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../frontend/dragFile */ \"./src/js/frontend/dragFile.js\");\n/* harmony import */ var _frontend_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../frontend/renderer */ \"./src/js/frontend/renderer.js\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./command */ \"./src/js/backend/commands/command.js\");\n/* harmony import */ var _commandGlobals__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./commandGlobals */ \"./src/js/backend/commands/commandGlobals.js\");\n\n\n\n\nclass EditEngineCommand extends _command__WEBPACK_IMPORTED_MODULE_2__.Command {\n  execute() {\n    const dbUtils = (0,_frontend_dragFile__WEBPACK_IMPORTED_MODULE_0__.getDBUtils)();\n    dbUtils.editEngines(this.message.data.engines);\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/commands/editEngine.js?");

/***/ }),

/***/ "./src/js/backend/commands/editPerformance.js":
/*!****************************************************!*\
  !*** ./src/js/backend/commands/editPerformance.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EditPerformanceCommand)\n/* harmony export */ });\n/* harmony import */ var _frontend_dragFile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../frontend/dragFile */ \"./src/js/frontend/dragFile.js\");\n/* harmony import */ var _frontend_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../frontend/renderer */ \"./src/js/frontend/renderer.js\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./command */ \"./src/js/backend/commands/command.js\");\n/* harmony import */ var _commandGlobals__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./commandGlobals */ \"./src/js/backend/commands/commandGlobals.js\");\n/* harmony import */ var _scriptUtils_carAnalysisUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../scriptUtils/carAnalysisUtils */ \"./src/js/backend/scriptUtils/carAnalysisUtils.js\");\n\n\n\n\n\nclass EditPerformanceCommand extends _command__WEBPACK_IMPORTED_MODULE_2__.Command {\n  execute() {\n    let globals = (0,_commandGlobals__WEBPACK_IMPORTED_MODULE_3__.getGlobals)();\n    const dbUtils = (0,_frontend_dragFile__WEBPACK_IMPORTED_MODULE_0__.getDBUtils)();\n    const yearData = dbUtils.checkYearSave();\n    (0,_scriptUtils_carAnalysisUtils__WEBPACK_IMPORTED_MODULE_4__.overwritePerformanceTeam)(this.message.data.teamID, this.message.data.parts, globals.isCreateATeam, globals.yearIteration, this.message.data.loadouts);\n    (0,_scriptUtils_carAnalysisUtils__WEBPACK_IMPORTED_MODULE_4__.updateItemsForDesignDict)(this.message.data.n_parts_designs, this.message.data.teamID);\n    (0,_scriptUtils_carAnalysisUtils__WEBPACK_IMPORTED_MODULE_4__.fitLoadoutsDict)(this.message.data.loadouts, this.message.data.teamID);\n    const [performance, races] = (0,_scriptUtils_carAnalysisUtils__WEBPACK_IMPORTED_MODULE_4__.getPerformanceAllTeamsSeason)(yearData[2]);\n    const performanceResponse = {\n      responseMessage: \"Season performance fetched\",\n      content: [performance, races]\n    };\n    (0,_frontend_renderer__WEBPACK_IMPORTED_MODULE_1__.updateFront)(performanceResponse);\n    const attibutes = (0,_scriptUtils_carAnalysisUtils__WEBPACK_IMPORTED_MODULE_4__.getAttributesAllTeams)(yearData[2]);\n    const attributesResponse = {\n      responseMessage: \"Performance fetched\",\n      content: [performance[performance.length - 1], attibutes]\n    };\n    (0,_frontend_renderer__WEBPACK_IMPORTED_MODULE_1__.updateFront)(attributesResponse);\n    const carPerformance = (0,_scriptUtils_carAnalysisUtils__WEBPACK_IMPORTED_MODULE_4__.getPerformanceAllCars)(yearData[2]);\n    const carAttributes = (0,_scriptUtils_carAnalysisUtils__WEBPACK_IMPORTED_MODULE_4__.getAttributesAllCars)(yearData[2]);\n    const carPerformanceResponse = {\n      responseMessage: \"Cars fetched\",\n      content: [carPerformance, carAttributes]\n    };\n    (0,_frontend_renderer__WEBPACK_IMPORTED_MODULE_1__.updateFront)(carPerformanceResponse);\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/commands/editPerformance.js?");

/***/ }),

/***/ "./src/js/backend/commands/editStats.js":
/*!**********************************************!*\
  !*** ./src/js/backend/commands/editStats.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EditStatsCommand)\n/* harmony export */ });\n/* harmony import */ var _frontend_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../frontend/renderer */ \"./src/js/frontend/renderer.js\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./command */ \"./src/js/backend/commands/command.js\");\n/* harmony import */ var _commandGlobals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./commandGlobals */ \"./src/js/backend/commands/commandGlobals.js\");\n/* harmony import */ var _scriptUtils_eidtStatsUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../scriptUtils/eidtStatsUtils */ \"./src/js/backend/scriptUtils/eidtStatsUtils.js\");\n\n\n\n\nclass EditStatsCommand extends _command__WEBPACK_IMPORTED_MODULE_1__.Command {\n  execute() {\n    const globals = (0,_commandGlobals__WEBPACK_IMPORTED_MODULE_2__.getGlobals)();\n    (0,_scriptUtils_eidtStatsUtils__WEBPACK_IMPORTED_MODULE_3__.editRetirement)(this.message.data.driverID, this.message.data.isRetired);\n    if (this.message.data.typeStaff === \"0\") {\n      (0,_scriptUtils_eidtStatsUtils__WEBPACK_IMPORTED_MODULE_3__.editSuperlicense)(this.message.data.driverID, this.message.data.superLicense);\n      if (globals.yearIteration == \"24\") {\n        (0,_scriptUtils_eidtStatsUtils__WEBPACK_IMPORTED_MODULE_3__.editMarketability)(this.message.data.driverID, this.message.data.marketability);\n      }\n    }\n    (0,_scriptUtils_eidtStatsUtils__WEBPACK_IMPORTED_MODULE_3__.editStats)(this.message.data.driverID, this.message.data.typeStaff, this.message.data.statsArray, this.message.data.retirement, this.message.data.driverNum, this.message.data.wants1);\n    if (this.message.data.mentality !== \"-1\" && globals.yearIteration == \"24\") {\n      (0,_scriptUtils_eidtStatsUtils__WEBPACK_IMPORTED_MODULE_3__.editMentality)(this.message.data.driverID, this.message.data.mentality);\n    }\n    (0,_scriptUtils_eidtStatsUtils__WEBPACK_IMPORTED_MODULE_3__.editAge)(this.message.data.driverID, this.message.data.age);\n    if (this.message.newName !== \"-1\") {\n      (0,_scriptUtils_eidtStatsUtils__WEBPACK_IMPORTED_MODULE_3__.editName)(this.message.data.driverID, this.message.data.newName);\n    }\n    if (this.message.newCode !== \"-1\") {\n      (0,_scriptUtils_eidtStatsUtils__WEBPACK_IMPORTED_MODULE_3__.editCode)(this.message.data.driverID, this.message.data.newCode);\n    }\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/commands/editStats.js?");

/***/ }),

/***/ "./src/js/backend/commands/editTeam.js":
/*!*********************************************!*\
  !*** ./src/js/backend/commands/editTeam.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EditTeamCommand)\n/* harmony export */ });\n/* harmony import */ var _frontend_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../frontend/renderer */ \"./src/js/frontend/renderer.js\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./command */ \"./src/js/backend/commands/command.js\");\n/* harmony import */ var _commandGlobals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./commandGlobals */ \"./src/js/backend/commands/commandGlobals.js\");\n/* harmony import */ var _scriptUtils_editTeamUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../scriptUtils/editTeamUtils */ \"./src/js/backend/scriptUtils/editTeamUtils.js\");\n\n\n\n\nclass EditTeamCommand extends _command__WEBPACK_IMPORTED_MODULE_1__.Command {\n  execute() {\n    (0,_scriptUtils_editTeamUtils__WEBPACK_IMPORTED_MODULE_3__.editTeam)(this.message.data);\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/commands/editTeam.js?");

/***/ }),

/***/ "./src/js/backend/commands/partRequest.js":
/*!************************************************!*\
  !*** ./src/js/backend/commands/partRequest.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PartRequestCommand)\n/* harmony export */ });\n/* harmony import */ var _frontend_dragFile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../frontend/dragFile */ \"./src/js/frontend/dragFile.js\");\n/* harmony import */ var _frontend_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../frontend/renderer */ \"./src/js/frontend/renderer.js\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./command */ \"./src/js/backend/commands/command.js\");\n/* harmony import */ var _commandGlobals__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./commandGlobals */ \"./src/js/backend/commands/commandGlobals.js\");\n/* harmony import */ var _scriptUtils_carAnalysisUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../scriptUtils/carAnalysisUtils */ \"./src/js/backend/scriptUtils/carAnalysisUtils.js\");\n\n\n\n\n\nclass PartRequestCommand extends _command__WEBPACK_IMPORTED_MODULE_2__.Command {\n  execute() {\n    const partValues = (0,_scriptUtils_carAnalysisUtils__WEBPACK_IMPORTED_MODULE_4__.getUnitValueFromOnePart)(this.message.data.designID);\n    const partResponse = {\n      responseMessage: \"Part values fetched\",\n      content: partValues\n    };\n    (0,_frontend_renderer__WEBPACK_IMPORTED_MODULE_1__.updateFront)(partResponse);\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/commands/partRequest.js?");

/***/ }),

/***/ "./src/js/backend/commands/performanceRequest.js":
/*!*******************************************************!*\
  !*** ./src/js/backend/commands/performanceRequest.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PerformanceRequestCommand)\n/* harmony export */ });\n/* harmony import */ var _frontend_dragFile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../frontend/dragFile */ \"./src/js/frontend/dragFile.js\");\n/* harmony import */ var _frontend_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../frontend/renderer */ \"./src/js/frontend/renderer.js\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./command */ \"./src/js/backend/commands/command.js\");\n/* harmony import */ var _commandGlobals__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./commandGlobals */ \"./src/js/backend/commands/commandGlobals.js\");\n/* harmony import */ var _scriptUtils_carAnalysisUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../scriptUtils/carAnalysisUtils */ \"./src/js/backend/scriptUtils/carAnalysisUtils.js\");\n\n\n\n\n\nclass PerformanceRequestCommand extends _command__WEBPACK_IMPORTED_MODULE_2__.Command {\n  execute() {\n    const designDict = (0,_scriptUtils_carAnalysisUtils__WEBPACK_IMPORTED_MODULE_4__.getPartsFromTeam)(this.message.data.teamID);\n    const unitValues = (0,_scriptUtils_carAnalysisUtils__WEBPACK_IMPORTED_MODULE_4__.getUnitValueFromParts)(designDict);\n    const allParts = (0,_scriptUtils_carAnalysisUtils__WEBPACK_IMPORTED_MODULE_4__.getAllPartsFromTeam)(this.message.data.teamID);\n    const maxDesign = (0,_scriptUtils_carAnalysisUtils__WEBPACK_IMPORTED_MODULE_4__.getMaxDesign)();\n    const designResponse = {\n      responseMessage: \"Parts stats fetched\",\n      content: [unitValues, allParts, maxDesign]\n    };\n    (0,_frontend_renderer__WEBPACK_IMPORTED_MODULE_1__.updateFront)(designResponse);\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/commands/performanceRequest.js?");

/***/ }),

/***/ "./src/js/backend/commands/saveSelected.js":
/*!*************************************************!*\
  !*** ./src/js/backend/commands/saveSelected.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SaveSelectedCommand)\n/* harmony export */ });\n/* harmony import */ var _frontend_dragFile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../frontend/dragFile */ \"./src/js/frontend/dragFile.js\");\n/* harmony import */ var _frontend_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../frontend/renderer */ \"./src/js/frontend/renderer.js\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./command */ \"./src/js/backend/commands/command.js\");\n/* harmony import */ var _commandGlobals__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./commandGlobals */ \"./src/js/backend/commands/commandGlobals.js\");\n/* harmony import */ var _scriptUtils_carAnalysisUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../scriptUtils/carAnalysisUtils */ \"./src/js/backend/scriptUtils/carAnalysisUtils.js\");\n\n\n\n\n\nclass SaveSelectedCommand extends _command__WEBPACK_IMPORTED_MODULE_2__.Command {\n  /**\r\n   * Ejecuta el comando de guardar la selección.\r\n   */\n  execute() {\n    const dbUtils = (0,_frontend_dragFile__WEBPACK_IMPORTED_MODULE_0__.getDBUtils)();\n    this.checkCustomTables(dbUtils);\n    const yearData = dbUtils.checkYearSave();\n    if (yearData[1] !== null) {\n      (0,_commandGlobals__WEBPACK_IMPORTED_MODULE_3__.setGlobals)({\n        createTeam: true\n      });\n    } else {\n      (0,_commandGlobals__WEBPACK_IMPORTED_MODULE_3__.setGlobals)({\n        createTeam: false\n      });\n    }\n    this.addTeam(\"Custom Team\", yearData[1]);\n    (0,_commandGlobals__WEBPACK_IMPORTED_MODULE_3__.setGlobals)({\n      year: yearData[0]\n    });\n    const gameYearResponse = {\n      responseMessage: \"Game Year\",\n      content: yearData\n    };\n    (0,_frontend_renderer__WEBPACK_IMPORTED_MODULE_1__.updateFront)(gameYearResponse);\n    this.updateTeamsFor24(yearData[0]);\n    const drivers = dbUtils.fetchDrivers(yearData[0]);\n    const driversResponse = {\n      responseMessage: \"Save loaded succesfully\",\n      content: drivers\n    };\n    (0,_frontend_renderer__WEBPACK_IMPORTED_MODULE_1__.updateFront)(driversResponse);\n    const staff = dbUtils.fetchStaff(yearData[0]);\n    const staffResponse = {\n      responseMessage: \"Staff fetched\",\n      content: staff\n    };\n    (0,_frontend_renderer__WEBPACK_IMPORTED_MODULE_1__.updateFront)(staffResponse);\n    const engines = dbUtils.fetchEngines();\n    const enginesResponse = {\n      responseMessage: \"Engines fetched\",\n      content: engines\n    };\n    (0,_frontend_renderer__WEBPACK_IMPORTED_MODULE_1__.updateFront)(enginesResponse);\n    const calendar = dbUtils.fetchCalendar();\n    const calendarResponse = {\n      responseMessage: \"Calendar fetched\",\n      content: calendar\n    };\n    (0,_frontend_renderer__WEBPACK_IMPORTED_MODULE_1__.updateFront)(calendarResponse);\n    const year = dbUtils.fetchYear();\n    const yearResponse = {\n      responseMessage: \"Year fetched\",\n      content: year\n    };\n    (0,_frontend_renderer__WEBPACK_IMPORTED_MODULE_1__.updateFront)(yearResponse);\n    const numbers = dbUtils.fetchDriverNumbers();\n    const numbersResponse = {\n      responseMessage: \"Numbers fetched\",\n      content: numbers\n    };\n    (0,_frontend_renderer__WEBPACK_IMPORTED_MODULE_1__.updateFront)(numbersResponse);\n    const [performance, races] = (0,_scriptUtils_carAnalysisUtils__WEBPACK_IMPORTED_MODULE_4__.getPerformanceAllTeamsSeason)(yearData[2]);\n    const performanceResponse = {\n      responseMessage: \"Season performance fetched\",\n      content: [performance, races]\n    };\n    (0,_frontend_renderer__WEBPACK_IMPORTED_MODULE_1__.updateFront)(performanceResponse);\n    const attibutes = (0,_scriptUtils_carAnalysisUtils__WEBPACK_IMPORTED_MODULE_4__.getAttributesAllTeams)(yearData[2]);\n    const attributesResponse = {\n      responseMessage: \"Performance fetched\",\n      content: [performance[performance.length - 1], attibutes]\n    };\n    (0,_frontend_renderer__WEBPACK_IMPORTED_MODULE_1__.updateFront)(attributesResponse);\n    const carPerformance = (0,_scriptUtils_carAnalysisUtils__WEBPACK_IMPORTED_MODULE_4__.getPerformanceAllCars)(yearData[2]);\n    const carAttributes = (0,_scriptUtils_carAnalysisUtils__WEBPACK_IMPORTED_MODULE_4__.getAttributesAllCars)(yearData[2]);\n    const carPerformanceResponse = {\n      responseMessage: \"Cars fetched\",\n      content: [carPerformance, carAttributes]\n    };\n    (0,_frontend_renderer__WEBPACK_IMPORTED_MODULE_1__.updateFront)(carPerformanceResponse);\n  }\n  updateTeamsFor24(year) {\n    if (year === \"24\") {\n      const data = {\n        teams: {\n          alphatauri: \"visarb\",\n          alpine: \"alpine\",\n          alfa: \"stake\"\n        }\n      };\n      this.replaceTeam(\"Alpha Tauri\", data.teams.alphatauri);\n      this.replaceTeam(\"Alpine\", data.teams.alpine);\n      this.replaceTeam(\"Alfa Romeo\", data.teams.alfa);\n      const yearResponse = {\n        responseMessage: \"24 Year\",\n        content: data\n      };\n      (0,_frontend_renderer__WEBPACK_IMPORTED_MODULE_1__.updateFront)(yearResponse);\n    }\n  }\n  checkCustomTables(dbUtils) {\n    dbUtils.checkCustomTables();\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/commands/saveSelected.js?");

/***/ }),

/***/ "./src/js/backend/commands/teamRequest.js":
/*!************************************************!*\
  !*** ./src/js/backend/commands/teamRequest.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TeamRequestCommand)\n/* harmony export */ });\n/* harmony import */ var _frontend_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../frontend/renderer */ \"./src/js/frontend/renderer.js\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./command */ \"./src/js/backend/commands/command.js\");\n/* harmony import */ var _commandGlobals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./commandGlobals */ \"./src/js/backend/commands/commandGlobals.js\");\n/* harmony import */ var _scriptUtils_editTeamUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../scriptUtils/editTeamUtils */ \"./src/js/backend/scriptUtils/editTeamUtils.js\");\n\n\n\n\nclass TeamRequestCommand extends _command__WEBPACK_IMPORTED_MODULE_1__.Command {\n  execute() {\n    const teamID = this.message.data.teamID;\n    const teamData = (0,_scriptUtils_editTeamUtils__WEBPACK_IMPORTED_MODULE_3__.fetchTeamData)(teamID);\n    const teamDataResponse = {\n      responseMessage: \"TeamData fetched\",\n      content: teamData\n    };\n    (0,_frontend_renderer__WEBPACK_IMPORTED_MODULE_0__.updateFront)(teamDataResponse);\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/commands/teamRequest.js?");

/***/ }),

/***/ "./src/js/backend/commands/worker.js":
/*!*******************************************!*\
  !*** ./src/js/backend/commands/worker.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _frontend_dragFile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../frontend/dragFile */ \"./src/js/frontend/dragFile.js\");\n\n\n// This is the worker that will be executed when the user selects a year\n// It will fetch the data from the database and send it back to the main thread\nself.addEventListener('message', msg => {\n  console.log(\"[Worker] Received message\", msg);\n  if (msg.data === 'start') {\n    console.log(\"[Worker] Starting worker\");\n\n    // Send the response back to the main thread\n    postMessage({\n      responseMessage: \"Results fetched\",\n      content: [eventsFrom, results, teamStandings]\n    });\n  }\n});\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/commands/worker.js?");

/***/ }),

/***/ "./src/js/backend/commands/yearSelected.js":
/*!*************************************************!*\
  !*** ./src/js/backend/commands/yearSelected.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ YearSelectedCommand)\n/* harmony export */ });\n/* harmony import */ var _frontend_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../frontend/renderer */ \"./src/js/frontend/renderer.js\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./command */ \"./src/js/backend/commands/command.js\");\n/* harmony import */ var _commandGlobals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./commandGlobals */ \"./src/js/backend/commands/commandGlobals.js\");\n/* harmony import */ var _frontend_dragFile__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../frontend/dragFile */ \"./src/js/frontend/dragFile.js\");\n\n\n\n\nclass YearSelectedCommand extends _command__WEBPACK_IMPORTED_MODULE_1__.Command {\n  execute() {\n    const dbUtils = (0,_frontend_dragFile__WEBPACK_IMPORTED_MODULE_3__.getDBUtils)();\n    console.log(\"[YearSelectedCommand] Executing command\");\n    const worker = new Worker(new URL(/* worker import */ __webpack_require__.p + __webpack_require__.u(\"src_js_frontend_renderer_js\"), __webpack_require__.b));\n    worker.postMessage('start');\n    worker.onmessage = msg => {\n      console.log(\"[Worker] Received message\", msg);\n      // const response = msg.data;\n      // updateFront(response);\n    };\n\n    // const response = { responseMessage: \"Results fetched\", content: [eventsFrom, results, teamStandings] };\n    // updateFront(response);\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/commands/yearSelected.js?");

/***/ }),

/***/ "./src/js/backend/commands/yearSelectedH2H.js":
/*!****************************************************!*\
  !*** ./src/js/backend/commands/yearSelectedH2H.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ YearSelectedH2HCommand)\n/* harmony export */ });\n/* harmony import */ var _frontend_dragFile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../frontend/dragFile */ \"./src/js/frontend/dragFile.js\");\n/* harmony import */ var _frontend_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../frontend/renderer */ \"./src/js/frontend/renderer.js\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./command */ \"./src/js/backend/commands/command.js\");\n/* harmony import */ var _commandGlobals__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./commandGlobals */ \"./src/js/backend/commands/commandGlobals.js\");\n/* harmony import */ var _scriptUtils_carAnalysisUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../scriptUtils/carAnalysisUtils */ \"./src/js/backend/scriptUtils/carAnalysisUtils.js\");\n\n\n\n\n\nclass YearSelectedH2HCommand extends _command__WEBPACK_IMPORTED_MODULE_2__.Command {\n  execute() {\n    const dbUtils = (0,_frontend_dragFile__WEBPACK_IMPORTED_MODULE_0__.getDBUtils)();\n    const drivers = dbUtils.fetchDriversPerYear(this.message.data.year);\n    const driversResponse = {\n      responseMessage: \"DriversH2H fetched\",\n      content: drivers\n    };\n    (0,_frontend_renderer__WEBPACK_IMPORTED_MODULE_1__.updateFront)(driversResponse);\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/commands/yearSelectedH2H.js?");

/***/ }),

/***/ "./src/js/backend/dbManager.js":
/*!*************************************!*\
  !*** ./src/js/backend/dbManager.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDatabase: () => (/* binding */ getDatabase),\n/* harmony export */   getMetadata: () => (/* binding */ getMetadata),\n/* harmony export */   queryDB: () => (/* binding */ queryDB),\n/* harmony export */   setDatabase: () => (/* binding */ setDatabase)\n/* harmony export */ });\nlet db = null;\nlet metadata = null;\nfunction setDatabase(database, meta) {\n  db = database;\n  metadata = meta;\n}\nfunction getDatabase() {\n  return db;\n}\nfunction getMetadata() {\n  return metadata;\n}\n\n/**\r\n * Ejecuta una consulta SQL y devuelve el resultado según 'type'.\r\n * @param {string} query - La consulta a ejecutar.\r\n * @param {\"singleValue\"|\"singleRow\"|\"allRows\"} [type=\"allRows\"] - El tipo de resultado.\r\n * @returns {any} \r\n *    - 'singleValue': un único valor (o null).\r\n *    - 'singleRow': la primera fila (array de valores) o null.\r\n *    - 'allRows': array de filas (cada fila, array de valores), o [] si no hay ninguna.\r\n */\nfunction queryDB(query, type = 'allRows') {\n  const res = db.exec(query); // o tu instancia real de db\n  if (!res.length) {\n    // No hay resultsets\n    return type === 'allRows' ? [] : null;\n  }\n  const rows = res[0].values;\n  if (!rows.length) {\n    // Hay resultset pero 0 filas\n    return type === 'allRows' ? [] : null;\n  }\n  switch (type) {\n    case 'singleValue':\n      // Devuelvo la primera columna de la primera fila\n      return rows[0][0] ?? null;\n    case 'singleRow':\n      // Devuelvo la primera fila entera (array)\n      return rows[0];\n    case 'allRows':\n    default:\n      // Devuelvo todas las filas\n      return rows;\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/dbManager.js?");

/***/ }),

/***/ "./src/js/backend/initSql.js":
/*!***********************************!*\
  !*** ./src/js/backend/initSql.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var sql_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sql.js */ \"./node_modules/sql.js/dist/sql-wasm.js\");\n/* harmony import */ var sql_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sql_js__WEBPACK_IMPORTED_MODULE_0__);\n\n(async () => {\n  // Inicia la instancia de sql.js\n  const SQL = await sql_js__WEBPACK_IMPORTED_MODULE_0___default()({\n    locateFile: file => 'https://cdnjs.cloudflare.com/ajax/libs/sql.js/1.12.0/sql-wasm.wasm',\n    wasmMemory: new WebAssembly.Memory({\n      initial: 1024\n    })\n    // O la ruta local de tu sql-wasm.wasm\n  });\n\n  // Asigna al objeto global 'window'\n  window.SQL = SQL;\n})();\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/initSql.js?");

/***/ }),

/***/ "./src/js/backend/scriptUtils/calendarUtils.js":
/*!*****************************************************!*\
  !*** ./src/js/backend/scriptUtils/calendarUtils.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   editCalendar: () => (/* binding */ editCalendar)\n/* harmony export */ });\n/* harmony import */ var _dbManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dbManager */ \"./src/js/backend/dbManager.js\");\n\nconst weatherDict = {\n  \"0\": 1,\n  \"1\": 2,\n  \"2\": 4,\n  \"3\": 8,\n  \"4\": 16,\n  \"5\": 32\n};\nfunction editCalendar(calendarStr, year_iteration) {\n  const calendar = calendarStr.toLowerCase();\n  let races = calendar.split(\" \");\n  const yearIteration = year_iteration;\n  let maxRaces;\n  let weeks;\n  if (yearIteration === \"24\") {\n    maxRaces = 24;\n    weeks = [11, 8, 15, 36, 24, 20, 22, 25, 26, 9, 28, 29, 34, 37, 13, 42, 41, 43, 48, 17, 33, 19, 46, 47];\n  } else if (yearIteration === \"23\") {\n    maxRaces = 23;\n    weeks = [12, 8, 16, 21, 20, 23, 25, 26, 10, 28, 29, 34, 36, 37, 42, 41, 43, 46, 17, 33, 19, 45, 39];\n  } else {\n    maxRaces = 0;\n    weeks = [];\n  }\n  const raceBlanks = maxRaces - races.length;\n  const daySeason = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n    SELECT Day, CurrentSeason\n    FROM Player_State\n  `, 'singleRow');\n  let actualCalendar = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n    SELECT TrackID\n    FROM Races\n    WHERE SeasonID = ${daySeason[1]}\n  `, 'allRows') || [];\n  actualCalendar = actualCalendar.map(row => row[0]);\n  const newCalendar = races.map(gp => parseInt(gp.slice(0, -5), 10));\n  if (arraysEqual(actualCalendar, newCalendar)) {\n    const ids = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      SELECT RaceID\n      FROM Races\n      WHERE SeasonID = ${daySeason[1]}\n    `, 'allRows') || [];\n    const raceIDs = ids.map(row => row[0]);\n    for (let i = 0; i < races.length; i++) {\n      const race = races[i];\n      const state = race.slice(-1);\n      const format = race.slice(-2, -1);\n      const rainR = weatherDict[race.slice(-3, -2)];\n      const rainRBool = parseFloat(rainR) >= 8 ? 1 : 0;\n      const rainQ = weatherDict[race.slice(-4, -3)];\n      const rainQBool = parseFloat(rainQ) >= 8 ? 1 : 0;\n      const rainP = weatherDict[race.slice(-5, -4)];\n      const rainPBool = parseFloat(rainP) >= 8 ? 1 : 0;\n      // race_code = race.slice(0, -5); // en Python, no lo usas aquí para nada\n\n      (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        UPDATE Races\n        SET\n          RainQualifying = ${rainQBool},\n          WeatherStateQualifying = ${rainQ},\n          RainRace = ${rainRBool},\n          WeatherStateRace = ${rainR},\n          WeekendType = ${format}\n        WHERE RaceID = ${raceIDs[i]}\n      `);\n    }\n  } else {\n    const randomBlanks = [];\n    for (let i = 0; i < raceBlanks; i++) {\n      let n = Math.floor(Math.random() * maxRaces);\n      while (randomBlanks.includes(n)) {\n        n = Math.floor(Math.random() * maxRaces);\n      }\n      randomBlanks.push(n);\n    }\n    for (const el of randomBlanks) {\n      weeks[el] = 0;\n    }\n    weeks = weeks.filter(x => x !== 0);\n    weeks.sort();\n    let leapYearCount = 2;\n    const yearDiff = daySeason[1] - 2023;\n    leapYearCount += yearDiff;\n    let dayStart = 44927 + yearDiff * 365 + Math.floor(leapYearCount / 4);\n    const dayOfWeek = dayStart % 7;\n    const daysUntilSunday = (8 - dayOfWeek) % 7;\n    dayStart += daysUntilSunday;\n    const lastRaceLastSeason = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      SELECT MAX(RaceID)\n      FROM Races\n      WHERE SeasonID = ${daySeason[1] - 1}\n    `, 'singleValue');\n    const firstRaceThisSeason = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      SELECT MIN(RaceID)\n      FROM Races\n      WHERE SeasonID = ${daySeason[1]}\n    `, 'singleValue');\n    let raceid;\n    if (parseInt(lastRaceLastSeason, 10) === parseInt(firstRaceThisSeason, 10) - 1) {\n      raceid = lastRaceLastSeason;\n    } else {\n      raceid = firstRaceThisSeason - 1;\n    }\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      DELETE FROM Races\n      WHERE State != 2\n        AND SeasonID = ${daySeason[1]}\n    `);\n    for (let i = 0; i < races.length; i++) {\n      const race = races[i];\n      const state = race.slice(-1);\n      const format = race.slice(-2, -1);\n      const rainR = weatherDict[race.slice(-3, -2)];\n      const rainRBool = parseFloat(rainR) >= 8 ? 1 : 0;\n      const rainQ = weatherDict[race.slice(-4, -3)];\n      const rainQBool = parseFloat(rainQ) >= 8 ? 1 : 0;\n      const rainP = weatherDict[race.slice(-5, -4)];\n      const rainPBool = parseFloat(rainP) >= 8 ? 1 : 0;\n      const raceCode = parseInt(race.slice(0, -5), 10);\n      const temps = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT TemperatureMin, TemperatureMax\n        FROM Races_Templates\n        WHERE TrackID = ${raceCode}\n      `, 'singleRow');\n      const tempP = randomInt(temps[0], temps[1]);\n      const tempQ = randomInt(temps[0], temps[1]);\n      const tempR = randomInt(temps[0], temps[1]);\n      const day = (weeks[i] + 1) * 7 + dayStart;\n      raceid += 1;\n      if (state !== \"2\") {\n        (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n          INSERT INTO Races\n          VALUES (\n            ${raceid},\n            ${daySeason[1]},\n            ${day},\n            ${raceCode},\n            ${state},\n            ${rainPBool},\n            ${tempP},\n            ${rainP},\n            ${rainQBool},\n            ${tempQ},\n            ${rainQ},\n            ${rainRBool},\n            ${tempR},\n            ${rainR},\n            ${format}\n          )\n        `);\n      }\n    }\n  }\n}\n\n// Helpers\n\nfunction arraysEqual(a, b) {\n  if (a.length !== b.length) return false;\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\nfunction randomInt(min, max) {\n  const mn = parseInt(min, 10);\n  const mx = parseInt(max, 10);\n  return Math.floor(Math.random() * (mx - mn + 1)) + mn;\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/scriptUtils/calendarUtils.js?");

/***/ }),

/***/ "./src/js/backend/scriptUtils/carAnalysisUtils.js":
/*!********************************************************!*\
  !*** ./src/js/backend/scriptUtils/carAnalysisUtils.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add4Items: () => (/* binding */ add4Items),\n/* harmony export */   addNewDesign: () => (/* binding */ addNewDesign),\n/* harmony export */   addPartToLoadout: () => (/* binding */ addPartToLoadout),\n/* harmony export */   calculateCarAttributes: () => (/* binding */ calculateCarAttributes),\n/* harmony export */   calculateOverallPerformance: () => (/* binding */ calculateOverallPerformance),\n/* harmony export */   changeExpertiseBased: () => (/* binding */ changeExpertiseBased),\n/* harmony export */   convertPercentageToValue: () => (/* binding */ convertPercentageToValue),\n/* harmony export */   copyFromTable: () => (/* binding */ copyFromTable),\n/* harmony export */   createNewItem: () => (/* binding */ createNewItem),\n/* harmony export */   deleteItem: () => (/* binding */ deleteItem),\n/* harmony export */   fitLatestDesignsAllGrid: () => (/* binding */ fitLatestDesignsAllGrid),\n/* harmony export */   fitLatestDesignsOneTeam: () => (/* binding */ fitLatestDesignsOneTeam),\n/* harmony export */   fitLoadoutsDict: () => (/* binding */ fitLoadoutsDict),\n/* harmony export */   getAllPartsFromTeam: () => (/* binding */ getAllPartsFromTeam),\n/* harmony export */   getAllRaces: () => (/* binding */ getAllRaces),\n/* harmony export */   getAttributesAllCars: () => (/* binding */ getAttributesAllCars),\n/* harmony export */   getAttributesAllTeams: () => (/* binding */ getAttributesAllTeams),\n/* harmony export */   getBestParts: () => (/* binding */ getBestParts),\n/* harmony export */   getBestPartsUntil: () => (/* binding */ getBestPartsUntil),\n/* harmony export */   getCarStats: () => (/* binding */ getCarStats),\n/* harmony export */   getContributorsDict: () => (/* binding */ getContributorsDict),\n/* harmony export */   getDriverNumberWithCar: () => (/* binding */ getDriverNumberWithCar),\n/* harmony export */   getFirstDaySeason: () => (/* binding */ getFirstDaySeason),\n/* harmony export */   getFittedDesigns: () => (/* binding */ getFittedDesigns),\n/* harmony export */   getMaxDesign: () => (/* binding */ getMaxDesign),\n/* harmony export */   getPartStatsDict: () => (/* binding */ getPartStatsDict),\n/* harmony export */   getPartsFromTeam: () => (/* binding */ getPartsFromTeam),\n/* harmony export */   getPerformanceAllCars: () => (/* binding */ getPerformanceAllCars),\n/* harmony export */   getPerformanceAllTeams: () => (/* binding */ getPerformanceAllTeams),\n/* harmony export */   getPerformanceAllTeamsSeason: () => (/* binding */ getPerformanceAllTeamsSeason),\n/* harmony export */   getRacesDays: () => (/* binding */ getRacesDays),\n/* harmony export */   getUnitValueFromOnePart: () => (/* binding */ getUnitValueFromOnePart),\n/* harmony export */   getUnitValueFromParts: () => (/* binding */ getUnitValueFromParts),\n/* harmony export */   makeAttributesReadable: () => (/* binding */ makeAttributesReadable),\n/* harmony export */   overwritePerformanceTeam: () => (/* binding */ overwritePerformanceTeam),\n/* harmony export */   updateItemsForDesignDict: () => (/* binding */ updateItemsForDesignDict)\n/* harmony export */ });\n/* harmony import */ var _carConstants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./carConstants.js */ \"./src/js/backend/scriptUtils/carConstants.js\");\n/* harmony import */ var _dbManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dbManager.js */ \"./src/js/backend/dbManager.js\");\n\n\n\n/**\r\n * Devuelve las mejores piezas para cada equipo.\r\n * @param {boolean} customTeam - si es true, incluye el equipo 32 además de 1..10\r\n */\nfunction getBestParts(customTeam = false) {\n  const teams = {};\n  // Creamos la lista de equipos\n  const teamList = customTeam ? [...Array(10).keys()].map(i => i + 1).concat(32) // 1..10 y 32\n  : [...Array(10).keys()].map(i => i + 1); // 1..10\n\n  for (const teamId of teamList) {\n    teams[teamId] = getPartsFromTeam(teamId);\n  }\n  return teams;\n}\n\n/**\r\n * Obtiene TODAS las piezas (varias designs) de un equipo\r\n * (Como en Python: get_all_parts_from_team)\r\n */\nfunction getAllPartsFromTeam(teamId) {\n  // Obtenemos Day y Season\n  const [day, currentSeason] = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(\"SELECT Day, CurrentSeason FROM Player_State\", \"singleRow\") || [0, 0];\n\n  // Query para extraer las designs del PartType con DayCompleted > 0\n  const query = `\n        SELECT \n          d.DesignID,\n          d.DayCreated,\n          d.DayCompleted, \n          (\n            SELECT r.TrackID \n            FROM Races r \n            WHERE r.Day >= d.DayCompleted \n            ORDER BY r.Day ASC \n            LIMIT 1\n          ) AS TrackID\n        FROM Parts_Designs d\n        WHERE \n          d.PartType = ?\n          AND d.TeamID = ?\n          AND d.ValidFrom = ?\n          AND d.DayCompleted > 0\n      `;\n\n  // En Python se usaba placeholders \"?\", en JS podemos hacer un template\n  // pero si necesitas SQL parametrizado, deberías adaptarlo. Por simplicidad:\n  // haremos un template string con la parte variable:\n  // d.PartType = {j}, d.TeamID = {teamId}, d.ValidFrom = {currentSeason}\n  // y repetimos para cada PartType.\n\n  const partsDict = {};\n\n  // Ej. en Python, PartType iba de 3..8\n  for (let j = 3; j < 9; j++) {\n    const sql = `\n          SELECT \n            d.DesignID,\n            d.DayCreated,\n            d.DayCompleted, \n            (\n              SELECT r.TrackID \n              FROM Races r \n              WHERE r.Day >= d.DayCompleted \n              ORDER BY r.Day ASC \n              LIMIT 1\n            ) AS TrackID\n          FROM Parts_Designs d\n          WHERE \n            d.PartType = ${j}\n            AND d.TeamID = ${teamId}\n            AND d.ValidFrom = ${currentSeason}\n            AND d.DayCompleted > 0\n        `;\n    let designs = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(sql, \"allRows\");\n\n    // Para cada design, agregamos info extra: equipped_1, equipped_2, n_parts\n    designs = designs.map(designRow => {\n      // designRow => [ DesignID, DayCreated, DayCompleted, TrackID ]\n      const [designID, dayCreated, dayCompleted, trackID] = designRow;\n\n      // Vemos si está equipado en loadout 1\n      const equipped1 = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n            SELECT DesignID\n            FROM Parts_CarLoadout\n            WHERE TeamID = ${teamId} \n              AND PartType = ${j} \n              AND LoadoutID = 1\n          `, \"singleValue\");\n      let eq1 = equipped1 === designID ? 1 : 0;\n\n      // Equipado en loadout 2?\n      const equipped2 = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n            SELECT DesignID\n            FROM Parts_CarLoadout\n            WHERE TeamID = ${teamId} \n              AND PartType = ${j} \n              AND LoadoutID = 2\n          `, \"singleValue\");\n      let eq2 = equipped2 === designID ? 1 : 0;\n\n      // Número de partes (items) construidas\n      const nParts = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n            SELECT COUNT(*)\n            FROM Parts_Items\n            WHERE DesignID = ${designID}\n              AND BuildWork = ${_carConstants_js__WEBPACK_IMPORTED_MODULE_0__.standardBuildworkPerPart[j]}\n          `, \"singleValue\") || 0;\n\n      // Devolvemos un nuevo array con toda la info\n      return [designID,\n      // 0\n      dayCreated,\n      // 1\n      dayCompleted,\n      // 2\n      trackID,\n      // 3\n      eq1,\n      // 4\n      eq2,\n      // 5\n      nParts // 6\n      ];\n    });\n\n    // Asignamos a partsDict[ parts[j] ] = designs\n    // Asumiendo que 'parts[j]' existe. Ajusta si es distinto\n    partsDict[_carConstants_js__WEBPACK_IMPORTED_MODULE_0__.parts[j]] = designs;\n  }\n  return partsDict;\n}\n\n/**\r\n * Obtiene las piezas \"mejores\" (MAX(DesignID)) para un equipo y su season actual\r\n * (Similar a get_parts_from_team en el Python original)\r\n */\nfunction getPartsFromTeam(teamId) {\n  // Day, Season\n  const [day, season] = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(\"SELECT Day, CurrentSeason FROM Player_State\", \"singleRow\") || [0, 0];\n  const designs = {};\n  // En Python, j va de 3..8 => motor = 0\n  for (let j = 3; j < 9; j++) {\n    const row = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n          SELECT MAX(DesignID)\n          FROM Parts_Designs\n          WHERE PartType = ${j}\n            AND TeamID = ${teamId}\n            AND ValidFrom = ${season}\n            AND (DayCompleted > 0 OR DayCreated < 0)\n        `, \"allRows\");\n    designs[j] = row;\n  }\n\n  // engine:\n  const engine = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n        SELECT MAX(DesignID)\n        FROM Parts_Designs\n        WHERE PartType = 0\n          AND TeamID = ${teamId}\n      `, \"allRows\");\n  designs[0] = engine;\n  return designs;\n}\n\n/**\r\n * Obtiene las mejores piezas hasta un día concreto (versión con day param)\r\n * (Similar a get_best_parts_until en el Python original)\r\n */\nfunction getBestPartsUntil(day, customTeam = false) {\n  // Day, season\n  const [dayCur, season] = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n        SELECT Day, CurrentSeason \n        FROM Player_State\n      `, \"singleRow\") || [0, 0];\n  const teamList = customTeam ? [...Array(10).keys()].map(i => i + 1).concat(32) : [...Array(10).keys()].map(i => i + 1);\n  const teams = {};\n  for (const t of teamList) {\n    const designs = {};\n    for (let j = 3; j < 9; j++) {\n      const row = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n            SELECT MAX(DesignID)\n            FROM Parts_Designs\n            WHERE PartType = ${j}\n              AND TeamID = ${t}\n              AND ValidFrom = ${season}\n              AND ((DayCompleted > 0 AND DayCompleted <= ${day}) OR DayCreated < 0)\n          `, \"allRows\");\n      designs[j] = row;\n    }\n    // engine\n    const engine = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n          SELECT MAX(DesignID)\n          FROM Parts_Designs\n          WHERE PartType = 0\n            AND TeamID = ${t}\n        `, \"allRows\");\n    designs[0] = engine;\n    teams[t] = designs;\n  }\n  return teams;\n}\n\n/**\r\n * Devuelve un diccionario con los valores de stats (PartStat -> Value)\r\n * de cada parte (partType).\r\n * (get_car_stats en el Python original)\r\n */\nfunction getCarStats(designDict) {\n  const statsValues = {};\n  for (const part in designDict) {\n    // designDict[part] es algo como [[DesignID], ...] en el Python original\n    // asumiendo designDict[part][0][0] sea el designID\n    // Ojo: si no hay array, chequear que exista\n    const designInfo = designDict[part][0];\n    const designID = designInfo && designInfo.length ? designInfo[0] : null;\n    if (designID !== null) {\n      const rows = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n            SELECT PartStat, Value\n            FROM Parts_Designs_StatValues\n            WHERE DesignID = ${designID}\n          `, \"allRows\");\n      // rows => [ [PartStat, Value], [PartStat, Value], ... ]\n      const tmp = {};\n      for (const [stat, val] of rows) {\n        tmp[stat] = Math.round(val * 1000) / 1000; // round to 3 decimals\n      }\n      statsValues[part] = tmp;\n    } else {\n      // Si no hay design -> pon stats 0\n      // En Python: stats_values[part] = { stat: 0 for stat in default_parts_stats[part] }\n      // Asumimos default_parts_stats[part] es un array de stats\n      const zeroStats = {};\n      for (const stat of _carConstants_js__WEBPACK_IMPORTED_MODULE_0__.defaultPartsStats[part]) {\n        zeroStats[stat] = 0;\n      }\n      statsValues[part] = zeroStats;\n    }\n  }\n  return statsValues;\n}\n\n/**\r\n * Devuelve el UnitValue de cada stat de un dict de diseños\r\n * (En Python: get_unitvalue_from_parts)\r\n */\nfunction getUnitValueFromParts(designDict) {\n  const statsValues = {};\n  for (const part in designDict) {\n    const designID = designDict[part][0][0];\n    const rows = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n          SELECT PartStat, UnitValue\n          FROM Parts_Designs_StatValues\n          WHERE DesignID = ${designID}\n        `, 'allRows');\n    const tmp = {};\n    for (const [stat, unitVal] of rows) {\n      tmp[stat] = unitVal;\n    }\n    statsValues[_carConstants_js__WEBPACK_IMPORTED_MODULE_0__.parts[part]] = tmp;\n  }\n  return statsValues;\n}\n\n/**\r\n * UnitValue de un solo diseño\r\n * (get_unitvalue_from_one_part en Python)\r\n */\nfunction getUnitValueFromOnePart(designId) {\n  const partType = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n            SELECT PartType\n            FROM Parts_Designs\n            WHERE DesignID = ${designId}\n        `, 'singleValue');\n  const rows = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n            SELECT PartStat, UnitValue\n            FROM Parts_Designs_StatValues\n            WHERE DesignID = ${designId}\n        `, 'allRows');\n  const statsValues = {};\n  for (const [stat, uv] of rows) {\n    statsValues[stat] = uv;\n  }\n  const partValues = {};\n  partValues[_carConstants_js__WEBPACK_IMPORTED_MODULE_0__.parts[partType]] = statsValues;\n  return partValues;\n}\n\n/**\r\n * Simple helper: convierte un porcentaje a valor físico según min/max\r\n * (convert_percentage_to_value en Python)\r\n */\nfunction convertPercentageToValue(attribute, percentage, minMax) {\n  // minMax[attribute] = [min_value, max_value]\n  const [minValue, maxValue] = minMax[attribute];\n  return minValue + (maxValue - minValue) * (percentage / 100.0);\n}\n\n/**\r\n * Pasa todos los atributos a rango human-readable\r\n * (make_attributes_readable en Python)\r\n */\nfunction makeAttributesReadable(attributes) {\n  for (const attribute in attributes) {\n    attributes[attribute] = convertPercentageToValue(attribute, attributes[attribute], _carConstants_js__WEBPACK_IMPORTED_MODULE_0__.attributesMinMax);\n    // redondea a 3 dec\n    attributes[attribute] = Math.round(attributes[attribute] * 1000) / 1000;\n    attributes[attribute] = `${attributes[attribute]} ${_carConstants_js__WEBPACK_IMPORTED_MODULE_0__.attributesUnits[attribute]}`;\n  }\n  return attributes;\n}\n\n/**\r\n * Calcula la performance global sumando (valorStat * contribución)\r\n * (calculate_overall_performance en Python)\r\n */\nfunction calculateOverallPerformance(attributes) {\n  let ovr = 0;\n  for (const attr in attributes) {\n    ovr += attributes[attr] * _carConstants_js__WEBPACK_IMPORTED_MODULE_0__.attributesContributions[attr];\n  }\n  return Math.round(ovr * 100) / 100;\n}\n\n/**\r\n * Devuelve un diccionario con las contribuciones\r\n * (get_contributors_dict en Python)\r\n */\nfunction getContributorsDict() {\n  // Lógica similar a Python\n  const contributorsValues = {};\n  const totalValues = {};\n  for (const attribute in _carConstants_js__WEBPACK_IMPORTED_MODULE_0__.carAttributes) {\n    totalValues[attribute] = 0;\n    const referenceDict = _carConstants_js__WEBPACK_IMPORTED_MODULE_0__[`${_carConstants_js__WEBPACK_IMPORTED_MODULE_0__.carAttributes[attribute]}_contributors`];\n    // O donde sea que esté definido\n    for (const stat in referenceDict) {\n      totalValues[attribute] += referenceDict[stat];\n    }\n  }\n  for (const attribute in _carConstants_js__WEBPACK_IMPORTED_MODULE_0__.carAttributes) {\n    const referenceDict = _carConstants_js__WEBPACK_IMPORTED_MODULE_0__[`${_carConstants_js__WEBPACK_IMPORTED_MODULE_0__.carAttributes[attribute]}_contributors`];\n    contributorsValues[attribute] = {};\n    for (const stat in referenceDict) {\n      contributorsValues[attribute][stat] = Math.round(referenceDict[stat] / totalValues[attribute] * 1000) / 1000;\n    }\n  }\n  return contributorsValues;\n}\n\n/**\r\n * Suma los factores de cada stat de cada parte\r\n * (get_part_stats_dict en Python)\r\n */\nfunction getPartStatsDict(carDict) {\n  const partStats = {};\n  for (const part in carDict) {\n    for (const stat in carDict[part]) {\n      const factor = _carConstants_js__WEBPACK_IMPORTED_MODULE_0__[`${_carConstants_js__WEBPACK_IMPORTED_MODULE_0__.stats[stat]}_factors`][part];\n      if (!partStats[stat]) {\n        partStats[stat] = 0;\n      }\n      partStats[stat] += carDict[part][stat] * factor;\n    }\n  }\n  return partStats;\n}\n\n/**\r\n * Calcula los atributos finales sumando (contribución * partStats[stat]) / 10\r\n * (calculate_car_attributes en Python)\r\n */\nfunction calculateCarAttributes(contributors, partsStats) {\n  const attributesDict = {};\n  // Ajuste: partsStats[16] = (20000 - partsStats[15]) / 20  (como en el .py)\n  partsStats[16] = (20000 - partsStats[15]) / 20;\n  for (const attribute in contributors) {\n    attributesDict[_carConstants_js__WEBPACK_IMPORTED_MODULE_0__.carAttributes[attribute]] = 0;\n    for (const stat in contributors[attribute]) {\n      attributesDict[_carConstants_js__WEBPACK_IMPORTED_MODULE_0__.carAttributes[attribute]] += contributors[attribute][stat] * partsStats[stat] / 10;\n    }\n  }\n  return attributesDict;\n}\n\n/**\r\n * Obtiene días de carreras\r\n * (get_races_days en Python)\r\n */\nfunction getRacesDays() {\n  const [day, season] = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n        SELECT Day, CurrentSeason \n        FROM Player_State\n      `, 'singleRow') || [0, 0];\n\n  // state=2 => completadas, state=0 => no comenzadas\n  const races = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n        SELECT RaceID, Day, TrackID\n        FROM Races\n        WHERE SeasonID = ${season}\n          AND State = 2\n      `, 'allRows');\n\n  // first_race_state_0 => la primera no iniciada\n  const firstRaceState0 = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n        SELECT RaceID, Day, TrackID\n        FROM Races\n        WHERE SeasonID = ${season}\n          AND State = 0\n        ORDER BY Day ASC\n        LIMIT 1\n      `, 'singleRow');\n  if (firstRaceState0) {\n    races.push(firstRaceState0);\n  }\n  return races;\n}\nfunction getAllRaces() {\n  const [day, season] = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n        SELECT Day, CurrentSeason\n        FROM Player_State\n      `, 'singleRow') || [0, 0];\n  const rows = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n        SELECT RaceID, Day, TrackID\n        FROM Races\n        WHERE SeasonID = ${season}\n      `, 'allRows');\n  return rows;\n}\n\n/**\r\n * Devuelve la performance de todos los equipos en un día dado (o actual)\r\n * (get_performance_all_teams en Python)\r\n */\nfunction getPerformanceAllTeams(day = null, previous = null, customTeam = false) {\n  const teams = {};\n  const contributors = getContributorsDict();\n  const teamList = customTeam ? [...Array(10).keys()].map(i => i + 1).concat(32) : [...Array(10).keys()].map(i => i + 1);\n  let parts;\n  if (day == null) {\n    // Usamos getBestParts\n    parts = getBestParts(customTeam);\n  } else {\n    parts = getBestPartsUntil(day, customTeam);\n  }\n  for (const teamId of teamList) {\n    const dict = getCarStats(parts[teamId]);\n    const partStats = getPartStatsDict(dict);\n    const attributes = calculateCarAttributes(contributors, partStats);\n    const ovr = calculateOverallPerformance(attributes);\n    teams[teamId] = ovr;\n  }\n  return teams;\n}\n\n/**\r\n * Devuelve la performance de todos los coches (car1 y car2) de cada equipo\r\n * (get_performance_all_cars en Python)\r\n */\nfunction getPerformanceAllCars(customTeam = false) {\n  const cars = {};\n  const contributors = getContributorsDict();\n  const teamList = customTeam ? [...Array(10).keys()].map(i => i + 1).concat(32) : [...Array(10).keys()].map(i => i + 1);\n\n  // Este método en Python usaba \"get_fitted_designs(custom_team=custom_team)\"\n  const carsParts = getFittedDesigns(customTeam);\n  for (const teamId of Object.keys(carsParts)) {\n    cars[teamId] = {};\n    for (const carId of Object.keys(carsParts[teamId])) {\n      const dict = getCarStats(carsParts[teamId][carId]);\n      // Falta ver si hay partes sin design\n      const missingParts = [];\n      for (const part in carsParts[teamId][carId]) {\n        if (carsParts[teamId][carId][part][0][0] == null) {\n          missingParts.push(part);\n        }\n      }\n      const partStats = getPartStatsDict(dict);\n      const attributes = calculateCarAttributes(contributors, partStats);\n      const ovr = calculateOverallPerformance(attributes);\n      const driverNumber = getDriverNumberWithCar(teamId, carId);\n      cars[teamId][carId] = [ovr, driverNumber, missingParts];\n    }\n  }\n  return cars;\n}\n\n/**\r\n * Devuelve los atributos de todos los coches\r\n * (get_attributes_all_cars en Python)\r\n */\nfunction getAttributesAllCars(customTeam = false) {\n  const cars = {};\n  const contributors = getContributorsDict();\n  const teamList = customTeam ? [...Array(10).keys()].map(i => i + 1).concat(32) : [...Array(10).keys()].map(i => i + 1);\n  const carsParts = getFittedDesigns(customTeam);\n  for (const teamId of Object.keys(carsParts)) {\n    cars[teamId] = {};\n    for (const carId of Object.keys(carsParts[teamId])) {\n      const dict = getCarStats(carsParts[teamId][carId]);\n      const partStats = getPartStatsDict(dict);\n      const attributes = calculateCarAttributes(contributors, partStats);\n      // (En Python, se dejaba la opción de \"make_attributes_readable\")\n      // attributes = makeAttributesReadable(attributes);\n      cars[teamId][carId] = attributes;\n    }\n  }\n  return cars;\n}\n\n/**\r\n * Devuelve el número del driver que conduce un coche concreto\r\n * (get_driver_number_with_car en Python)\r\n */\nfunction getDriverNumberWithCar(teamId, carId) {\n  const row = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n        SELECT con.StaffID\n        FROM Staff_Contracts con\n        JOIN Staff_GameData gam ON con.StaffID = gam.StaffID\n        WHERE con.TeamID = ${teamId}\n          AND gam.StaffType = 0\n          AND con.ContractType = 0\n          AND con.PosInTeam = ${carId}\n      `, 'singleRow');\n  if (!row) {\n    return null;\n  }\n  const driverId = row[0];\n  const number = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n        SELECT Number\n        FROM Staff_DriverNumbers\n        WHERE CurrentHolder = ${driverId}\n      `, 'singleValue');\n  return number ?? null;\n}\n\n/**\r\n * Obtiene los diseños equipados en cada coche (loadout 1 y 2) de cada equipo\r\n * (get_fitted_designs en Python)\r\n */\nfunction getFittedDesigns(customTeam = false) {\n  const teams = {};\n  const teamList = customTeam ? [...Array(10).keys()].map(i => i + 1).concat(32) : [...Array(10).keys()].map(i => i + 1);\n  for (const t of teamList) {\n    teams[t] = {};\n    // loadout => 1 o 2\n    for (let loadout = 1; loadout <= 2; loadout++) {\n      const designs = {};\n      for (let part = 3; part < 9; part++) {\n        const row = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n                    SELECT DesignID\n                    FROM Parts_CarLoadout\n                    WHERE TeamID = ${t}\n                        AND PartType = ${part}\n                        AND LoadoutID = ${loadout}\n                    `, 'allRows');\n        designs[part] = row;\n      }\n      // engine\n      const engine = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n                    SELECT MAX(DesignID)\n                    FROM Parts_Designs\n                    WHERE PartType = 0\n                    AND TeamID = ${t}\n                `, 'allRows');\n      designs[0] = engine;\n      teams[t][loadout] = designs;\n    }\n  }\n  return teams;\n}\n\n// Asumiendo que tu clase CarAnalysisUtils ya tiene otros métodos traducidos\n// Añadimos/completamos con estos métodos:\n\nfunction fitLatestDesignsAllGrid(customTeam = false) {\n  // SELECT Day, CurrentSeason FROM Player_State\n  const row = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n        SELECT Day, CurrentSeason \n        FROM Player_State\n        `, \"singleRow\");\n  if (!row) {\n    console.warn(\"No Player_State data found.\");\n    return;\n  }\n  const [day, season] = row;\n  // Obtenemos las mejores piezas hasta 'day'\n  const bestParts = getBestPartsUntil(day, customTeam);\n\n  // Para cada equipo en bestParts\n  for (const team of Object.keys(bestParts)) {\n    fitLatestDesignsOneTeam(team, bestParts[team]);\n  }\n\n  // conn.commit() (en SQL.js no es necesario típicamente)\n}\nfunction fitLatestDesignsOneTeam(teamId, parts) {\n  // Recorremos loadout = 1 y 2\n  for (let loadout = 1; loadout <= 2; loadout++) {\n    // Para cada 'part' en el objeto parts\n    for (const partKey of Object.keys(parts)) {\n      const part = Number(partKey);\n      if (part !== 0) {\n        // En Python, parts[part] = [[designId], ...], asumiendo la estructura\n        const design = parts[part][0][0]; // -> designID\n        // fitted_design actual\n        const fittedRow = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n                        SELECT DesignID \n                        FROM Parts_CarLoadout\n                        WHERE TeamID = ${teamId}\n                        AND PartType = ${part}\n                        AND LoadoutID = ${loadout}\n                    `, \"singleRow\");\n        if (!fittedRow) {\n          console.warn(`No fittedRow found for TeamID=${teamId}, part=${part}, loadout=${loadout}`);\n          continue;\n        }\n        const fittedDesign = fittedRow[0];\n        if (design !== fittedDesign) {\n          // Buscamos items disponibles\n          const partsAvailable = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n                        SELECT ItemID\n                        FROM Parts_Items\n                        WHERE DesignID = ${design}\n                            AND AssociatedCar IS NULL\n                        `, \"allRows\");\n          if (!partsAvailable.length) {\n            // no hay items disponibles => creamos uno nuevo\n            const item = createNewItem(design, part);\n            addPartToLoadout(design, part, teamId, loadout, item);\n          } else {\n            const item = partsAvailable[0][0]; // primer item\n            addPartToLoadout(design, part, teamId, loadout, item);\n          }\n        } else {\n          // design ya está equipado en este loadout\n          // Miramos si loadout 1 y 2 comparten item\n          const otherLoadout = loadout === 2 ? 1 : 2;\n          const fittedItemOther = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n                        SELECT ItemID \n                        FROM Parts_CarLoadout\n                        WHERE TeamID = ${teamId}\n                            AND PartType = ${part}\n                            AND LoadoutID = ${otherLoadout}\n                        `, \"singleRow\");\n          const fittedItem = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n                        SELECT ItemID \n                        FROM Parts_CarLoadout\n                        WHERE TeamID = ${teamId}\n                            AND PartType = ${part}\n                            AND LoadoutID = ${loadout}\n                        `, \"singleRow\");\n          if (fittedItemOther && fittedItem && fittedItemOther[0] === fittedItem[0]) {\n            // Ambos loadouts tienen el mismo item => creamos uno nuevo\n            const item = createNewItem(design, part);\n            addPartToLoadout(design, part, teamId, loadout, item);\n          }\n        }\n      }\n    }\n  }\n\n  // commit\n  // (en SQL.js no es necesario, pero podrías hacer db.run(\"BEGIN/COMMIT\") si fuera el caso)\n}\nfunction updateItemsForDesignDict(designDict, teamId) {\n  for (const designKey of Object.keys(designDict)) {\n    const design = Number(designKey);\n    const nParts = parseInt(designDict[designKey], 10);\n\n    // SELECT PartType FROM Parts_Designs WHERE DesignID = {design}\n    const partType = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n        SELECT PartType\n        FROM Parts_Designs\n        WHERE DesignID = ${design}\n      `, \"singleValue\");\n\n    // SELECT COUNT(*) FROM Parts_Items WHERE DesignID = {design} AND BuildWork = X\n    let actualParts = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n        SELECT COUNT(*)\n        FROM Parts_Items\n        WHERE DesignID = ${design}\n          AND BuildWork = ${_carConstants_js__WEBPACK_IMPORTED_MODULE_0__.standardBuildworkPerPart[partType]}\n      `, \"singleValue\");\n    if (actualParts == null) actualParts = 0;\n    let diff = nParts - actualParts;\n    if (diff > 0) {\n      while (diff > 0) {\n        createNewItem(design, partType);\n        diff--;\n      }\n    } else if (diff < 0) {\n      while (diff < 0) {\n        deleteItem(design);\n        diff++;\n      }\n    }\n  }\n\n  // commit\n}\nfunction fitLoadoutsDict(loadoutsDict, teamId) {\n  for (const partKey of Object.keys(loadoutsDict)) {\n    const part = Number(partKey);\n    const design1 = loadoutsDict[part][0];\n    const design2 = loadoutsDict[part][1];\n\n    // SELECT DesignID, ItemID FROM Parts_CarLoadout ...\n    let fittedDesign1 = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n                SELECT DesignID, ItemID\n                FROM Parts_CarLoadout\n                WHERE TeamID = ${teamId}\n                AND PartType = ${part}\n                AND LoadoutID = 1\n            `, \"singleRow\");\n    if (design1 != null) {\n      if (fittedDesign1 && fittedDesign1[0] != null && fittedDesign1[1] != null) {\n        // \"UPDATE Parts_Items SET AssociatedCar = NULL WHERE ItemID = ?\"\n        const itemId = fittedDesign1[1];\n        (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n                        UPDATE Parts_Items\n                        SET AssociatedCar = NULL\n                        WHERE ItemID = ${itemId}\n                    `);\n        // fittedDesign1 = fittedDesign1[0]\n        fittedDesign1 = [fittedDesign1[0], itemId]; // si necesitas retenerlo\n      }\n\n      // Si la design1 actual es distinta...\n      if (!fittedDesign1 || fittedDesign1[0] !== design1) {\n        // SELECT ItemID FROM Parts_Items WHERE ...\n        const items1 = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n                        SELECT ItemID\n                        FROM Parts_Items\n                        WHERE DesignID = ${design1}\n                        AND BuildWork = ${_carConstants_js__WEBPACK_IMPORTED_MODULE_0__.standardBuildworkPerPart[part]}\n                        AND AssociatedCar IS NULL\n                    `, \"allRows\");\n        let item1;\n        if (!items1.length) {\n          item1 = createNewItem(design1, part);\n        } else {\n          item1 = items1[0][0];\n        }\n        addPartToLoadout(design1, part, teamId, 1, item1);\n      }\n    }\n\n    // Ahora loadout 2\n    let fittedDesign2 = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n                SELECT DesignID, ItemID\n                FROM Parts_CarLoadout\n                WHERE TeamID = ${teamId}\n                AND PartType = ${part}\n                AND LoadoutID = 2\n            `, \"singleRow\");\n    if (design2 != null) {\n      if (fittedDesign2 && fittedDesign2[0] != null && fittedDesign2[1] != null) {\n        const itemId2 = fittedDesign2[1];\n        (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n                        UPDATE Parts_Items\n                        SET AssociatedCar = NULL\n                        WHERE ItemID = ${itemId2}\n                    `);\n        fittedDesign2 = [fittedDesign2[0], itemId2];\n      }\n      if (!fittedDesign2 || fittedDesign2[0] !== design2) {\n        const items2 = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n                        SELECT ItemID\n                        FROM Parts_Items\n                        WHERE DesignID = ${design2}\n                        AND BuildWork = ${_carConstants_js__WEBPACK_IMPORTED_MODULE_0__.standardBuildworkPerPart[part]}\n                        AND AssociatedCar IS NULL\n                    `, \"allRows\");\n        let item2;\n        if (!items2.length) {\n          item2 = createNewItem(design2, part);\n        } else {\n          item2 = items2[0][0];\n        }\n        addPartToLoadout(design2, part, teamId, 2, item2);\n      }\n    }\n  }\n\n  // commit\n}\n\n// En Python: create_new_item(design_id, part)\nfunction createNewItem(designId, part) {\n  // SELECT MAX(ItemID) FROM Parts_Items\n  let maxItem = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n        SELECT MAX(ItemID)\n        FROM Parts_Items\n        `, \"singleValue\");\n  const newItem = maxItem + 1;\n  const numberOfManufactures = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n        SELECT ManufactureCount\n        FROM Parts_Designs\n        WHERE DesignID = ${designId}\n        `, \"singleValue\");\n  const newNManufactures = numberOfManufactures + 1;\n  (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n        INSERT INTO Parts_Items\n        VALUES (\n            ${newItem}, \n            ${designId},\n            ${_carConstants_js__WEBPACK_IMPORTED_MODULE_0__.standardBuildworkPerPart[part]},\n            1,\n            ${newNManufactures},\n            NULL,\n            NULL,\n            0,\n            NULL\n        )\n        `);\n  (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n            UPDATE Parts_Designs\n            SET ManufactureCount = ${newNManufactures}\n            WHERE DesignID = ${designId}\n            `);\n  return newItem;\n}\nfunction deleteItem(designId) {\n  // SELECT PartType FROM Parts_Designs WHERE DesignID = {designId}\n  const partType = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n      SELECT PartType\n      FROM Parts_Designs\n      WHERE DesignID = ${designId}\n    `, \"singleValue\");\n\n  // SELECT ItemID FROM Parts_Items WHERE DesignID = {designId} AND BuildWork = ...\n  const item = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n      SELECT ItemID\n      FROM Parts_Items\n      WHERE DesignID = ${designId}\n        AND BuildWork = ${_carConstants_js__WEBPACK_IMPORTED_MODULE_0__.standardBuildworkPerPart[partType]}\n    `, \"singleValue\");\n  (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n      DELETE FROM Parts_Items\n      WHERE ItemID = ${item}\n    `);\n}\nfunction addNewDesign(part, teamId, day, season, latestDesignPartFromTeam, newDesignId) {\n  const maxDesignFromPart = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n      SELECT MAX(DesignNumber)\n      FROM Parts_Designs\n      WHERE PartType = ${part}\n        AND TeamID = ${teamId}\n    `, \"singleValue\");\n  const newMaxDesign = maxDesignFromPart + 1;\n  (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n        UPDATE Parts_Designs_TeamData\n        SET NewDesignsThisSeason = ${newMaxDesign}\n        WHERE TeamID = ${teamId}\n            AND PartType = ${part}\n        `);\n  (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n        INSERT INTO Parts_Designs\n        VALUES (\n            ${newDesignId}, \n            ${part}, \n            6720, \n            6600, \n            ${day - 1}, \n            ${day}, \n            NULL,\n            5,\n            1,\n            0,\n            0,\n            1500,\n            ${season},\n            0,\n            0,\n            4,\n            ${newMaxDesign},\n            1,\n            ${teamId},\n            1\n        )\n        `);\n  (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n        INSERT INTO Parts_DesignHistoryData\n        VALUES (\n            ${newDesignId}, \n            0,\n            0,\n            0,\n            0\n        )\n        `);\n  copyFromTable(\"building\", latestDesignPartFromTeam, newDesignId);\n  copyFromTable(\"staff\", latestDesignPartFromTeam, newDesignId);\n  add4Items(newDesignId, part, teamId);\n}\nfunction copyFromTable(table, latestDesignId, newDesignId) {\n  let tableName = \"\";\n  if (table === \"building\") {\n    tableName = \"Parts_Designs_BuildingEffects\";\n  } else if (table === \"staff\") {\n    tableName = \"Parts_Designs_StaffEffects\";\n  }\n  const rows = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n        SELECT *\n        FROM ${tableName}\n        WHERE DesignID = ${latestDesignId}\n        `, \"allRows\");\n  for (const row of rows) {\n    // row => [DesignID, col1, col2, ...]\n    (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n                INSERT INTO ${tableName}\n                VALUES (${newDesignId}, ${row[1]}, ${row[2]}, 0)\n            `);\n  }\n}\nfunction add4Items(newDesignId, part, teamId) {\n  let maxItem = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n        SELECT MAX(ItemID)\n        FROM Parts_Items\n        `, \"singleValue\");\n  for (let i = 1; i <= 4; i++) {\n    maxItem += 1;\n    (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n        INSERT INTO Parts_Items\n        VALUES (\n          ${maxItem},\n          ${newDesignId},\n          ${_carConstants_js__WEBPACK_IMPORTED_MODULE_0__.standardBuildworkPerPart[part]},\n          1,\n          ${i},\n          NULL,\n          NULL,\n          0,\n          NULL\n        )\n      `);\n\n    // Para loadout 1 y 2\n    if (i <= 2) {\n      const loadoutId = i;\n      addPartToLoadout(newDesignId, part, teamId, loadoutId, maxItem);\n    }\n  }\n}\nfunction addPartToLoadout(designId, part, teamId, loadoutId, itemId) {\n  (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n            UPDATE Parts_CarLoadout\n            SET DesignID = ${designId}, ItemID = ${itemId}\n            WHERE TeamID = ${teamId}\n                AND PartType = ${part}\n                AND LoadoutID = ${loadoutId}\n        `);\n  (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n            UPDATE Parts_Items\n            SET AssociatedCar = ${loadoutId}, LastEquippedCar = ${loadoutId}\n            WHERE ItemID = ${itemId}\n        `);\n}\n\n// overwrite_performance_team(...)\nfunction overwritePerformanceTeam(teamId, performance, customTeam = null, yearIteration = null, loadoutDict = null) {\n  const row = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n      SELECT Day, CurrentSeason\n      FROM Player_State\n    `, 'singleRow');\n  if (!row) {\n    console.warn(\"Player_State not found\");\n    return;\n  }\n  const [day, season] = row;\n  const bestParts = getBestPartsUntil(day, customTeam);\n  const teamParts = bestParts[Number(teamId)];\n  for (const partKey of Object.keys(teamParts)) {\n    const part = Number(partKey);\n    if (part !== 0) {\n      const design = teamParts[part][0][0]; // design actual\n      const partName = _carConstants_js__WEBPACK_IMPORTED_MODULE_0__.parts[part]; // \"Suspension\", \"Wing\", etc.\n      const newDesign = performance[partName][\"designEditing\"];\n      delete performance[partName][\"designEditing\"];\n      let finalDesign = design;\n      if (Number(newDesign) === -1) {\n        // new part\n        const maxDesign = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n                        SELECT MAX(DesignID)\n                        FROM Parts_Designs\n                    `, 'singleValue');\n        const latestDesignPartFromTeam = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n                        SELECT MAX(DesignID)\n                        FROM Parts_Designs\n                        WHERE PartType = ${part}\n                        AND TeamID = ${teamId}\n                    `, 'singleValue');\n        const newDesignId = loadoutDict[String(part)][0];\n        addNewDesign(part, Number(teamId), day, season, latestDesignPartFromTeam, newDesignId);\n        finalDesign = newDesignId;\n      } else {\n        finalDesign = Number(newDesign);\n      }\n      const statsObj = performance[partName];\n      for (const statKey of Object.keys(statsObj)) {\n        const statNum = parseFloat(statsObj[statKey]);\n        let value;\n        if (yearIteration === \"24\" && Number(statKey) >= 7 && Number(statKey) <= 9) {\n          value = _carConstants_js__WEBPACK_IMPORTED_MODULE_0__.downforce24UnitValueToValue[statKey](statNum);\n        } else {\n          value = _carConstants_js__WEBPACK_IMPORTED_MODULE_0__.unitValueToValue[statKey](statNum);\n        }\n        if (Number(newDesign) !== -1) {\n          // update\n          changeExpertiseBased(part, statKey, value, Number(teamId));\n          (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n              UPDATE Parts_Designs_StatValues\n              SET UnitValue = ${statsObj[statKey]}\n              WHERE DesignID = ${finalDesign}\n                AND PartStat = ${statKey}\n            `);\n          (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n              UPDATE Parts_Designs_StatValues\n              SET Value = ${value}\n              WHERE DesignID = ${finalDesign}\n                AND PartStat = ${statKey}\n            `);\n        } else {\n          // insert\n          (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n              INSERT INTO Parts_Designs_StatValues\n              VALUES (\n                ${finalDesign}, \n                ${statKey}, \n                ${value}, \n                ${statsObj[statKey]}, \n                0.5, \n                1, \n                0.1\n              )\n            `);\n        }\n      }\n\n      // si newDesign == -1 => insertamos el peso standard\n      if (Number(newDesign) === -1) {\n        (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n            INSERT INTO Parts_Designs_StatValues\n            VALUES (\n              ${finalDesign},\n              15,\n              500,\n              ${_carConstants_js__WEBPACK_IMPORTED_MODULE_0__.standardWeightPerPart[part]},\n              0.5,\n              0,\n              0\n            )\n          `);\n\n        // Tras insertar stats, cambiamos expertise\n        for (const statKey of Object.keys(statsObj)) {\n          const statNum = parseFloat(statsObj[statKey]);\n          let value;\n          if (yearIteration === \"24\" && Number(statKey) >= 7 && Number(statKey) <= 9) {\n            value = _carConstants_js__WEBPACK_IMPORTED_MODULE_0__.downforce24UnitValueToValue[statKey](statNum);\n          } else {\n            value = _carConstants_js__WEBPACK_IMPORTED_MODULE_0__.unitValueToValue[statKey](statNum);\n          }\n          changeExpertiseBased(part, statKey, value, Number(teamId), \"new\", latestDesignPartFromTeam);\n        }\n      }\n    }\n  }\n\n  // commit\n}\nfunction changeExpertiseBased(part, stat, newValue, teamId, type = \"existing\", oldDesign = null) {\n  // SELECT Day, CurrentSeason FROM Player_State\n  const row = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n      SELECT Day, CurrentSeason\n      FROM Player_State\n    `, 'singleRow');\n  if (!row) {\n    console.warn(\"No Player_State found to do expertise changes\");\n    return;\n  }\n  const [day, curSeason] = row;\n  let currentValue = null;\n  if (type === \"existing\") {\n    // SELECT MAX(Value) FROM Parts_Designs_StatValues ...\n    currentValue = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n        SELECT MAX(Value)\n        FROM Parts_Designs_StatValues\n        WHERE PartStat = ${stat}\n          AND DesignID IN (\n            SELECT MAX(DesignID)\n            FROM Parts_Designs\n            WHERE PartType = ${part}\n              AND TeamID = ${teamId}\n              AND ValidFrom = ${curSeason}\n          )\n      `, 'singleValue');\n  } else if (type === \"new\") {\n    // SELECT Value FROM Parts_Designs_StatValues ...\n    currentValue = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n        SELECT Value\n        FROM Parts_Designs_StatValues\n        WHERE PartStat = ${stat}\n          AND DesignID = ${oldDesign}\n      `, 'singleValue');\n  }\n  if (!currentValue) {\n    currentValue = 1; // si no hay valor\n  }\n  if (currentValue === 0) {\n    currentValue = 1;\n  }\n\n  // en Python se hacía un cálculo con \"current_expertise\" (combinado),\n  // pero aquí se ve que en el final pones:\n  // new_expertise = current_value / 0.8\n  // => Hardcodeado. Ajusta si corresponde a tu lógica real.\n  const newExpertise = currentValue / 0.8;\n  (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n        UPDATE Parts_TeamExpertise\n        SET Expertise = ${newExpertise}\n        WHERE TeamID = ${teamId}\n            AND PartType = ${part}\n            AND PartStat = ${stat}\n        `);\n}\n\n// get_performance_all_teams_season(...) => ya lo tienes, o lo traduces igual\n\nfunction getPerformanceAllTeamsSeason(customTeam = false) {\n  const races = getRacesDays();\n  const firstDay = getFirstDaySeason();\n  // Insertamos al principio (0, firstDay, 0)\n  races.unshift([0, firstDay, 0]); // similar a insert(0, first_tuple)\n\n  const racesPerformances = [];\n  let previous = null;\n  for (const raceDay of races) {\n    // raceDay => [RaceID, Day, TrackID], en python pilla el day en [1]\n    const day = raceDay[1];\n    const performances = getPerformanceAllTeams(day, previous, customTeam);\n    racesPerformances.push(performances);\n    previous = performances;\n  }\n  const allRaces = getAllRaces();\n  return [racesPerformances, allRaces];\n}\nfunction getFirstDaySeason() {\n  const query = `\n        SELECT Number, COUNT(*) as Occurrences\n        FROM (\n            SELECT DayCreated as Number FROM Parts_Designs\n            UNION ALL\n            SELECT DayCompleted as Number FROM Parts_Designs\n        ) Combined\n        GROUP BY Number\n        ORDER BY Occurrences DESC\n        LIMIT 1;\n        `;\n  const row = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(query, 'singleRow');\n  if (!row) {\n    console.warn(\"No firstDay found\");\n    return 0;\n  }\n  const firstDay = row[0];\n  return firstDay;\n}\nfunction getAttributesAllTeams(customTeam = false) {\n  const teams = {};\n  const contributors = getContributorsDict();\n  const bestParts = getBestParts(customTeam);\n  const teamList = customTeam ? [...Array(10).keys()].map(i => i + 1).concat(32) : [...Array(10).keys()].map(i => i + 1);\n  for (const i of teamList) {\n    const dict = getCarStats(bestParts[i]);\n    const partStats = getPartStatsDict(dict);\n    const attributes = calculateCarAttributes(contributors, partStats);\n    teams[i] = attributes;\n  }\n  return teams;\n}\nfunction getMaxDesign() {\n  const val = (0,_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB)(`\n        SELECT MAX(DesignID)\n        FROM Parts_Designs\n        `, 'singleValue');\n  return val;\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/scriptUtils/carAnalysisUtils.js?");

/***/ }),

/***/ "./src/js/backend/scriptUtils/carConstants.js":
/*!****************************************************!*\
  !*** ./src/js/backend/scriptUtils/carConstants.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   acceleration_contributors: () => (/* binding */ acceleration_contributors),\n/* harmony export */   airflow_front_factors: () => (/* binding */ airflow_front_factors),\n/* harmony export */   airflow_middle_factors: () => (/* binding */ airflow_middle_factors),\n/* harmony export */   airflow_sensitivity_factors: () => (/* binding */ airflow_sensitivity_factors),\n/* harmony export */   attributesContributions: () => (/* binding */ attributesContributions),\n/* harmony export */   attributesContributions2: () => (/* binding */ attributesContributions2),\n/* harmony export */   attributesContributions3: () => (/* binding */ attributesContributions3),\n/* harmony export */   attributesMinMax: () => (/* binding */ attributesMinMax),\n/* harmony export */   attributesUnits: () => (/* binding */ attributesUnits),\n/* harmony export */   brake_cooling_contributors: () => (/* binding */ brake_cooling_contributors),\n/* harmony export */   brake_cooling_factors: () => (/* binding */ brake_cooling_factors),\n/* harmony export */   carAttributes: () => (/* binding */ carAttributes),\n/* harmony export */   defaultPartsStats: () => (/* binding */ defaultPartsStats),\n/* harmony export */   dirty_air_contributors: () => (/* binding */ dirty_air_contributors),\n/* harmony export */   downforce24UnitValueToValue: () => (/* binding */ downforce24UnitValueToValue),\n/* harmony export */   drag_reduction_factors: () => (/* binding */ drag_reduction_factors),\n/* harmony export */   drs_contributors: () => (/* binding */ drs_contributors),\n/* harmony export */   drs_delta_factors: () => (/* binding */ drs_delta_factors),\n/* harmony export */   engine_cooling_contributors: () => (/* binding */ engine_cooling_contributors),\n/* harmony export */   engine_cooling_factors: () => (/* binding */ engine_cooling_factors),\n/* harmony export */   engine_unitValueToValue: () => (/* binding */ engine_unitValueToValue),\n/* harmony export */   fuel_efficiency_factors: () => (/* binding */ fuel_efficiency_factors),\n/* harmony export */   high_speed_contributors: () => (/* binding */ high_speed_contributors),\n/* harmony export */   high_speed_downforce_factors: () => (/* binding */ high_speed_downforce_factors),\n/* harmony export */   lifespanPartsMinMax: () => (/* binding */ lifespanPartsMinMax),\n/* harmony export */   lifespan_factors: () => (/* binding */ lifespan_factors),\n/* harmony export */   low_speed_contributors: () => (/* binding */ low_speed_contributors),\n/* harmony export */   low_speed_downforce_factors: () => (/* binding */ low_speed_downforce_factors),\n/* harmony export */   medium_speed_contributors: () => (/* binding */ medium_speed_contributors),\n/* harmony export */   medium_speed_downforce_factors: () => (/* binding */ medium_speed_downforce_factors),\n/* harmony export */   minimalWeightPerPart: () => (/* binding */ minimalWeightPerPart),\n/* harmony export */   operational_range_factors: () => (/* binding */ operational_range_factors),\n/* harmony export */   optimalWeightPerPart: () => (/* binding */ optimalWeightPerPart),\n/* harmony export */   parts: () => (/* binding */ parts),\n/* harmony export */   performance_loss_factors: () => (/* binding */ performance_loss_factors),\n/* harmony export */   performance_threshold_factors: () => (/* binding */ performance_threshold_factors),\n/* harmony export */   power_factors: () => (/* binding */ power_factors),\n/* harmony export */   standardBuildworkPerPart: () => (/* binding */ standardBuildworkPerPart),\n/* harmony export */   standardWeightPerPart: () => (/* binding */ standardWeightPerPart),\n/* harmony export */   stats: () => (/* binding */ stats),\n/* harmony export */   statsMinMax: () => (/* binding */ statsMinMax),\n/* harmony export */   top_speed_contributors: () => (/* binding */ top_speed_contributors),\n/* harmony export */   unitValueToValue: () => (/* binding */ unitValueToValue)\n/* harmony export */ });\nconst stats = {\n  0: \"airflow_front\",\n  1: \"airflow_sensitivity\",\n  2: \"brake_cooling\",\n  3: \"drs_delta\",\n  4: \"drag_reduction\",\n  5: \"engine_cooling\",\n  6: \"fuel_efficiency\",\n  7: \"low_speed_downforce\",\n  8: \"medium_speed_downforce\",\n  9: \"high_speed_downforce\",\n  10: \"power\",\n  11: \"performance_loss\",\n  12: \"performance_threshold\",\n  13: \"airflow_middle\",\n  14: \"operational_range\",\n  15: \"lifespan\",\n  16: \"special_weight\"\n};\nconst defaultPartsStats = {\n  3: [3, 4, 5, 13, 15],\n  4: [0, 1, 2, 7, 8, 9, 15],\n  5: [1, 3, 4, 7, 8, 9, 15],\n  6: [0, 4, 5, 13, 15],\n  7: [1, 4, 7, 8, 9, 15],\n  8: [0, 2, 4, 7, 8, 9, 15]\n};\nconst unitValueToValue = {\n  0: x => x * 10,\n  1: x => x * 10,\n  2: x => x * 10,\n  3: x => x * 10,\n  4: x => x * 10,\n  5: x => x * 10,\n  6: x => (x - 90) * 1000 / 10,\n  7: x => (x - 3) / 0.002,\n  8: x => (x - 5) / 0.002,\n  9: x => (x - 7) / 0.001,\n  10: x => (x - 90) * 1000 / 10,\n  11: x => (85 - x) * 1000 / 20,\n  12: x => (x - 70) * 1000 / 15,\n  13: x => x * 10,\n  14: x => (85 - x) * 1000 / 15,\n  15: x => (x - 40) * 1000 / 30,\n  18: x => (x - 40) * 1000 / 30,\n  19: x => (x - 40) * 1000 / 30\n};\nconst engine_unitValueToValue = {\n  6: x => 20 * (x - 50),\n  10: x => 50 * (x - 80),\n  11: x => -50 * (x - 85),\n  12: x => 200 / 3 * (x - 70),\n  14: x => 50 * (x - 60),\n  18: x => 50 * (x - 50),\n  19: x => 50 * (x - 50)\n};\nconst downforce24UnitValueToValue = {\n  7: x => 497.6 * x - 1489.8,\n  8: x => 496.8 * x - 2479.5,\n  9: x => 974.048 * x - 6803.2614\n};\nconst parts = {\n  0: \"engine\",\n  3: \"chassis\",\n  4: \"front_wing\",\n  5: \"rear_wing\",\n  6: \"sidepods\",\n  7: \"underfloor\",\n  8: \"suspension\"\n};\nconst standardWeightPerPart = {\n  3: 5150,\n  4: 2625,\n  5: 3125,\n  6: 4125,\n  7: 3550,\n  8: 2900\n};\nconst standardBuildworkPerPart = {\n  3: 2000,\n  4: 500,\n  5: 500,\n  6: 1500,\n  7: 1500,\n  8: 1500\n};\nconst optimalWeightPerPart = {\n  3: 4070,\n  4: 1525,\n  5: 1945,\n  6: 3025,\n  7: 2390,\n  8: 1940\n};\nconst minimalWeightPerPart = {\n  3: 3800,\n  4: 1250,\n  5: 1650,\n  6: 2750,\n  7: 2100,\n  8: 1700\n};\nconst carAttributes = {\n  0: \"top_speed\",\n  1: \"acceleration\",\n  2: \"drs\",\n  3: \"low_speed\",\n  4: \"medium_speed\",\n  5: \"high_speed\",\n  6: \"dirty_air\",\n  7: \"brake_cooling\",\n  8: \"engine_cooling\"\n};\nconst statsMinMax = {\n  0: [0, 100],\n  1: [0, 100],\n  2: [0, 100],\n  3: [0, 100],\n  4: [0, 100],\n  5: [0, 100],\n  7: [3, 5],\n  8: [5, 7],\n  9: [7, 8],\n  10: [90, 100],\n  13: [0, 100]\n};\nconst lifespanPartsMinMax = {\n  3: [3800, 6500],\n  4: [1250, 4000],\n  5: [1650, 4600],\n  6: [2750, 5500],\n  7: [2100, 5000],\n  8: [1700, 4100]\n};\nconst attributesMinMax = {\n  top_speed: [313.00, 328.00],\n  acceleration: [1.800, 1.900],\n  drs: [0, 100],\n  low_speed: [2.000, 3.000],\n  medium_speed: [3.000, 4.000],\n  high_speed: [4.000, 5.500],\n  dirty_air: [0, 100],\n  brake_cooling: [0, 100],\n  engine_cooling: [0, 100]\n};\nconst attributesUnits = {\n  top_speed: \"km/h\",\n  acceleration: \"G\",\n  drs: \"%\",\n  low_speed: \"G\",\n  medium_speed: \"G\",\n  high_speed: \"G\",\n  dirty_air: \"%\",\n  brake_cooling: \"%\",\n  engine_cooling: \"%\"\n};\nconst attributesContributions = {\n  top_speed: 0.15,\n  acceleration: 0,\n  drs: 0.15,\n  low_speed: 0.1666,\n  medium_speed: 0.1666,\n  high_speed: 0.1666,\n  dirty_air: 0.0666,\n  brake_cooling: 0.0666,\n  engine_cooling: 0.0666\n};\nconst attributesContributions2 = {\n  top_speed: 0.15,\n  acceleration: 0,\n  drs: 0.15,\n  low_speed: 0.2166,\n  medium_speed: 0.2166,\n  high_speed: 0.2166,\n  dirty_air: 0.03,\n  brake_cooling: 0.01,\n  engine_cooling: 0.01\n};\nconst attributesContributions3 = {\n  top_speed: 0.144,\n  acceleration: 0.018,\n  drs: 0.115,\n  low_speed: 0.195,\n  medium_speed: 0.195,\n  high_speed: 0.195,\n  dirty_air: 0.029,\n  brake_cooling: 0.078,\n  engine_cooling: 0.031\n};\nconst fuel_efficiency_factors = {\n  0: 1\n};\nconst power_factors = {\n  0: 1\n};\nconst performance_loss_factors = {\n  0: 1\n};\nconst performance_threshold_factors = {\n  0: 1\n};\nconst operational_range_factors = {\n  0: 1\n};\nconst lifespan_factors = {\n  1: 0,\n  2: 0,\n  3: 5,\n  4: 2,\n  5: 3,\n  6: 5,\n  7: 4,\n  8: 1\n};\nconst drag_reduction_factors = {\n  3: 0.2,\n  5: 0.3,\n  6: 0.2,\n  7: 0.2,\n  8: 0.1\n};\nconst engine_cooling_factors = {\n  3: 0.4,\n  6: 0.6\n};\nconst airflow_middle_factors = {\n  3: 0.6,\n  6: 0.4\n};\nconst airflow_front_factors = {\n  4: 0.4,\n  6: 0.2,\n  8: 0.4\n};\nconst airflow_sensitivity_factors = {\n  4: 0.4,\n  5: 0.4,\n  7: 0.2\n};\nconst brake_cooling_factors = {\n  4: 0.4,\n  8: 0.6\n};\nconst low_speed_downforce_factors = {\n  4: 0.2,\n  5: 0.2,\n  7: 0.3,\n  8: 0.3\n};\nconst medium_speed_downforce_factors = {\n  4: 0.2,\n  5: 0.2,\n  7: 0.5,\n  8: 0.1\n};\nconst high_speed_downforce_factors = {\n  4: 0.2,\n  5: 0.2,\n  7: 0.5,\n  8: 0.1\n};\nconst drs_delta_factors = {\n  5: 0.75,\n  3: 0.25\n};\nconst top_speed_contributors = {\n  4: 1\n};\nconst acceleration_contributors = {\n  10: 0.5,\n  4: 0.5,\n  16: 0.15\n};\nconst drs_contributors = {\n  3: 1\n};\nconst low_speed_contributors = {\n  0: 0.6,\n  7: 1,\n  16: 0.24\n};\nconst medium_speed_contributors = {\n  0: 0.4,\n  13: 0.4,\n  8: 1,\n  16: 0.27\n};\nconst high_speed_contributors = {\n  13: 0.6,\n  9: 1,\n  16: 0.24\n};\nconst dirty_air_contributors = {\n  1: 1\n};\nconst brake_cooling_contributors = {\n  2: 1\n};\nconst engine_cooling_contributors = {\n  5: 1\n};\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/scriptUtils/carConstants.js?");

/***/ }),

/***/ "./src/js/backend/scriptUtils/countries.js":
/*!*************************************************!*\
  !*** ./src/js/backend/scriptUtils/countries.js ***!
  \*************************************************/
/***/ (() => {

eval("countries_abreviations = {\n  \"Andorra\": \"AD\",\n  \"United Arab Emirates\": \"AE\",\n  \"Afghanistan\": \"AF\",\n  \"Antigua and Barbuda\": \"AG\",\n  \"Anguilla\": \"AI\",\n  \"Albania\": \"AL\",\n  \"Armenia\": \"AM\",\n  \"Netherlands Antilles\": \"AN\",\n  \"Angola\": \"AO\",\n  \"Antarctica\": \"AQ\",\n  \"Argentina\": \"AR\",\n  \"American Samoa\": \"AS\",\n  \"Austria\": \"AT\",\n  \"Australia\": \"AU\",\n  \"Aruba\": \"AW\",\n  \"Åland Islands\": \"AX\",\n  \"Azerbaijan\": \"AZ\",\n  \"Bosnia and Herzegovina\": \"BA\",\n  \"Barbados\": \"BB\",\n  \"Bangladesh\": \"BD\",\n  \"Belgium\": \"BE\",\n  \"Burkina Faso\": \"BF\",\n  \"Bulgaria\": \"BG\",\n  \"Bahrain\": \"BH\",\n  \"Burundi\": \"BI\",\n  \"Benin\": \"BJ\",\n  \"Saint Barthélemy\": \"BL\",\n  \"Bermuda\": \"BM\",\n  \"Brunei Darussalam\": \"BN\",\n  \"Bolivia\": \"BO\",\n  \"Brazil\": \"BR\",\n  \"Bahamas\": \"BS\",\n  \"Bhutan\": \"BT\",\n  \"Bouvet Island\": \"BV\",\n  \"Botswana\": \"BW\",\n  \"Belarus\": \"BY\",\n  \"Belize\": \"BZ\",\n  \"Canada\": \"CA\",\n  \"Cocos (Keeling) Islands\": \"CC\",\n  \"Congo, Democratic Republic of the\": \"CD\",\n  \"Central African Republic\": \"CF\",\n  \"Congo, Republic of the\": \"CG\",\n  \"Switzerland\": \"CH\",\n  \"Côte d'Ivoire\": \"CI\",\n  \"Cook Islands\": \"CK\",\n  \"Chile\": \"CL\",\n  \"Cameroon\": \"CM\",\n  \"China\": \"CN\",\n  \"Colombia\": \"CO\",\n  \"Costa Rica\": \"CR\",\n  \"Cuba\": \"CU\",\n  \"Cape Verde\": \"CV\",\n  \"Curaçao\": \"CW\",\n  \"Christmas Island\": \"CX\",\n  \"Cyprus\": \"CY\",\n  \"Czech Republic\": \"CZ\",\n  \"Germany\": \"DE\",\n  \"Djibouti\": \"DJ\",\n  \"Denmark\": \"DK\",\n  \"Dominica\": \"DM\",\n  \"Dominican Republic\": \"DO\",\n  \"Algeria\": \"DZ\",\n  \"Ecuador\": \"EC\",\n  \"Estonia\": \"EE\",\n  \"Egypt\": \"EG\",\n  \"Western Sahara\": \"EH\",\n  \"Eritrea\": \"ER\",\n  \"Spain\": \"ES\",\n  \"Ethiopia\": \"ET\",\n  \"Finland\": \"FI\",\n  \"Fiji\": \"FJ\",\n  \"Falkland Islands (Malvinas)\": \"FK\",\n  \"Micronesia, Federated States of\": \"FM\",\n  \"Faroe Islands\": \"FO\",\n  \"France\": \"FR\",\n  \"Gabon\": \"GA\",\n  \"United Kingdom\": \"GB\",\n  \"Grenada\": \"GD\",\n  \"Georgia\": \"GE\",\n  \"French Guiana\": \"GF\",\n  \"Guernsey\": \"GG\",\n  \"Ghana\": \"GH\",\n  \"Gibraltar\": \"GI\",\n  \"Greenland\": \"GL\",\n  \"Gambia\": \"GM\",\n  \"Guinea\": \"GN\",\n  \"Guadeloupe\": \"GP\",\n  \"Equatorial Guinea\": \"GQ\",\n  \"Greece\": \"GR\",\n  \"South Georgia and the South Sandwich Islands\": \"GS\",\n  \"Guatemala\": \"GT\",\n  \"Guam\": \"GU\",\n  \"Guinea-Bissau\": \"GW\",\n  \"Guyana\": \"GY\",\n  \"Hong Kong\": \"HK\",\n  \"Heard Island and McDonald Islands\": \"HM\",\n  \"Honduras\": \"HN\",\n  \"Croatia\": \"HR\",\n  \"Haiti\": \"HT\",\n  \"Hungary\": \"HU\",\n  \"Indonesia\": \"ID\",\n  \"Ireland\": \"IE\",\n  \"Israel\": \"IL\",\n  \"Isle of Man\": \"IM\",\n  \"India\": \"IN\",\n  \"British Indian Ocean Territory\": \"IO\",\n  \"Iraq\": \"IQ\",\n  \"Iran, Islamic Republic of\": \"IR\",\n  \"Iceland\": \"IS\",\n  \"Italy\": \"IT\",\n  \"Jersey\": \"JE\",\n  \"Jamaica\": \"JM\",\n  \"Jordan\": \"JO\",\n  \"Japan\": \"JP\",\n  \"Kenya\": \"KE\",\n  \"Kyrgyzstan\": \"KG\",\n  \"Cambodia\": \"KH\",\n  \"Kiribati\": \"KI\",\n  \"Comoros\": \"KM\",\n  \"Saint Kitts and Nevis\": \"KN\",\n  \"Korea, Democratic People's Republic of\": \"KP\",\n  \"Korea, Republic of\": \"KR\",\n  \"Kuwait\": \"KW\",\n  \"Cayman Islands\": \"KY\",\n  \"Kazakhstan\": \"KZ\",\n  \"Lao People's Democratic Republic\": \"LA\",\n  \"Lebanon\": \"LB\",\n  \"Saint Lucia\": \"LC\",\n  \"Liechtenstein\": \"LI\",\n  \"Sri Lanka\": \"LK\",\n  \"Liberia\": \"LR\",\n  \"Lesotho\": \"LS\",\n  \"Lithuania\": \"LT\",\n  \"Luxembourg\": \"LU\",\n  \"Latvia\": \"LV\",\n  \"Libya\": \"LY\",\n  \"Morocco\": \"MA\",\n  \"Monaco\": \"MC\",\n  \"Moldova, Republic of\": \"MD\",\n  \"Montenegro\": \"ME\",\n  \"Saint Martin (French part)\": \"MF\",\n  \"Madagascar\": \"MG\",\n  \"Marshall Islands\": \"MH\",\n  \"Macedonia, the Former Yugoslav Republic of\": \"MK\",\n  \"Mali\": \"ML\",\n  \"Myanmar\": \"MM\",\n  \"Mongolia\": \"MN\",\n  \"Macao\": \"MO\",\n  \"Northern Mariana Islands\": \"MP\",\n  \"Martinique\": \"MQ\",\n  \"Mauritania\": \"MR\",\n  \"Montserrat\": \"MS\",\n  \"Malta\": \"MT\",\n  \"Mauritius\": \"MU\",\n  \"Maldives\": \"MV\",\n  \"Malawi\": \"MW\",\n  \"Mexico\": \"MX\",\n  \"Malaysia\": \"MY\",\n  \"Mozambique\": \"MZ\",\n  \"Namibia\": \"NA\",\n  \"New Caledonia\": \"NC\",\n  \"Niger\": \"NE\",\n  \"Norfolk Island\": \"NF\",\n  \"Nigeria\": \"NG\",\n  \"Nicaragua\": \"NI\",\n  \"Netherlands\": \"NL\",\n  \"Norway\": \"NO\",\n  \"Nepal\": \"NP\",\n  \"Nauru\": \"NR\",\n  \"Niue\": \"NU\",\n  \"New Zealand\": \"NZ\",\n  \"Oman\": \"OM\",\n  \"Panama\": \"PA\",\n  \"Peru\": \"PE\",\n  \"French Polynesia\": \"PF\",\n  \"Papua New Guinea\": \"PG\",\n  \"Philippines\": \"PH\",\n  \"Pakistan\": \"PK\",\n  \"Poland\": \"PL\",\n  \"Saint Pierre and Miquelon\": \"PM\",\n  \"Pitcairn\": \"PN\",\n  \"Puerto Rico\": \"PR\",\n  \"Palestine, State of\": \"PS\",\n  \"Portugal\": \"PT\",\n  \"Palau\": \"PW\",\n  \"Paraguay\": \"PY\",\n  \"Qatar\": \"QA\",\n  \"Réunion\": \"RE\",\n  \"Romania\": \"RO\",\n  \"Serbia\": \"RS\",\n  \"Russian\": \"RU\",\n  \"Rwanda\": \"RW\",\n  \"Saudi Arabia\": \"SA\",\n  \"Solomon Islands\": \"SB\",\n  \"Seychelles\": \"SC\",\n  \"Sudan\": \"SD\",\n  \"Sweden\": \"SE\",\n  \"Singapore\": \"SG\",\n  \"Saint Helena, Ascension and Tristan da Cunha\": \"SH\",\n  \"Slovenia\": \"SI\",\n  \"Svalbard and Jan Mayen\": \"SJ\",\n  \"Slovakia\": \"SK\",\n  \"Sierra Leone\": \"SL\",\n  \"San Marino\": \"SM\",\n  \"Senegal\": \"SN\",\n  \"Somalia\": \"SO\",\n  \"Suriname\": \"SR\",\n  \"South Sudan\": \"SS\",\n  \"Sao Tome and Principe\": \"ST\",\n  \"El Salvador\": \"SV\",\n  \"Sint Maarten (Dutch part)\": \"SX\",\n  \"Syrian Arab Republic\": \"SY\",\n  \"Swaziland\": \"SZ\",\n  \"Turks and Caicos Islands\": \"TC\",\n  \"Chad\": \"TD\",\n  \"French Southern Territories\": \"TF\",\n  \"Togo\": \"TG\",\n  \"Thailand\": \"TH\",\n  \"Tajikistan\": \"TJ\",\n  \"Tokelau\": \"TK\",\n  \"Timor-Leste\": \"TL\",\n  \"Turkmenistan\": \"TM\",\n  \"Tunisia\": \"TN\",\n  \"Tonga\": \"TO\",\n  \"Turkey\": \"TR\",\n  \"Trinidad and Tobago\": \"TT\",\n  \"Tuvalu\": \"TV\",\n  \"Taiwan, Province of China\": \"TW\",\n  \"Tanzania, United Republic of\": \"TZ\",\n  \"Ukraine\": \"UA\",\n  \"Uganda\": \"UG\",\n  \"United States Minor Outlying Islands\": \"UM\",\n  \"United States\": \"US\",\n  \"Uruguay\": \"UY\",\n  \"Uzbekistan\": \"UZ\",\n  \"Holy See (Vatican City State)\": \"VA\",\n  \"Saint Vincent and the Grenadines\": \"VC\",\n  \"Venezuela\": \"VE\",\n  \"Virgin Islands, British\": \"VG\",\n  \"Virgin Islands, U.S.\": \"VI\",\n  \"Vietnam\": \"VN\",\n  \"Vanuatu\": \"VU\",\n  \"Wallis and Futuna\": \"WF\",\n  \"Samoa\": \"WS\",\n  \"Yemen\": \"YE\",\n  \"Mayotte\": \"YT\",\n  \"South Africa\": \"ZA\",\n  \"Zambia\": \"ZM\",\n  \"Zimbabwe\": \"ZW\"\n};\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/scriptUtils/countries.js?");

/***/ }),

/***/ "./src/js/backend/scriptUtils/dbUtils.js":
/*!***********************************************!*\
  !*** ./src/js/backend/scriptUtils/dbUtils.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DBUtils)\n/* harmony export */ });\n/* harmony import */ var _countries_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./countries.js */ \"./src/js/backend/scriptUtils/countries.js\");\n/* harmony import */ var _countries_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_countries_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _carConstants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./carConstants.js */ \"./src/js/backend/scriptUtils/carConstants.js\");\n\n\nclass DBUtils {\n  /**\r\n   * @param {Function} queryDBFn - Función para ejecutar queries (queryDB).\r\n   * @param {Object} metadata - Objeto de metadatos (si lo necesitas).\r\n   */\n  constructor(queryDBFn, metadata) {\n    this.queryDB = queryDBFn;\n    this.metadata = metadata;\n  }\n\n  /**\r\n   * Convierte un color ARGB a hexadecimal.\r\n   */\n  argbToHex(argb) {\n    const rgb = argb & 0xFFFFFF; // Ignora el canal alfa\n    return `#${rgb.toString(16).padStart(6, '0').toUpperCase()}`;\n  }\n\n  /**\r\n   * Verifica si el archivo de guardado es de un año específico.\r\n   * @returns {Array} [ \"23\" o \"24\", TeamName, primaryColor, secondaryColor ]\r\n   */\n  checkYearSave() {\n    // Ver si existe la tabla Countries_RaceRecord\n    const row = this.queryDB(`\n      SELECT name \n      FROM sqlite_master \n      WHERE type='table' AND name='Countries_RaceRecord'\n    `, 'singleRow');\n    if (!row) {\n      // No existe la tabla -> asumo que es \"23\"\n      return [\"23\", null, null, null];\n    }\n\n    // Si existe, entonces busco TeamNameLocKey del TeamID=32\n    const nameValue = this.queryDB(`\n      SELECT TeamNameLocKey \n      FROM Teams \n      WHERE TeamID = 32\n    `, 'singleValue');\n    if (!nameValue) {\n      // No hay valor -> devuelvo \"24\" sin datos\n      return [\"24\", null, null, null];\n    }\n\n    // Extraer nombre\n    const match = nameValue.match(/\\[STRING_LITERAL:Value=\\|(.*?)\\|\\]/);\n    let name = null,\n      primaryColor = null,\n      secondaryColor = null;\n    if (match) {\n      name = match[1];\n\n      // Busco los colores\n      const primaryColorRow = this.queryDB(`\n        SELECT Colour\n        FROM Teams_Colours\n        WHERE TeamID = 32 AND ColourID = 0\n      `, 'singleRow');\n      const secondaryColorRow = this.queryDB(`\n        SELECT Colour\n        FROM Teams_Colours\n        WHERE TeamID = 32 AND ColourID = 1\n      `, 'singleRow');\n      if (primaryColorRow) {\n        primaryColor = this.argbToHex(primaryColorRow[0]);\n      }\n      if (secondaryColorRow) {\n        secondaryColor = this.argbToHex(secondaryColorRow[0]);\n      }\n    }\n    return [\"24\", name, primaryColor, secondaryColor];\n  }\n  fetchNationality(driverID, gameYear) {\n    if (gameYear === \"24\") {\n      const countryID = this.queryDB(`\n        SELECT CountryID \n        FROM Staff_BasicData \n        WHERE StaffID = ${driverID}\n      `, 'singleValue');\n      if (!countryID) return \"\";\n      const countryName = this.queryDB(`\n        SELECT Name \n        FROM Countries \n        WHERE CountryID = ${countryID}\n      `, 'singleValue');\n      if (!countryName) return \"\";\n      const match = countryName.match(/(?<=\\[Nationality_)[^\\]]+/);\n      if (match) {\n        const nat = match[0];\n        const natName = nat.replace(/(?<!^)([A-Z])/g, \" $1\");\n        return (_countries_js__WEBPACK_IMPORTED_MODULE_0___default())[natName] || \"\";\n      }\n      return \"\";\n    } else if (gameYear === \"23\") {\n      const nationality = this.queryDB(`\n        SELECT Nationality \n        FROM Staff_BasicData \n        WHERE StaffID = ${driverID}\n      `, 'singleValue');\n      if (!nationality) return \"\";\n      const natName = nationality.replace(/(?<!^)([A-Z])/g, \" $1\");\n      return (_countries_js__WEBPACK_IMPORTED_MODULE_0___default())[natName] || \"\";\n    }\n    return \"\";\n  }\n  fetchForFutureContract(driverID) {\n    const teamID = this.queryDB(`\n      SELECT TeamID \n      FROM Staff_Contracts \n      WHERE StaffID = ${driverID} \n        AND ContractType = 3\n    `, 'singleValue');\n    return teamID ?? -1;\n  }\n  fetchEngines() {\n    const statsIds = [6, 10, 11, 12, 14, 15];\n    const enginesList = [];\n    let newEngineIds = this.queryDB(`\n      SELECT engineID FROM Custom_Engines_List`, 'allRows');\n    newEngineIds = newEngineIds.map(row => row[0]);\n    let newErsIds = newEngineIds.map(id => id + 1);\n    let newGearboxesIds = newEngineIds.map(id => id + 2);\n    for (let i = 0; i < newEngineIds.length; i++) {\n      let resultDict = {};\n\n      // Obtener valores de stats\n      for (const stat of statsIds) {\n        const statResult = this.queryDB(`\n                SELECT partStat, unitValue \n                FROM Custom_Engines_Stats \n                WHERE designId = ${newEngineIds[i]} AND partStat = ${stat}\n            `, 'singleRow');\n        if (statResult) {\n          resultDict[statResult[0]] = statResult[1];\n        }\n      }\n\n      // Obtener valor de ERS\n      const ersResult = this.queryDB(`\n            SELECT UnitValue \n            FROM Custom_Engines_Stats \n            WHERE designId = ${newErsIds[i]} AND partStat = 15\n        `, 'singleValue');\n      if (ersResult !== null) {\n        resultDict[18] = ersResult;\n      }\n\n      // Obtener valor de gearbox\n      const gearboxResult = this.queryDB(`\n            SELECT UnitValue \n            FROM Custom_Engines_Stats \n            WHERE designId = ${newGearboxesIds[i]} AND partStat = 15\n        `, 'singleValue');\n      if (gearboxResult !== null) {\n        resultDict[19] = gearboxResult;\n      }\n      const engineName = this.queryDB(`\n          SELECT name \n          FROM Custom_Engines_List\n          WHERE engineID = ${newEngineIds[i]}\n      `, 'singleValue');\n\n      // Añadir la información del motor a la lista\n      enginesList.push([newEngineIds[i], resultDict, engineName]);\n    }\n    const engineAllocations = this.queryDB(`\n      SELECT * FROM Custom_Engine_Allocations\n    `, 'allRows');\n    return [enginesList, engineAllocations];\n  }\n  fetchMentality(staffID) {\n    // Obtengo todas las filas (morale es un array de arrays [[opinion],[opinion], ...])\n    const morale = this.queryDB(`\n      SELECT Opinion\n      FROM Staff_Mentality_AreaOpinions\n      WHERE StaffID = ${staffID}\n    `, 'allRows');\n\n    // Obtengo un solo valor\n    const globalMentality = this.queryDB(`\n      SELECT Mentality\n      FROM Staff_State\n      WHERE StaffID = ${staffID}\n    `, 'singleValue');\n    return [morale, globalMentality];\n  }\n  checkDrivesForTeam32(staffData) {\n    // staffData = [ firstName, lastName, staffID, teamID, posInTeam, minContractType, retired, countContracts ]\n\n    const contractRow = this.queryDB(`\n      SELECT TeamID, PosInTeam\n      FROM Staff_Contracts\n      WHERE StaffID = ${staffData[2]} \n        AND ContractType = 0 \n        AND TeamID = 32\n    `, 'singleRow');\n    if (contractRow) {\n      return [staffData[0], staffData[1], staffData[2], 32, contractRow[1], staffData[5], staffData[6], staffData[7]];\n    }\n    return staffData;\n  }\n  removeNumber(str) {\n    if (str && /\\d$/.test(str)) {\n      return str.slice(0, -1);\n    }\n    return str;\n  }\n  formatNamesAndFetchStats(nameData, type) {\n    // nameData: [ FirstName, LastName, StaffID, teamId, positionInTeam, minContractType, retired, countContracts ]\n    let firstName = \"\";\n    let lastName = \"\";\n\n    // Extract firstName\n    if (!nameData[0].includes(\"STRING_LITERAL\")) {\n      const m = nameData[0].match(/StaffName_Forename_(?:Male|Female)_(\\w+)/);\n      firstName = m ? this.removeNumber(m[1]) : \"\";\n    } else {\n      const m = nameData[0].match(/\\|([^|]+)\\|/);\n      firstName = m ? m[1] : \"\";\n    }\n\n    // Extract lastName\n    if (!nameData[1].includes(\"STRING_LITERAL\")) {\n      const m = nameData[1].match(/StaffName_Surname_(\\w+)/);\n      lastName = m ? this.removeNumber(m[1]) : \"\";\n    } else {\n      const m = nameData[1].match(/\\|([^|]+)\\|/);\n      lastName = m ? m[1] : \"\";\n    }\n    const formattedName = `${firstName} ${lastName}`;\n    let teamId = nameData[3] ?? 0;\n    let positionInTeam = nameData[4] ?? 0;\n\n    // para drivers que tienen minContractType != 0 (p.ej. reservas)\n    if (type === \"driver\" && nameData[5] !== 0) {\n      teamId = 0;\n      positionInTeam = 0;\n    }\n    let baseResult;\n    if (type === \"driver\") {\n      // [nombre, staffID, teamID, posInTeam, retired]\n      baseResult = [formattedName, nameData[2], teamId, positionInTeam, nameData[6]];\n    } else {\n      // staff normal\n      baseResult = [formattedName, nameData[2], teamId, positionInTeam];\n    }\n\n    // Buscamos stats\n    if (type === \"driver\") {\n      const statsRows = this.queryDB(`\n        SELECT Val\n        FROM Staff_PerformanceStats\n        WHERE StaffID = ${nameData[2]}\n          AND StatID BETWEEN 2 AND 10\n      `, 'allRows');\n      let stats = statsRows;\n      if (!stats || !stats.length) {\n        // si no hay stats, por defecto 50\n        stats = Array(9).fill([50]);\n      }\n      const extraRow = this.queryDB(`\n        SELECT Improvability, Aggression\n        FROM Staff_DriverData\n        WHERE StaffID = ${nameData[2]}\n      `, 'singleRow');\n\n      // Concatenamos: baseResult + stats + extraRow\n      // stats es array de arrays: [[val],[val],...]\n      // mapeamos para quedarnos con stats[i][0]\n      return baseResult.concat(stats.map(s => s[0]), extraRow ?? []);\n    }\n\n    // staff normal\n    let statIDs = [];\n    if (type === \"staff1\") {\n      statIDs = [0, 1, 14, 15, 16, 17];\n    } else if (type === \"staff2\") {\n      statIDs = [13, 25, 43];\n    } else if (type === \"staff3\") {\n      statIDs = [19, 20, 26, 27, 28, 29, 30, 31];\n    } else if (type === \"staff4\") {\n      statIDs = [11, 22, 23, 24];\n    }\n    if (statIDs.length) {\n      const statsRows = this.queryDB(`\n        SELECT Val\n        FROM Staff_PerformanceStats\n        WHERE StaffID = ${nameData[2]}\n          AND StatID IN (${statIDs.join(\",\")})\n      `, 'allRows');\n      return baseResult.concat(statsRows.map(s => s[0]));\n    }\n\n    // Si no entra en esos casos, simplemente devolvemos baseResult\n    return baseResult;\n  }\n  fetchDriverRetirement(driverID) {\n    const playerRow = this.queryDB(`\n      SELECT Day, CurrentSeason\n      FROM Player_State\n    `, 'singleRow');\n    let day = 0,\n      currentSeason = 0;\n    if (playerRow) {\n      [day, currentSeason] = playerRow;\n    } else {\n      console.warn(\"No se encontraron datos en Player_State.\");\n    }\n    const retirementAge = this.queryDB(`\n      SELECT RetirementAge\n      FROM Staff_GameData\n      WHERE StaffID = ${driverID}\n    `, 'singleValue');\n    const dob = this.queryDB(`\n      SELECT DOB\n      FROM Staff_BasicData\n      WHERE StaffID = ${driverID}\n    `, 'singleValue');\n    const age = dob != null ? Math.floor((day - dob) / 365.25) : 0;\n    return [retirementAge, age];\n  }\n  fetchDriverCode(driverID) {\n    let code = this.queryDB(`\n      SELECT DriverCode\n      FROM Staff_DriverData\n      WHERE StaffID = ${driverID}\n    `, 'singleValue');\n    if (!code) return \"\";\n    if (!code.includes(\"STRING_LITERAL\")) {\n      const m = code.match(/\\[DriverCode_(...)\\]/);\n      code = m ? m[1] : \"\";\n    } else {\n      const m = code.match(/\\[STRING_LITERAL:Value=\\|(...)\\|\\]/);\n      code = m ? m[1] : \"\";\n    }\n    return code.toUpperCase();\n  }\n  fetchYear() {\n    const row = this.queryDB(`\n      SELECT Day, CurrentSeason\n      FROM Player_State\n    `, 'singleRow');\n    if (!row) {\n      console.warn(\"No data found in Player_State.\");\n      return 0;\n    }\n    // Devolvemos CurrentSeason (row[1])\n    return row[1];\n  }\n  fetchDriverNumberDetails(driverID) {\n    let currentNumber = this.queryDB(`\n      SELECT Number\n      FROM Staff_DriverNumbers\n      WHERE CurrentHolder = ${driverID}\n    `, 'singleValue');\n    if (currentNumber == null) {\n      // Si no tiene número, ver si hay libres\n      const available = this.queryDB(`\n        SELECT Number\n        FROM Staff_DriverNumbers\n        WHERE CurrentHolder IS NULL\n      `, 'allRows');\n      if (!available.length) {\n        currentNumber = 0;\n      } else {\n        // Elige uno aleatorio\n        const randomIdx = Math.floor(Math.random() * available.length);\n        currentNumber = available[randomIdx][0];\n      }\n    }\n\n    // Quiere usar número de campeón?\n    const wantsChampion = this.queryDB(`\n      SELECT WantsChampionDriverNumber\n      FROM Staff_DriverData\n      WHERE StaffID = ${driverID}\n    `, 'singleValue');\n    return [currentNumber, wantsChampion];\n  }\n  fetchRaceFormula(driverID) {\n    const category = this.queryDB(`\n      SELECT MAX(\n        CASE \n          WHEN (TeamID <= 10 OR TeamID = 32) THEN 1\n          WHEN TeamID BETWEEN 11 AND 21 THEN 2\n          WHEN TeamID BETWEEN 22 AND 31 THEN 3\n          ELSE 4\n        END\n      ) AS Cat\n      FROM Staff_Contracts\n      WHERE ContractType = 0 AND StaffID = ${driverID}\n    `, 'singleValue');\n\n    // Por defecto 4 si no existe\n    return category ?? 4;\n  }\n  fetchMarketability(driverID) {\n    return this.queryDB(`\n      SELECT Marketability\n      FROM Staff_DriverData\n      WHERE StaffID = ${driverID}\n    `, 'singleValue');\n  }\n  fetchSuperlicense(driverID) {\n    return this.queryDB(`\n      SELECT HasSuperLicense\n      FROM Staff_DriverData\n      WHERE StaffID = ${driverID}\n    `, 'singleValue');\n  }\n  fetchDrivers(gameYear) {\n    const rows = this.queryDB(`\n      SELECT DISTINCT \n        bas.FirstName, bas.LastName, bas.StaffID, con.TeamID, con.PosInTeam, \n        MIN(con.ContractType) AS MinContractType, gam.Retired, COUNT(*)\n      FROM Staff_BasicData bas\n      JOIN Staff_DriverData dri ON bas.StaffID = dri.StaffID\n      LEFT JOIN Staff_Contracts con ON dri.StaffID = con.StaffID\n      LEFT JOIN Staff_GameData gam ON dri.StaffID = gam.StaffID\n      GROUP BY gam.StaffID\n      ORDER BY con.TeamID;\n    `, 'allRows');\n    const formattedData = [];\n    for (let driver of rows) {\n      // Si driver[7] > 1 => hay más de un contrato\n      if (driver[7] > 1) {\n        driver = this.checkDrivesForTeam32(driver);\n      }\n      const driverID = driver[2];\n\n      // Ignoramos placeholders\n      if (driver[0] === \"Placeholder\") {\n        continue;\n      }\n\n      // Format + stats\n      const result = this.formatNamesAndFetchStats(driver, \"driver\");\n\n      // Extra info\n      const [retirementAge, age] = this.fetchDriverRetirement(driverID);\n      let raceFormula = this.fetchRaceFormula(driverID) || 4;\n      const [driverNumber, wants1] = this.fetchDriverNumberDetails(driverID);\n      const superlicense = this.fetchSuperlicense(driverID);\n      const futureTeam = this.fetchForFutureContract(driverID);\n      const driverCode = this.fetchDriverCode(driverID);\n      const nationality = this.fetchNationality(driverID, gameYear);\n\n      // result es array, lo convertimos a objeto para mayor claridad\n      const data = {\n        ...result\n      };\n      data.driver_number = driverNumber;\n      data.wants1 = wants1;\n      data.retirement_age = retirementAge;\n      data.age = age;\n      data.superlicense = superlicense;\n      data.race_formula = raceFormula;\n      data.team_future = futureTeam;\n      data.driver_code = driverCode;\n      data.nationality = nationality;\n\n      // Datos específicos para 2024\n      if (gameYear === \"24\") {\n        const [morale, gMentality] = this.fetchMentality(driverID);\n        data.global_mentality = gMentality ?? null;\n\n        // morale es array de arrays. Ejemplo: [ [op1], [op2], [op3] ]\n        if (morale.length >= 3) {\n          data.mentality0 = morale[0][0];\n          data.mentality1 = morale[1][0];\n          data.mentality2 = morale[2][0];\n        }\n        const market = this.fetchMarketability(driverID);\n        data.marketability = market ?? 0;\n      }\n      formattedData.push(data);\n    }\n    return formattedData;\n  }\n  fetchStaff(gameYear) {\n    const rows = this.queryDB(`\n      SELECT DISTINCT\n        bas.FirstName, \n        bas.LastName, \n        bas.StaffID, \n        con.TeamID, \n        gam.StaffType\n      FROM Staff_GameData gam\n      JOIN Staff_BasicData bas ON gam.StaffID = bas.StaffID\n      LEFT JOIN Staff_Contracts con \n        ON bas.StaffID = con.StaffID \n        AND (con.ContractType = 0 OR con.ContractType IS NULL)\n      WHERE gam.StaffType != 0\n      ORDER BY \n        CASE WHEN con.TeamID IS NULL THEN 1 ELSE 0 END,\n        con.TeamID\n    `, 'allRows');\n    if (!rows.length) {\n      console.warn(\"No staff data found.\");\n      return [];\n    }\n    const formattedData = [];\n    for (let staff of rows) {\n      // staff = [ FirstName, LastName, StaffID, TeamID, StaffType ]\n      if (staff[0] === \"Placeholder\") {\n        continue;\n      }\n      const staffID = staff[2];\n      const staffType = `staff${staff[4]}`;\n      const result = this.formatNamesAndFetchStats(staff, staffType);\n      const [retirementAge, age] = this.fetchDriverRetirement(staffID);\n      let raceFormula = this.fetchRaceFormula(staffID) || 4;\n      const futureTeam = this.fetchForFutureContract(staffID);\n      const nationality = this.fetchNationality(staffID, gameYear);\n      const data = {\n        ...result\n      };\n      data.retirement_age = retirementAge;\n      data.age = age;\n      data.race_formula = raceFormula;\n      data.team_future = futureTeam;\n      data.nationality = nationality;\n      if (gameYear === \"24\") {\n        const [morale, gMentality] = this.fetchMentality(staffID);\n        data.global_mentality = gMentality ?? -1;\n        if (morale.length >= 3) {\n          data.mentality0 = morale[0][0] ?? -1;\n          data.mentality1 = morale[1][0] ?? -1;\n          data.mentality2 = morale[2][0] ?? -1;\n        } else {\n          data.mentality0 = -1;\n          data.mentality1 = -1;\n          data.mentality2 = -1;\n        }\n      }\n      formattedData.push(data);\n    }\n    return formattedData;\n  }\n  fetchDriversPerYear(year) {\n    // Construimos la consulta SQL\n    const sql = `\n      SELECT \n        bas.FirstName, \n        bas.LastName, \n        res.DriverID, \n        res.TeamID\n      FROM Staff_BasicData bas\n      JOIN Races_Results res \n        ON bas.StaffID = res.DriverID\n      WHERE Season = ${year}\n      GROUP BY \n        bas.FirstName, \n        bas.LastName, \n        bas.StaffID, \n        res.TeamID\n      ORDER BY res.TeamID\n    `;\n\n    // Obtenemos todas las filas (array de objetos o tuplas)\n    const drivers = this.queryDB(sql, 'allRows') || [];\n\n    // Formateamos cada fila como quieras (equivalente a \"format_names_simple\")\n    const formattedTuples = drivers.map(row => this.formatNamesSimple(row));\n    return formattedTuples;\n  }\n  formatNamesSimple(name) {\n    let nombre = \"\";\n    let apellido = \"\";\n\n    // Si no contiene \"STRING_LITERAL\", buscamos \"StaffName_Forename_(Male|Female)_(...)\".\n    if (!name[0].includes(\"STRING_LITERAL\")) {\n      const nombrePattern = /StaffName_Forename_(Male|Female)_(\\w+)/;\n      const match = name[0].match(nombrePattern);\n      if (match) {\n        // Asumiendo que tienes un método removeNumber similar al de Python\n        nombre = this.removeNumber(match[2]);\n      } else {\n        nombre = \"\";\n      }\n    } else {\n      // De lo contrario, buscamos la parte entre \"| ... |\"\n      const pattern = /\\|([^|]+)\\|/;\n      const match = name[0].match(pattern);\n      if (match) {\n        nombre = match[1];\n      } else {\n        nombre = \"\";\n      }\n    }\n\n    // Repetimos la lógica para el apellido\n    if (!name[1].includes(\"STRING_LITERAL\")) {\n      const apellidoPattern = /StaffName_Surname_(\\w+)/;\n      const match = name[1].match(apellidoPattern);\n      if (match) {\n        apellido = this.removeNumber(match[1]);\n      } else {\n        apellido = \"\";\n      }\n    } else {\n      const pattern = /\\|([^|]+)\\|/;\n      const match = name[1].match(pattern);\n      if (match) {\n        apellido = match[1];\n      } else {\n        apellido = \"\";\n      }\n    }\n\n    // Construimos el nombre completo\n    const nameFormatted = `${nombre} ${apellido}`.trim();\n\n    // El TeamID (índice 3 en el array). Si es nulo/indefinido, lo ponemos a 0\n    const teamId = name[3] != null ? name[3] : 0;\n\n    // Devolvemos la misma estructura que en Python: (Nombre Formateado, DriverID, TeamID)\n    return [nameFormatted, name[2], teamId];\n  }\n  fetchSeasonResults(yearSelected) {\n    const drivers = this.queryDB(`\n      SELECT DriverID\n      FROM Races_DriverStandings\n      WHERE RaceFormula = 1\n        AND SeasonID = ${yearSelected}\n    `, 'allRows') || [];\n    const seasonResults = [];\n    drivers.forEach(row => {\n      const driverID = row[0];\n      const driverRes = this.fetchOneDriverSeasonResults([driverID], [yearSelected]);\n      if (driverRes) {\n        seasonResults.push(driverRes);\n      }\n    });\n    return seasonResults;\n  }\n  fetchTeamsStandings(year) {\n    return this.queryDB(`\n      SELECT TeamID, Position\n      FROM Races_TeamStandings\n      WHERE SeasonID = ${year}\n        AND RaceFormula = 1\n    `, 'allRows') || [];\n  }\n  fetchOneTeamSeasonResults(team, year) {\n    const teamID = team;\n    const season = year;\n    const drivers = this.queryDB(` SELECT DISTINCT DriverID\n       FROM Races_Results\n       WHERE Season = ${season}\n       AND TeamID = ${teamID} `, 'allRows') || [];\n    const results = [];\n    for (let driver of drivers) {\n      const driverID = driver[0];\n      const driverResults = this.fetchOneDriverSeasonResults(driverID, season);\n      if (driverResults) {\n        results.push(driverResults);\n      }\n    }\n    return results;\n  }\n  fetchOneDriverSeasonResults(driver, year) {\n    const driverID = driver;\n    const season = year;\n    const results = this.queryDB(`\n      SELECT DriverID, TeamID, FinishingPos, Points\n      FROM Races_Results\n      WHERE Season = ${season}\n        AND DriverID = ${driverID}\n    `, 'allRows') || [];\n    if (results.length > 0) {\n      const sprintResults = this.queryDB(`\n        SELECT RaceID, FinishingPos, ChampionshipPoints\n        FROM Races_SprintResults\n        WHERE SeasonID = ${season}\n          AND DriverID = ${driverID}\n      `, 'allRows') || [];\n      const teamID = results[0][1];\n      const driverNameRow = this.queryDB(`\n        SELECT FirstName, LastName\n        FROM Staff_BasicData\n        WHERE StaffID = ${driverID}\n      `, 'singleRow');\n      return this.formatSeasonResults(results, driverNameRow, teamID, driver, year, sprintResults);\n    }\n    return null;\n  }\n  fetchEventsDoneFrom(year) {\n    const daySeasonRow = this.queryDB(`\n      SELECT Day, CurrentSeason\n      FROM Player_State\n    `, 'singleRow');\n    if (!daySeasonRow) {\n      return [];\n    }\n    const [currentDay, currentSeason] = daySeasonRow;\n    const seasonIdsRows = this.queryDB(`\n      SELECT RaceID\n      FROM Races\n      WHERE SeasonID = ${year}\n        AND Day < ${currentDay}\n    `, 'allRows') || [];\n    const eventsIds = seasonIdsRows.map(row => row[0]);\n    return eventsIds;\n  }\n  fetchEventsFrom(year) {\n    const seasonEventsRows = this.queryDB(`\n      SELECT TrackID\n      FROM Races\n      WHERE SeasonID = ${year}\n    `, 'allRows') || [];\n    const seasonIdsRows = this.queryDB(`\n      SELECT RaceID\n      FROM Races\n      WHERE SeasonID = ${year}\n    `, 'allRows') || [];\n    const eventsIds = [];\n    for (let i = 0; i < seasonIdsRows.length; i++) {\n      const raceID = seasonIdsRows[i][0];\n      const trackID = seasonEventsRows[i][0];\n      eventsIds.push([raceID, trackID]);\n    }\n    return eventsIds;\n  }\n  formatSeasonResults(results, driverName, teamID, driver, year, sprints) {\n    // Asumiendo que driver y year son arrays (p.ej. driver=[123], year=[2023]):\n    const driverID = driver;\n    const season = year;\n\n    // -------- 1) Formatear nombre --------\n    let nombre = \"\";\n    let apellido = \"\";\n\n    // driverName podría ser un array [firstName, lastName] o un objeto {FirstName, LastName}.\n    // Aquí asumimos array. Si tu queryDB retorna objetos, ajusta a driverName.FirstName, driverName.LastName.\n    const firstName = driverName ? driverName[0] : \"\";\n    const lastName = driverName ? driverName[1] : \"\";\n\n    // Lógica análoga a Python para \"STRING_LITERAL\"\n    if (!firstName.includes(\"STRING_LITERAL\")) {\n      const nombrePattern = /StaffName_Forename_(Male|Female)_(\\w+)/;\n      const match = firstName.match(nombrePattern);\n      if (match) {\n        nombre = this.removeNumber(match[2]); // asumiendo que tienes un removeNumber\n      } else {\n        nombre = \"\";\n      }\n    } else {\n      const pattern = /\\|([^|]+)\\|/;\n      const match = firstName.match(pattern);\n      nombre = match ? match[1] : \"\";\n    }\n    if (!lastName.includes(\"STRING_LITERAL\")) {\n      const apellidoPattern = /StaffName_Surname_(\\w+)/;\n      const match = lastName.match(apellidoPattern);\n      if (match) {\n        apellido = this.removeNumber(match[1]);\n      } else {\n        apellido = \"\";\n      }\n    } else {\n      const pattern = /\\|([^|]+)\\|/;\n      const match = lastName.match(pattern);\n      apellido = match ? match[1] : \"\";\n    }\n    const nameFormatted = `${nombre} ${apellido}`.trim();\n\n    // -------- 2) Obtener todas las carreras que corrió este piloto en la temporada --------\n    const racesParticipated = this.queryDB(`\n      SELECT RaceID\n      FROM Races_Results\n      WHERE DriverID = ${driverID}\n        AND Season = ${season}\n    `, 'allRows') || [];\n\n    // results = array con [DriverID, TeamID, FinishingPos, Points]\n    // Queremos convertirlo en algo más detallado. \n    // De Python: formatred_results = [(FinishingPos, Points) for result in results]\n    // Pero necesitamos mapear 1:1 con la lista de RaceIDs, así que iremos uno a uno.\n    let formatredResults = results.map(r => [r[2], r[3]]);\n    // r[2] => FinishingPos, r[3] => Points.\n\n    // Suponiendo que hay la misma cantidad y el mismo orden de carreras \n    // entre \"results\" y \"racesParticipated\". \n    // Si no, necesitarías hacer matching por RaceID. \n    // En tu Python original, tomabas RaceIDs en order y reasignabas. \n    // Asegurémonos de usar el RaceID de 'racesParticipated[i]' igual que Python.\n\n    for (let i = 0; i < racesParticipated.length; i++) {\n      const raceID = racesParticipated[i][0]; // Cada fila es [RaceID]\n\n      // 2.1) Buscamos quién hizo la fastest lap\n      const driverWithFastestLap = this.queryDB(`\n        SELECT DriverID\n        FROM Races_Results\n        WHERE FastestLap > 0\n          AND RaceID = ${raceID}\n          AND Season = ${season}\n        ORDER BY FastestLap\n        LIMIT 1\n      `, 'singleValue');\n\n      // 2.2) Checamos si fue DNF\n      const dnfd = this.queryDB(`\n        SELECT DNF\n        FROM Races_Results\n        WHERE DriverID = ${driverID}\n          AND Season = ${season}\n          AND RaceID = ${raceID}\n      `, 'singleValue') || 0;\n\n      // Inyectamos RaceID al inicio de la tupla\n      // Python: formatred_results[i] = (raceID,) + formatred_results[i]\n      formatredResults[i] = [raceID, ...formatredResults[i]];\n\n      // Si DNF = 1 => set FinishingPos y Points a -1\n      if (dnfd === 1) {\n        const arr = [...formatredResults[i]];\n        arr[1] = -1; // FinishingPos\n        arr[2] = -1; // Points\n        formatredResults[i] = arr;\n      }\n\n      // Marcar fastest lap\n      if (driverWithFastestLap === driverID) {\n        // le append \"1\"\n        formatredResults[i].push(1);\n      } else {\n        // le append \"0\"\n        formatredResults[i].push(0);\n      }\n\n      // 2.3) Quali Stage & FinishingPos\n      const QStage = this.queryDB(`\n        SELECT MAX(QualifyingStage)\n        FROM Races_QualifyingResults\n        WHERE RaceFormula = 1\n          AND RaceID = ${raceID}\n          AND SeasonID = ${season}\n          AND DriverID = ${driverID}\n      `, 'singleValue') || 0;\n      const QRes = this.queryDB(`\n        SELECT FinishingPos\n        FROM Races_QualifyingResults\n        WHERE RaceFormula = 1\n          AND RaceID = ${raceID}\n          AND SeasonID = ${season}\n          AND DriverID = ${driverID}\n          AND QualifyingStage = ${QStage}\n      `, 'singleValue') || 99;\n\n      // 2.4) Cálculo de diferencias de tiempo (carrera y pole)\n      const timeDifference = this.calculateTimeDifference(driverID, raceID);\n      const poleDifference = this.calculateTimeToPole(driverID, raceID);\n\n      // Añadimos QRes, timeDifference y poleDifference\n      formatredResults[i].push(QRes);\n      formatredResults[i].push(timeDifference);\n      formatredResults[i].push(poleDifference);\n    }\n\n    // -------- 3) Añadir datos de sprint al formatredResults --------\n    // En Python: \n    // for tupla1 in sprints:\n    //   for i, tupla2 in enumerate(formatred_results):\n    //     if tupla1[0] == tupla2[0]:\n    //       formatred_results[i] = tupla2 + (tupla1[2], tupla1[1])\n    //\n    // tupla1[0] => RaceID\n    // tupla1[1] => FinishingPos\n    // tupla1[2] => ChampionshipPoints\n\n    for (const sprintRow of sprints) {\n      // sprintRow: [RaceID, FinishingPos, ChampionshipPoints]\n      const [sprintRaceID, sprintPos, sprintPoints] = sprintRow;\n      // Buscamos coincidencia en formatredResults\n      for (let i = 0; i < formatredResults.length; i++) {\n        if (formatredResults[i][0] === sprintRaceID) {\n          // Agregamos ChampionshipPoints y FinishingPos al final\n          // (Ojo: en Python lo agregas en orden (tupla1[2], tupla1[1]) => (ChampPoints, FinishingPos)\n          formatredResults[i] = [...formatredResults[i], sprintPoints, sprintPos];\n          break;\n        }\n      }\n    }\n\n    // -------- 4) Añadir TeamID a cada carrera --------\n    // En Python se hace un for i in range(len(...)):\n    //   team_in_race = ...\n    //   formatred_results[i] += (team_in_race)\n    //   latest_team = ...\n    let latestTeam = null;\n    for (let i = 0; i < formatredResults.length; i++) {\n      const raceID = formatredResults[i][0];\n      const teamInRace = this.queryDB(`\n        SELECT TeamID\n        FROM Races_Results\n        WHERE RaceID = ${raceID}\n          AND DriverID = ${driverID}\n      `, 'singleValue') || 0;\n      formatredResults[i].push(teamInRace);\n      latestTeam = teamInRace;\n    }\n\n    // -------- 5) Agregar la posición final en el campeonato al inicio --------\n    const position = this.queryDB(`\n      SELECT Position\n      FROM Races_Driverstandings\n      WHERE RaceFormula = 1\n        AND SeasonID = ${season}\n        AND DriverID = ${driverID}\n    `, 'singleValue') || 0;\n    formatredResults.unshift(position);\n    formatredResults.unshift(latestTeam);\n    formatredResults.unshift(nameFormatted);\n\n    // Devolvemos el array final\n    return formatredResults;\n  }\n  calculateTimeToPole(driverID, raceID) {\n    const QStage = this.queryDB(`\n      SELECT MAX(QualifyingStage)\n      FROM Races_QualifyingResults\n      WHERE RaceFormula = 1\n        AND RaceID = ${raceID}\n        AND DriverID = ${driverID}\n    `, 'singleValue') || 0;\n    const poleTime = this.queryDB(`\n      SELECT MIN(FastestLap)\n      FROM Races_QualifyingResults\n      WHERE RaceFormula = 1\n        AND RaceID = ${raceID}\n        AND QualifyingStage = 3\n        AND FastestLap IS NOT 0\n    `, 'singleValue') || 9999;\n    const driverTime = this.queryDB(`\n      SELECT FastestLap\n      FROM Races_QualifyingResults\n      WHERE RaceFormula = 1\n        AND RaceID = ${raceID}\n        AND QualifyingStage = ${QStage}\n        AND DriverID = ${driverID}\n    `, 'singleValue') || 9999;\n    if (driverTime < poleTime) {\n      return \"NR\";\n    } else {\n      const difference = Number((driverTime - poleTime).toFixed(2));\n      return `+${difference}s`;\n    }\n  }\n  calculateTimeDifference(driverID, raceID) {\n    const totalLaps = this.queryDB(`\n      SELECT MAX(Laps)\n      FROM Races_Results\n      WHERE RaceID = ${raceID}\n    `, 'singleValue') || 0;\n    const driverLaps = this.queryDB(`\n      SELECT Laps\n      FROM Races_Results\n      WHERE RaceID = ${raceID}\n        AND DriverID = ${driverID}\n    `, 'singleValue') || 0;\n    if (driverLaps < totalLaps) {\n      return `+${totalLaps - driverLaps} L`;\n    } else {\n      const winnerID = this.queryDB(`\n        SELECT DriverID\n        FROM Races_Results\n        WHERE RaceID = ${raceID}\n          AND FinishingPos = 1\n      `, 'singleValue');\n      const winnerTime = this.queryDB(`\n        SELECT Time\n        FROM Races_Results\n        WHERE RaceID = ${raceID}\n          AND DriverID = ${winnerID}\n      `, 'singleValue') || 0;\n      const driverTime = this.queryDB(`\n        SELECT Time\n        FROM Races_Results\n        WHERE RaceID = ${raceID}\n          AND DriverID = ${driverID}\n      `, 'singleValue') || 0;\n      const timeDiff = Number((driverTime - winnerTime).toFixed(1));\n      return `+${timeDiff}s`;\n    }\n  }\n  fetchCalendar() {\n    // Saco [ Day, CurrentSeason ] de Player_State\n    const daySeason = this.queryDB(`\n      SELECT Day, CurrentSeason\n      FROM Player_State\n    `, 'singleRow');\n    if (!daySeason) {\n      console.warn(\"No data found in Player_State.\");\n      return [];\n    }\n    const [day, currentSeason] = daySeason;\n\n    // Saco el calendario\n    const calendar = this.queryDB(`\n      SELECT TrackID, WeatherStatePractice, WeatherStateQualifying, WeatherStateRace, WeekendType, State\n      FROM Races\n      WHERE SeasonID = ${currentSeason}\n    `, 'allRows');\n    return calendar;\n  }\n  fetchDriverNumbers() {\n    const numbers = this.queryDB(`SELECT DISTINCT Number\n       FROM Staff_DriverNumbers dn \n       JOIN Staff_Contracts con \n       ON dn.CurrentHolder = con.StaffID \n       WHERE dn.CurrentHolder IS NULL OR con.PosInTeam > 2`, 'allRows');\n    return numbers.map(n => n[0]);\n  }\n  fetchDriverContract(id) {\n    // Obtener el contrato actual\n    const currentContract = this.queryDB(`\n        SELECT Salary, EndSeason, StartingBonus, RaceBonus, RaceBonusTargetPos, TeamID\n        FROM Staff_Contracts\n        WHERE ContractType = 0 AND StaffID = ${id}\n    `, 'singleRow');\n\n    // Obtener el contrato futuro\n    const futureContract = this.queryDB(`\n        SELECT Salary, EndSeason, StartingBonus, RaceBonus, RaceBonusTargetPos, PosInTeam, TeamID\n        FROM Staff_Contracts\n        WHERE ContractType = 3 AND StaffID = ${id}\n    `, 'singleRow');\n\n    // Obtener el día y la temporada actual\n    const daySeason = this.queryDB(`\n        SELECT Day, CurrentSeason\n        FROM Player_State\n    `, 'singleRow');\n\n    // Retornar los resultados\n    return [currentContract, futureContract, daySeason ? daySeason[1] : null];\n  }\n  checkCustomTables() {\n    let createdEnginesList = false;\n    let createdEnginesStats = false;\n    let createdEnginesAllocations = false;\n    const tablesToCheck = [{\n      name: 'Custom_Engines_List',\n      createSQL: `\n          CREATE TABLE Custom_Engines_List (\n            engineId INTEGER PRIMARY KEY,\n            name TEXT\n          )\n        `\n    }, {\n      name: 'Custom_Engines_Stats',\n      createSQL: `\n          CREATE TABLE Custom_Engines_Stats (\n            engineId INTEGER,\n            designId INTEGER,\n            partStat INTEGER,\n            unitValue REAL,\n            Value REAL\n          )\n        `\n    }, {\n      name: 'Custom_Save_Config',\n      createSQL: `\n          CREATE TABLE Custom_Save_Config (\n            key TEXT PRIMARY KEY,\n            value TEXT\n          )\n        `\n    }, {\n      name: 'Custom_Engine_Allocations',\n      createSQL: `\n          CREATE TABLE Custom_Engine_Allocations (\n            teamId INTEGER,\n            engineId INTEGER\n            \n          )\n        `\n    }];\n    tablesToCheck.forEach(table => {\n      const tableExists = this.queryDB(`\n        SELECT name\n        FROM sqlite_master\n        WHERE type='table'\n          AND name='${table.name}'\n      `, 'singleValue');\n      if (!tableExists) {\n        this.queryDB(table.createSQL);\n        console.log(\"TABLE CREATED: \", table.name);\n        if (table.name === 'Custom_Engines_List') {\n          createdEnginesList = true;\n        } else if (table.name === 'Custom_Engines_Stats') {\n          createdEnginesStats = true;\n        } else if (table.name === 'Custom_Engine_Allocations') {\n          createdEnginesAllocations = true;\n        }\n      }\n    });\n    this.insertDefualtEnginesData(createdEnginesList, createdEnginesStats, createdEnginesAllocations);\n  }\n  insertDefualtEnginesData(list, stats, allocations) {\n    const engines = [{\n      id: 1,\n      name: 'Ferrari',\n      stats: [{\n        partStat: 6,\n        value: 500,\n        unitValue: 75,\n        designId: 1\n      }, {\n        partStat: 10,\n        value: 750,\n        unitValue: 95,\n        designId: 1\n      }, {\n        partStat: 11,\n        value: 250,\n        unitValue: 80,\n        designId: 1\n      }, {\n        partStat: 12,\n        value: 500,\n        unitValue: 77.5,\n        designId: 1\n      }, {\n        partStat: 14,\n        value: 400,\n        unitValue: 68,\n        designId: 1\n      }, {\n        partStat: 15,\n        value: 350,\n        unitValue: 57,\n        designId: 2\n      }, {\n        partStat: 15,\n        value: 0,\n        unitValue: 50,\n        designId: 3\n      }]\n    }, {\n      id: 4,\n      name: 'Red Bull',\n      stats: [{\n        partStat: 6,\n        value: 300,\n        unitValue: 65,\n        designId: 4\n      }, {\n        partStat: 10,\n        value: 1000,\n        unitValue: 100,\n        designId: 4\n      }, {\n        partStat: 11,\n        value: 0,\n        unitValue: 85,\n        designId: 4\n      }, {\n        partStat: 12,\n        value: 0,\n        unitValue: 70,\n        designId: 4\n      }, {\n        partStat: 14,\n        value: 0,\n        unitValue: 60,\n        designId: 4\n      }, {\n        partStat: 15,\n        value: 0,\n        unitValue: 50,\n        designId: 5\n      }, {\n        partStat: 15,\n        value: 600,\n        unitValue: 62,\n        designId: 6\n      }]\n    }, {\n      id: 7,\n      name: 'Mercedes',\n      stats: [{\n        partStat: 6,\n        value: 0,\n        unitValue: 50,\n        designId: 7\n      }, {\n        partStat: 10,\n        value: 500,\n        unitValue: 90,\n        designId: 7\n      }, {\n        partStat: 11,\n        value: 1000,\n        unitValue: 65,\n        designId: 7\n      }, {\n        partStat: 12,\n        value: 850,\n        unitValue: 82.75,\n        designId: 7\n      }, {\n        partStat: 14,\n        value: 1000,\n        unitValue: 80,\n        designId: 7\n      }, {\n        partStat: 15,\n        value: 1000,\n        unitValue: 70,\n        designId: 8\n      }, {\n        partStat: 15,\n        value: 1000,\n        unitValue: 70,\n        designId: 9\n      }]\n    }, {\n      id: 10,\n      name: 'Renault',\n      stats: [{\n        partStat: 6,\n        value: 1000,\n        unitValue: 100,\n        designId: 10\n      }, {\n        partStat: 10,\n        value: 0,\n        unitValue: 80,\n        designId: 10\n      }, {\n        partStat: 11,\n        value: 500,\n        unitValue: 75,\n        designId: 10\n      }, {\n        partStat: 12,\n        value: 1000,\n        unitValue: 85,\n        designId: 10\n      }, {\n        partStat: 14,\n        value: 650,\n        unitValue: 73,\n        designId: 10\n      }, {\n        partStat: 15,\n        value: 500,\n        unitValue: 75,\n        designId: 11\n      }, {\n        partStat: 15,\n        value: 1000,\n        unitValue: 100,\n        designId: 12\n      }]\n    }];\n    if (list && stats) {\n      engines.forEach(engine => {\n        this.queryDB(`\n        INSERT OR REPLACE INTO Custom_Engines_List (engineId, Name)\n        VALUES (${engine.id}, '${engine.name}')\n      `);\n        engine.stats.forEach(stat => {\n          this.queryDB(`\n          INSERT OR REPLACE INTO Custom_Engines_Stats (engineId, designId, partStat, Value, unitValue)\n          VALUES (${engine.id}, ${stat.designId}, ${stat.partStat}, ${stat.value}, ${stat.unitValue})\n        `);\n        });\n      });\n    }\n    if (allocations) {\n      const maxYear = this.queryDB(`SELECT MAX(SeasonID) FROM Parts_TeamHistory`, 'singleValue');\n      const actualEngineAllocations = this.queryDB(`\n      SELECT th.TeamID, em.EngineDesignID\n      FROM Parts_TeamHistory th\n      JOIN Parts_Enum_EngineManufacturers em\n        ON th.EngineManufacturer = em.Value\n      WHERE SeasonID = ${maxYear}`, 'allRows');\n      actualEngineAllocations.forEach(engine => {\n        this.queryDB(`\n        INSERT OR REPLACE INTO Custom_Engine_Allocations (teamId, engineId)\n        VALUES (${engine[0]}, ${engine[1]})\n      `);\n      });\n    }\n  }\n  updateCustomEngines(engineData) {\n    for (let engineId in engineData) {\n      const nameCapitalized = engineData[engineId].name.charAt(0).toUpperCase() + engineData[engineId].name.slice(1);\n      this.queryDB(`INSERT OR REPLACE INTO Custom_Engines_List (engineId, Name) VALUES (${engineId}, '${nameCapitalized}')`);\n      for (let stat in engineData[engineId].stats) {\n        const untiValue = engineData[engineId].stats[stat];\n        const value = _carConstants_js__WEBPACK_IMPORTED_MODULE_1__.engine_unitValueToValue[stat](untiValue);\n        if (parseInt(stat) !== 18 && parseInt(stat) !== 19) {\n          this.queryDB(`INSERT OR REPLACE INTO Custom_Engines_Stats (engineId, designId, partStat, Value, unitValue)\n            VALUES (${engineId}, ${engineId}, ${stat}, ${value}, ${untiValue})`);\n        } else if (parseInt(stat) === 18) {\n          let designId = parseInt(engineId) + 1;\n          this.queryDB(`INSERT OR REPLACE INTO Custom_Engines_Stats (engineId, designId, partStat, Value, unitValue)\n            VALUES (${engineId}, ${designId}, ${15}, ${value}, ${untiValue})`);\n        } else if (parseInt(stat) === 19) {\n          let designId = parseInt(engineId) + 2;\n          this.queryDB(`INSERT OR REPLACE INTO Custom_Engines_Stats (engineId, designId, partStat, Value, unitValue)\n            VALUES (${engineId}, ${designId}, ${15}, ${value}, ${untiValue})`);\n        }\n      }\n      this.updateTeamsSuppliedByEngine(engineId, engineData[engineId].stats);\n    }\n  }\n  editEngines(engineData) {\n    for (let engineId in engineData) {\n      for (let stat in engineData[engineId]) {\n        const untiValue = engineData[engineId][stat];\n        const value = _carConstants_js__WEBPACK_IMPORTED_MODULE_1__.engine_unitValueToValue[stat](untiValue);\n        if (parseInt(stat) !== 18 && parseInt(stat) !== 19) {\n          this.queryDB(`INSERT OR REPLACE INTO Custom_Engines_Stats (engineId, designId, partStat, Value, unitValue)\n            VALUES (${engineId}, ${engineId}, ${stat}, ${value}, ${untiValue})`);\n        } else if (parseInt(stat) === 18) {\n          let designId = parseInt(engineId) + 1;\n          this.queryDB(`INSERT OR REPLACE INTO Custom_Engines_Stats (engineId, designId, partStat, Value, unitValue)\n            VALUES (${engineId}, ${designId}, ${15}, ${value}, ${untiValue})`);\n        } else if (parseInt(stat) === 19) {\n          let designId = parseInt(engineId) + 2;\n          this.queryDB(`INSERT OR REPLACE INTO Custom_Engines_Stats (engineId, designId, partStat, Value, unitValue)\n            VALUES (${engineId}, ${designId}, ${15}, ${value}, ${untiValue})`);\n        }\n      }\n      this.updateTeamsSuppliedByEngine(engineId, engineData[engineId]);\n    }\n  }\n  updateTeamsSuppliedByEngine(engineId, stats) {\n    const teamsSupplied = this.queryDB(`SELECT teamID FROM Custom_Engine_Allocations WHERE engineId = ${engineId}`, 'allRows');\n    for (let team in teamsSupplied) {\n      const teamEngineId = this.queryDB(`SELECT DesignID FROM Parts_Designs WHERE TeamID = ${team} AND PartType = 0`, 'singleValue');\n      const teamERSId = this.queryDB(`SELECT DesignID FROM Parts_Designs WHERE TeamID = ${team} AND PartType = 1`, 'singleValue');\n      const teamGearboxId = this.queryDB(`SELECT DesignID FROM Parts_Designs WHERE TeamID = ${team} AND PartType = 2`, 'singleValue');\n      for (let stat in stats) {\n        if (parseInt < 18) {\n          const untiValue = stats[stat];\n          const value = _carConstants_js__WEBPACK_IMPORTED_MODULE_1__.engine_unitValueToValue[stat](untiValue);\n          this.queryDB(`UPDATE Parts_Designs_StatValues SET Value = ${value}, UnitValue = ${untiValue} WHERE DesignID = ${teamEngineId} AND PartStat = ${stat}`);\n        }\n      }\n      const valueERS = _carConstants_js__WEBPACK_IMPORTED_MODULE_1__.engine_unitValueToValue[18](stats[18]);\n      const unitValueERS = stats[18];\n      const valueGearbox = _carConstants_js__WEBPACK_IMPORTED_MODULE_1__.engine_unitValueToValue[19](stats[19]);\n      const unitValueGearbox = stats[19];\n      this.queryDB(`UPDATE Parts_Designs_StatValues SET Value = ${valueERS}, UnitValue = ${unitValueERS} WHERE DesignID = ${teamERSId} AND PartStat = ${15}`);\n      this.queryDB(`UPDATE Parts_Designs_StatValues SET Value = ${valueGearbox}, UnitValue = ${unitValueGearbox} WHERE DesignID = ${teamGearboxId} AND PartStat = ${15}`);\n    }\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/scriptUtils/dbUtils.js?");

/***/ }),

/***/ "./src/js/backend/scriptUtils/editTeamUtils.js":
/*!*****************************************************!*\
  !*** ./src/js/backend/scriptUtils/editTeamUtils.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   editTeam: () => (/* binding */ editTeam),\n/* harmony export */   fetchTeamData: () => (/* binding */ fetchTeamData),\n/* harmony export */   manageCostCap: () => (/* binding */ manageCostCap),\n/* harmony export */   manage_engine_change: () => (/* binding */ manage_engine_change)\n/* harmony export */ });\n/* harmony import */ var _dbManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dbManager */ \"./src/js/backend/dbManager.js\");\n\nfunction fetchTeamData(teamID) {\n  const levCon = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT BuildingID, DegradationValue\n        FROM Buildings_HQ\n        WHERE TeamID = ${teamID}\n      `, 'allRows') || [];\n  const data = levCon.map(row => [row[0], parseFloat(Number(row[1]).toFixed(2))]);\n  if (teamID == \"32\") data.push([\"160\", 1]);\n  const daySeason = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT Day, CurrentSeason\n        FROM Player_State\n      `, 'singleRow');\n  const days = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT MIN(Day), MAX(Day)\n        FROM Seasons_Deadlines\n        WHERE SeasonID = ${daySeason[1]}\n      `, 'singleRow');\n  const costCap = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT SUM(value) AS Value\n        FROM Finance_Transactions\n        WHERE Day >= ${days[0]}\n          AND Day < ${days[1]}\n          AND AffectsCostCap = 1\n          AND TeamID = ${teamID}\n      `, 'allRows');\n  const teamBalance = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT Balance\n        FROM Finance_TeamBalance\n        WHERE TeamID = ${teamID}\n      `, 'singleRow');\n  const seasonObj = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT TargetPos\n        FROM Board_SeasonObjectives\n        WHERE TeamID = ${teamID}\n          AND SeasonID = ${daySeason[1]}\n      `, 'singleRow');\n  const maxTargetYear = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT MAX(TargetEndYear)\n        FROM Board_Objectives\n        WHERE TeamID = ${teamID}\n      `, 'singleRow');\n  const longTermObj = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT Type, TargetEndYear\n        FROM Board_Objectives\n        WHERE TeamID = ${teamID}\n          AND TargetEndYear = ${maxTargetYear[0]}\n      `, 'singleRow');\n  const playerTeam = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT TeamID\n        FROM Player\n      `, 'singleRow');\n  let confidence;\n  if (playerTeam[0] == Number(teamID)) {\n    confidence = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n          SELECT Confidence\n          FROM Board_Confidence\n          WHERE Season = ${daySeason[1]}\n        `, 'singleRow') || [-1];\n  } else {\n    confidence = [-1];\n  }\n  const pitStats = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT StatID, Val\n        FROM Staff_PitCrew_PerformanceStats\n        WHERE TeamID = ${teamID}\n      `, 'allRows') || [];\n  const pitDict = {};\n  pitStats.forEach(stat => {\n    pitDict[stat[0]] = parseFloat(Number(stat[1]).toFixed(2));\n  });\n  const engineId = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`SELECT engineId FROM Custom_Engine_Allocations WHERE teamId = ${teamID}`, 'singleValue');\n  const allEngines = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`SELECT * FROM Custom_Engine_Allocations`, 'allRows');\n  console.log(allEngines);\n  data.push(seasonObj, longTermObj, teamBalance, costCap, confidence, daySeason[1], pitDict, engineId);\n  return data;\n}\n\n// manageCostCap(teamID, amount)\nfunction manageCostCap(teamID, amount) {\n  let remaining = parseInt(amount, 10);\n  if (remaining > 0) {\n    while (remaining > 0) {\n      // Obtenemos la transacción negativa más reciente\n      const transaction = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT ROWID, Value, Reference\n        FROM Finance_Transactions\n        WHERE TeamID = ${teamID}\n          AND AffectsCostCap = 1\n          AND Value < 0\n        ORDER BY Day DESC, ROWID DESC\n        LIMIT 1\n      `, 'singleRow');\n      if (!transaction) {\n        break;\n      } else {\n        const rowid = transaction[0];\n        const value = transaction[1];\n        // reference = transaction[2]; // no se usa directamente\n\n        let amountToAdd;\n        if (value + remaining <= 0) {\n          amountToAdd = remaining;\n        } else {\n          amountToAdd = -value;\n        }\n        (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n          UPDATE Finance_Transactions\n          SET Value = Value + ${amountToAdd}\n          WHERE ROWID = ${rowid}\n        `);\n        remaining -= amountToAdd;\n      }\n    }\n  }\n  // Si remaining <= 0, insertamos una transacción que incremente el CostCap (o lo modifique negativamente)\n  else {\n    const daySeason = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      SELECT Day, CurrentSeason\n      FROM Player_State\n    `, 'singleRow');\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      INSERT INTO Finance_Transactions\n      VALUES (${teamID}, ${daySeason[0]}, ${amount}, 9, -1, 1)\n    `);\n  }\n}\nfunction editTeam(info) {\n  const daySeason = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n    SELECT Day, CurrentSeason\n    FROM Player_State\n  `, 'singleRow');\n  const teamID = info.teamID;\n\n  // Actualización de Buildings_HQ\n  info.facilities.forEach(facility => {\n    const id = facility[0].slice(0, -1);\n    // facility[0] podría ser \"160a\", por ejemplo, y con slice(0, -1) quitas el último carácter\n\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      UPDATE Buildings_HQ\n      SET BuildingID = '${facility[0]}',\n          DegradationValue = ${facility[1]}\n      WHERE TeamID = ${teamID}\n        AND BuildingType = ${id}\n    `);\n  });\n\n  // Board_SeasonObjectives\n  (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n    UPDATE Board_SeasonObjectives\n    SET TargetPos = ${info.seasonObj}\n    WHERE TeamID = ${teamID}\n      AND SeasonID = ${daySeason[1]}\n  `);\n\n  // Board_Objectives (objetivo a largo plazo)\n  const maxTargetYear = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n    SELECT MAX(TargetEndYear)\n    FROM Board_Objectives\n    WHERE TeamID = ${teamID}\n  `, 'singleRow');\n  (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n    UPDATE Board_Objectives\n    SET Type = ${info.longTermObj},\n        TargetEndYear = ${info.longTermYear}\n    WHERE TeamID = ${teamID}\n      AND TargetEndYear = ${maxTargetYear[0]}\n  `);\n\n  // Board_Confidence\n  if (info.confidence !== \"-1\") {\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      UPDATE Board_Confidence\n      SET Confidence = ${info.confidence}\n      WHERE Season = ${daySeason[1]}\n    `);\n  }\n\n  // Finance_TeamBalance\n  (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n    UPDATE Finance_TeamBalance\n    SET Balance = ${info.teamBudget}\n    WHERE TeamID = ${teamID}\n  `);\n\n  // Ajuste de CostCap\n  manageCostCap(teamID, info.costCapEdit);\n\n  // Actualizar Staff_PitCrew_PerformanceStats\n  Object.keys(info.pitCrew).forEach(statID => {\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      UPDATE Staff_PitCrew_PerformanceStats\n      SET Val = ${info.pitCrew[statID]}\n      WHERE TeamID = ${teamID}\n        AND StatID = ${statID}\n    `);\n  });\n\n  // La parte de manage_engine_change la manejas tú\n  manage_engine_change(teamID, info.engine);\n}\nfunction manage_engine_change(teamID, engineId) {\n  const oldEngineId = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`SELECT DesignID FROM Parts_Designs WHERE TeamID = ${teamID} AND PartType = 0`, 'singleValue');\n  const oldERSId = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`SELECT DesignID FROM Parts_Designs WHERE TeamID = ${teamID} AND PartType = 1`, 'singleValue');\n  const oldGearboxId = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`SELECT DesignID FROM Parts_Designs WHERE TeamID = ${teamID} AND PartType = 2`, 'singleValue');\n  const nmewERSId = parseInt(engineId, 10) + 1;\n  const newGearboxId = parseInt(engineId, 10) + 2;\n  const newEngineStats = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`SELECT partStat, unitValue, Value FROM Custom_Engines_Stats WHERE designId = ${engineId}`, 'allRows');\n  const newERSStats = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`SELECT partStat, unitValue, Value FROM Custom_Engines_Stats WHERE designId = ${nmewERSId}`, 'singleRow');\n  const newGearboxStats = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`SELECT partStat, unitValue, Value FROM Custom_Engines_Stats WHERE designId = ${newGearboxId}`, 'singleRow');\n  const engineStats = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`SELECT PartStat FROM Parts_Designs_StatValues WHERE DesignID = ${oldEngineId}`, 'allRows');\n  engineStats.forEach(stat => {\n    const newStat = newEngineStats.find(newStat => newStat[0] === stat[0]);\n    if (newStat) {\n      (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`UPDATE Parts_Designs_StatValues SET Value = ${newStat[2]}, UnitValue =  ${newStat[1]} WHERE DesignID = ${oldEngineId} AND PartStat = ${stat[0]}`);\n    }\n  });\n  (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`UPDATE Parts_Designs_StatValues SET Value = ${newERSStats[2]}, UnitValue =  ${newERSStats[1]} WHERE DesignID = ${oldERSId} AND PartStat = 15`);\n  (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`UPDATE Parts_Designs_StatValues SET Value = ${newGearboxStats[2]}, UnitValue =  ${newGearboxStats[1]} WHERE DesignID = ${oldGearboxId} AND PartStat = 15`);\n  if (parseInt(engineId) <= 10) {\n    const year = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`SELECT CurrentSeason FROM Player_State`, 'singleValue');\n    const newEngineManufacturer = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`SELECT Value FROM Parts_Enum_EngineManufacturers WHERE EngineDesignID = ${engineId}`, 'singleValue');\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`UPDATE Parts_TeamHistory SET EngineManufacturer = ${newEngineManufacturer} WHERE TeamID = ${teamID} AND SeasonID = ${year}`);\n  }\n  (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`UPDATE Custom_Engine_Allocations SET engineId = ${engineId} WHERE teamId = ${teamID}`);\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/scriptUtils/editTeamUtils.js?");

/***/ }),

/***/ "./src/js/backend/scriptUtils/eidtStatsUtils.js":
/*!******************************************************!*\
  !*** ./src/js/backend/scriptUtils/eidtStatsUtils.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   changeYearsInExcelDate: () => (/* binding */ changeYearsInExcelDate),\n/* harmony export */   dateToExcel: () => (/* binding */ dateToExcel),\n/* harmony export */   driverStats: () => (/* binding */ driverStats),\n/* harmony export */   editAge: () => (/* binding */ editAge),\n/* harmony export */   editCode: () => (/* binding */ editCode),\n/* harmony export */   editFreezeMentality: () => (/* binding */ editFreezeMentality),\n/* harmony export */   editMarketability: () => (/* binding */ editMarketability),\n/* harmony export */   editMentality: () => (/* binding */ editMentality),\n/* harmony export */   editName: () => (/* binding */ editName),\n/* harmony export */   editRetirement: () => (/* binding */ editRetirement),\n/* harmony export */   editStats: () => (/* binding */ editStats),\n/* harmony export */   editSuperlicense: () => (/* binding */ editSuperlicense),\n/* harmony export */   excelToDate: () => (/* binding */ excelToDate),\n/* harmony export */   mentalityAreas: () => (/* binding */ mentalityAreas),\n/* harmony export */   mentalityEvents: () => (/* binding */ mentalityEvents),\n/* harmony export */   mentalityOpinions: () => (/* binding */ mentalityOpinions),\n/* harmony export */   mentalityOverall: () => (/* binding */ mentalityOverall)\n/* harmony export */ });\n/* harmony import */ var _dbManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dbManager */ \"./src/js/backend/dbManager.js\");\n\n\n// Constantes para referencias en la edición de mentalidad\nconst driverStats = [2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst mentalityAreas = {\n  0: [5, 11, 13, 9],\n  1: [0, 2, 6, 7, 8, 14],\n  2: [1, 3, 4, 12, 10]\n};\nconst mentalityEvents = {\n  0: [1, 7, 10, 13, 15, 19],\n  1: [2, 11, 12, 14, 16, 20, 21],\n  2: [0, 3, 4, 5, 6, 8, 9, 17, 18]\n};\nconst mentalityOpinions = {\n  0: 10,\n  1: 3,\n  2: 0,\n  3: -4,\n  4: -10\n};\nconst mentalityOverall = {\n  0: 95,\n  1: 79,\n  2: 59,\n  3: 24,\n  4: 5\n};\n\n// Editar estadísticas de un Staff (driver o staff general)\nfunction editStats(driverID, type, stats, retirement, driverNum, wants1) {\n  //creat sttasParasm from stats string to an array\n  const statsParams = stats.split(\" \");\n  if (type === \"0\") {\n    const isStats = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      SELECT *\n      FROM Staff_performanceStats\n      WHERE StaffID = ${driverID}\n    `, 'singleRow');\n    if (isStats) {\n      (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        UPDATE Staff_performanceStats\n        SET Val = CASE StatID\n          WHEN 2  THEN ${statsParams[0]}\n          WHEN 3  THEN ${statsParams[1]}\n          WHEN 4  THEN ${statsParams[2]}\n          WHEN 5  THEN ${statsParams[3]}\n          WHEN 6  THEN ${statsParams[4]}\n          WHEN 7  THEN ${statsParams[5]}\n          WHEN 8  THEN ${statsParams[6]}\n          WHEN 9  THEN ${statsParams[7]}\n          WHEN 10 THEN ${statsParams[8]}\n          ELSE Val\n        END\n        WHERE StaffID = ${driverID}\n      `);\n    } else {\n      const statsArray = params.slice(2, 11);\n      statsArray.forEach((newStat, i) => {\n        const statID = driverStats[i];\n        (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n          INSERT INTO Staff_performanceStats (StaffID, StatID, Val, Max)\n          VALUES (${driverID}, ${statID}, ${newStat}, 100)\n        `);\n      });\n    }\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      UPDATE Staff_DriverData\n      SET Improvability = ${statsParams[9]}, Aggression = ${statsParams[10]}\n      WHERE StaffID = ${driverID}\n    `);\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      UPDATE Staff_GameData\n      SET RetirementAge = ${retirement}\n      WHERE StaffID = ${driverID}\n    `);\n    const oldNum = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      SELECT Number\n      FROM Staff_DriverNumbers\n      WHERE CurrentHolder = ${driverID}\n    `, 'singleValue');\n    if (oldNum) {\n      (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        UPDATE Staff_DriverNumbers\n        SET CurrentHolder = NULL\n        WHERE Number = ${oldNum}\n      `);\n    }\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      UPDATE Staff_DriverNumbers\n      SET CurrentHolder = ${driverID}\n      WHERE Number = ${driverNum}\n    `);\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      UPDATE Staff_DriverData\n      SET WantsChampionDriverNumber = ${wants1}\n      WHERE StaffID = ${driverID}\n    `);\n  } else if (type === \"1\") {\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      UPDATE Staff_performanceStats\n      SET Val = CASE StatID\n        WHEN 0  THEN ${statsParams[0]}\n        WHEN 1  THEN ${statsParams[1]}\n        WHEN 14 THEN ${statsParams[2]}\n        WHEN 15 THEN ${statsParams[3]}\n        WHEN 16 THEN ${statsParams[4]}\n        WHEN 17 THEN ${statsParams[5]}\n        ELSE Val\n      END\n      WHERE StaffID = ${driverID}\n    `);\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      UPDATE Staff_GameData\n      SET RetirementAge = ${retirement}\n      WHERE StaffID = ${driverID}\n    `);\n  } else if (type === \"2\") {\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      UPDATE Staff_performanceStats\n      SET Val = CASE StatID\n        WHEN 13 THEN ${statsParams[0]}\n        WHEN 25 THEN ${statsParams[1]}\n        WHEN 43 THEN ${statsParams[2]}\n        ELSE Val\n      END\n      WHERE StaffID = ${driverID}\n    `);\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      UPDATE Staff_GameData\n      SET RetirementAge = ${retirement}\n      WHERE StaffID = ${driverID}\n    `);\n  } else if (type === \"3\") {\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      UPDATE Staff_performanceStats\n      SET Val = CASE StatID\n        WHEN 19 THEN ${statsParams[0]}\n        WHEN 20 THEN ${statsParams[1]}\n        WHEN 26 THEN ${statsParams[2]}\n        WHEN 27 THEN ${statsParams[3]}\n        WHEN 28 THEN ${statsParams[4]}\n        WHEN 29 THEN ${statsParams[5]}\n        WHEN 30 THEN ${statsParams[6]}\n        WHEN 31 THEN ${statsParams[7]}\n        ELSE Val\n      END\n      WHERE StaffID = ${driverID}\n    `);\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      UPDATE Staff_GameData\n      SET RetirementAge = ${retirement}\n      WHERE StaffID = ${driverID}\n    `);\n  } else if (type === \"4\") {\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      UPDATE Staff_performanceStats\n      SET Val = CASE StatID\n        WHEN 11 THEN ${statsParams[0]}\n        WHEN 22 THEN ${statsParams[1]}\n        WHEN 23 THEN ${statsParams[2]}\n        WHEN 24 THEN ${statsParams[3]}\n        ELSE Val\n      END\n      WHERE StaffID = ${driverID}\n    `);\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      UPDATE Staff_GameData\n      SET RetirementAge = ${retirement}\n      WHERE StaffID = ${driverID}\n    `);\n  }\n}\nfunction editName(driverID, newName) {\n  const parts = newName.split(\" \");\n  const newFirstName = parts[0];\n  const newLastName = parts.slice(1).join(\" \");\n  const stringLiteralFirstName = `[STRING_LITERAL:Value=|${newFirstName}|]`;\n  const stringLiteralLastName = `[STRING_LITERAL:Value=|${newLastName}|]`;\n  (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n    UPDATE Staff_BasicData\n    SET FirstName = '${stringLiteralFirstName}',\n        LastName = '${stringLiteralLastName}'\n    WHERE StaffID = ${driverID}\n  `);\n}\nfunction editCode(driverID, newCode) {\n  const stringLiteralCode = `[STRING_LITERAL:Value=|${newCode}|]`;\n  (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n    UPDATE Staff_DriverData\n    SET DriverCode = '${stringLiteralCode}'\n    WHERE StaffID = ${driverID}\n  `);\n}\n\n// Helpers de fechas\nfunction excelToDate(excelDate) {\n  const baseDate = new Date(1899, 11, 30);\n  const ms = excelDate * 86400000;\n  return new Date(baseDate.getTime() + ms);\n}\nfunction dateToExcel(date) {\n  const baseDate = new Date(1899, 11, 30);\n  const diff = date.getTime() - baseDate.getTime();\n  return Math.floor(diff / 86400000);\n}\nfunction changeYearsInExcelDate(excelDate, years) {\n  const oldDate = excelToDate(excelDate);\n  let newYear = oldDate.getFullYear() + years;\n  let newDate = new Date(oldDate.getTime());\n  newDate.setFullYear(newYear);\n  if (newDate.getMonth() !== oldDate.getMonth()) {\n    newDate = new Date(newYear, 1, 28);\n  }\n  const newExcelDate = dateToExcel(newDate);\n  return {\n    newDate,\n    newExcelDate\n  };\n}\nfunction editAge(driverID, ageGap) {\n  const driverBirthdate = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n    SELECT DOB\n    FROM Staff_BasicData\n    WHERE StaffID = ${driverID}\n  `, 'singleValue');\n  const {\n    newDate,\n    newExcelDate\n  } = changeYearsInExcelDate(driverBirthdate, parseInt(ageGap, 10));\n  const y = newDate.getFullYear();\n  const m = newDate.getMonth() + 1;\n  const d = newDate.getDate();\n  (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n    UPDATE Staff_BasicData\n    SET DOB = ${newExcelDate},\n        DOB_ISO = '${y}-${m}-${d}'\n    WHERE StaffID = ${driverID}\n  `);\n}\nfunction editMentality(inputStr) {\n  const [driverID, ...rest] = inputStr.split(\" \");\n  let sum = 0;\n  rest.forEach((value, area) => {\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      UPDATE Staff_Mentality_AreaOpinions\n      SET Opinion = ${value}\n      WHERE StaffID = ${driverID}\n        AND Category = ${area}\n    `);\n    const statuses = mentalityAreas[area];\n    const events = mentalityEvents[area];\n    sum += parseInt(value, 10);\n    statuses.forEach(status => {\n      (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        UPDATE Staff_Mentality_Statuses\n        SET Opinion = ${value},\n            Value = ${mentalityOpinions[value]}\n        WHERE StaffID = ${driverID}\n          AND Status = ${status}\n      `);\n    });\n    events.forEach(ev => {\n      (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        UPDATE Staff_Mentality_Events\n        SET Opinion = ${value},\n            Value = ${mentalityOpinions[value]}\n        WHERE StaffID = ${driverID}\n          AND Event = ${ev}\n      `);\n    });\n  });\n  const average = Math.floor(sum / 3);\n  (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n    UPDATE Staff_State\n    SET Mentality = ${mentalityOverall[average]},\n        MentalityOpinion = ${average}\n    WHERE StaffID = ${driverID}\n  `);\n}\nfunction editRetirement(driverID, value) {\n  (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n    UPDATE Staff_GameData\n    SET Retired = ${value}\n    WHERE StaffID = ${driverID}\n  `);\n}\nfunction editSuperlicense(driverID, value) {\n  (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n    UPDATE Staff_DriverData\n    SET HasSuperLicense = ${value},\n        HasRacedEnoughToJoinF1 = ${value}\n    WHERE StaffID = ${driverID}\n  `);\n}\nfunction editMarketability(driverID, value) {\n  (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n    UPDATE Staff_DriverData\n    SET Marketability = ${value}\n    WHERE StaffID = ${driverID}\n  `);\n}\nfunction editFreezeMentality(state) {\n  if (state === 0) {\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`DROP TRIGGER IF EXISTS update_Opinion_After_Insert;`);\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`DROP TRIGGER IF EXISTS update_Opinion_After_Update;`);\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`DROP TRIGGER IF EXISTS clear_Staff_Mentality_Statuses;`);\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`DROP TRIGGER IF EXISTS clear_Staff_Mentality_AreaOpinions;`);\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`DROP TRIGGER IF EXISTS clear_Staff_Mentality_Events;`);\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`DROP TRIGGER IF EXISTS reset_Staff_State;`);\n  } else {\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      CREATE TRIGGER IF NOT EXISTS update_Opinion_After_Insert\n      AFTER INSERT ON Staff_Mentality_AreaOpinions\n      BEGIN\n        UPDATE Staff_Mentality_AreaOpinions\n        SET Opinion = 2\n        WHERE Opinion != 2;\n      END;\n    `);\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      CREATE TRIGGER IF NOT EXISTS update_Opinion_After_Update\n      AFTER UPDATE OF Opinion ON Staff_Mentality_AreaOpinions\n      BEGIN\n        UPDATE Staff_Mentality_AreaOpinions\n        SET Opinion = 2\n        WHERE Opinion != 2;\n      END;\n    `);\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      CREATE TRIGGER IF NOT EXISTS clear_Staff_Mentality_Statuses\n      AFTER INSERT ON Staff_Mentality_Statuses\n      BEGIN\n        DELETE FROM Staff_Mentality_Statuses;\n      END;\n    `);\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      CREATE TRIGGER IF NOT EXISTS clear_Staff_Mentality_Events\n      AFTER INSERT ON Staff_Mentality_Events\n      BEGIN\n        DELETE FROM Staff_Mentality_Events;\n      END;\n    `);\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      CREATE TRIGGER IF NOT EXISTS reset_Staff_State\n      AFTER UPDATE ON Staff_State\n      BEGIN\n        UPDATE Staff_State\n        SET Mentality = 50, MentalityOpinion = 2;\n      END;\n    `);\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/scriptUtils/eidtStatsUtils.js?");

/***/ }),

/***/ "./src/js/backend/scriptUtils/head2head.js":
/*!*************************************************!*\
  !*** ./src/js/backend/scriptUtils/head2head.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchHead2Head: () => (/* binding */ fetchHead2Head),\n/* harmony export */   fetchHead2HeadTeam: () => (/* binding */ fetchHead2HeadTeam)\n/* harmony export */ });\n/* harmony import */ var _dbManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dbManager */ \"./src/js/backend/dbManager.js\");\n\nfunction fetchHead2Head(driver1ID, driver2ID, year) {\n  // Helpers para estadísticos:\n  const mean = arr => {\n    if (!arr.length) return 0;\n    const total = arr.reduce((acc, n) => acc + n, 0);\n    return total / arr.length;\n  };\n  const median = arr => {\n    if (!arr.length) return 0;\n    const sorted = [...arr].sort((a, b) => a - b);\n    const mid = Math.floor(sorted.length / 2);\n    return sorted.length % 2 === 1 ? sorted[mid] : (sorted[mid - 1] + sorted[mid]) / 2;\n  };\n\n  // 1) Obtenemos todas las carreras en las que participaron ambos pilotos\n  const racesBoth = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      SELECT RaceID\n      FROM Races_Results\n      WHERE Season = ${year}\n        AND DriverID IN (${driver1ID}, ${driver2ID})\n      GROUP BY RaceID\n      HAVING COUNT(DISTINCT DriverID) = 2\n    `, 'allRows') || [];\n  const raceIDs = racesBoth.map(row => row[0]);\n  const stats = {\n    raceH2H: [0, 0],\n    qualiH2H: [0, 0],\n    dnfH2H: [0, 0],\n    podiumsH2H: [0, 0],\n    polesH2H: [0, 0],\n    winsH2H: [0, 0],\n    sprintWinsH2H: [0, 0],\n    pointsH2H: null,\n    bestRace: null,\n    bestQuali: null,\n    raceDiffs: null,\n    qualiDiffs: null,\n    racePositionsMean: null,\n    racePositionsMedian: null,\n    qualiPositionsMean: null,\n    qualiPositionsMedian: null,\n    driver1: {\n      bestRace: 21,\n      bestQuali: 21,\n      avgPace: [],\n      avgQPace: [],\n      RPositions: [],\n      QPositions: []\n    },\n    driver2: {\n      bestRace: 21,\n      bestQuali: 21,\n      avgPace: [],\n      avgQPace: [],\n      RPositions: [],\n      QPositions: []\n    }\n  };\n\n  // 3) Iteramos en cada carrera en la que compitieron ambos\n  for (const raceID of raceIDs) {\n    const d1_QStage = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT MAX(QualifyingStage)\n        FROM Races_QualifyingResults\n        WHERE RaceFormula = 1\n          AND RaceID = ${raceID}\n          AND SeasonID = ${year}\n          AND DriverID = ${driver1ID}\n      `, 'singleValue') || 0;\n    const d2_QStage = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT MAX(QualifyingStage)\n        FROM Races_QualifyingResults\n        WHERE RaceFormula = 1\n          AND RaceID = ${raceID}\n          AND SeasonID = ${year}\n          AND DriverID = ${driver2ID}\n      `, 'singleValue') || 0;\n\n    // --- 3.2) Posición en la fase final que corrieron\n    const d1_QRes = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT FinishingPos\n        FROM Races_QualifyingResults\n        WHERE RaceFormula = 1\n          AND RaceID = ${raceID}\n          AND SeasonID = ${year}\n          AND DriverID = ${driver1ID}\n          AND QualifyingStage = ${d1_QStage}\n      `, 'singleValue') || 99;\n    const d2_QRes = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT FinishingPos\n        FROM Races_QualifyingResults\n        WHERE RaceFormula = 1\n          AND RaceID = ${raceID}\n          AND SeasonID = ${year}\n          AND DriverID = ${driver2ID}\n          AND QualifyingStage = ${d2_QStage}\n      `, 'singleValue') || 99;\n\n    // --- 3.3) Quién ganó el “duelo” de qualy\n    if (d1_QStage < d2_QStage) {\n      stats.qualiH2H[1] += 1;\n    } else if (d1_QStage > d2_QStage) {\n      stats.qualiH2H[0] += 1;\n    } else {\n      // misma fase de qualy\n      if (d1_QRes < d2_QRes) {\n        stats.qualiH2H[0] += 1;\n      } else if (d1_QRes > d2_QRes) {\n        stats.qualiH2H[1] += 1;\n      }\n    }\n\n    // Guardar posiciones de qualy para estadísticas finales\n    stats.driver1.QPositions.push(d1_QRes);\n    stats.driver2.QPositions.push(d2_QRes);\n\n    // --- 3.4) Lap más rápida comparando la misma fase “mínima”\n    const minStage = Math.min(d1_QStage, d2_QStage);\n    const d1_qLap = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT FastestLap\n        FROM Races_QualifyingResults\n        WHERE RaceFormula = 1\n          AND RaceID = ${raceID}\n          AND SeasonID = ${year}\n          AND DriverID = ${driver1ID}\n          AND QualifyingStage = ${minStage}\n      `, 'singleValue') || 0;\n    const d2_qLap = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT FastestLap\n        FROM Races_QualifyingResults\n        WHERE RaceFormula = 1\n          AND RaceID = ${raceID}\n          AND SeasonID = ${year}\n          AND DriverID = ${driver2ID}\n          AND QualifyingStage = ${minStage}\n      `, 'singleValue') || 0;\n    if (d1_qLap !== 0 && d2_qLap !== 0) {\n      stats.driver1.avgQPace.push(d1_qLap);\n      stats.driver2.avgQPace.push(d2_qLap);\n    }\n\n    // --- 3.5) Poles: Q3 y posición 1\n    if (d1_QStage === 3 && d1_QRes === 1) {\n      stats.polesH2H[0] += 1;\n    }\n    if (d2_QStage === 3 && d2_QRes === 1) {\n      stats.polesH2H[1] += 1;\n    }\n\n    // Mejor qualifying\n    if (d1_QRes < stats.driver1.bestQuali) {\n      stats.driver1.bestQuali = d1_QRes;\n    }\n    if (d2_QRes < stats.driver2.bestQuali) {\n      stats.driver2.bestQuali = d2_QRes;\n    }\n\n    // --- 3.6) Resultados de carrera\n    const d1_RRes = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT FinishingPos\n        FROM Races_Results\n        WHERE RaceID = ${raceID}\n          AND Season = ${year}\n          AND DriverID = ${driver1ID}\n      `, 'singleValue') || 99;\n    const d2_RRes = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT FinishingPos\n        FROM Races_Results\n        WHERE RaceID = ${raceID}\n          AND Season = ${year}\n          AND DriverID = ${driver2ID}\n      `, 'singleValue') || 99;\n\n    // ¿Quién terminó por delante?\n    if (d1_RRes < d2_RRes) {\n      stats.raceH2H[0] += 1;\n    } else if (d1_RRes > d2_RRes) {\n      stats.raceH2H[1] += 1;\n    }\n\n    // Wins\n    if (d1_RRes === 1) stats.winsH2H[0] += 1;\n    if (d2_RRes === 1) stats.winsH2H[1] += 1;\n\n    // Podios\n    if (d1_RRes <= 3) stats.podiumsH2H[0] += 1;\n    if (d2_RRes <= 3) stats.podiumsH2H[1] += 1;\n\n    // Mejor posición en carrera\n    if (d1_RRes < stats.driver1.bestRace) {\n      stats.driver1.bestRace = d1_RRes;\n    }\n    if (d2_RRes < stats.driver2.bestRace) {\n      stats.driver2.bestRace = d2_RRes;\n    }\n\n    // Guardamos posición de carrera\n    stats.driver1.RPositions.push(d1_RRes);\n    stats.driver2.RPositions.push(d2_RRes);\n\n    // --- 3.7) DNFs\n    const d1_RDNF = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT DNF\n        FROM Races_Results\n        WHERE RaceID = ${raceID}\n          AND Season = ${year}\n          AND DriverID = ${driver1ID}\n      `, 'singleValue') || 0;\n    const d2_RDNF = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT DNF\n        FROM Races_Results\n        WHERE RaceID = ${raceID}\n          AND Season = ${year}\n          AND DriverID = ${driver2ID}\n      `, 'singleValue') || 0;\n    if (d1_RDNF === 1) stats.dnfH2H[0] += 1;\n    if (d2_RDNF === 1) stats.dnfH2H[1] += 1;\n\n    // --- 3.8) Ritmo en carrera (avg pace) si ninguno hizo DNF\n    if (d1_RDNF !== 1 && d2_RDNF !== 1) {\n      const d1_time = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n          SELECT Time\n          FROM Races_Results\n          WHERE RaceID = ${raceID}\n            AND Season = ${year}\n            AND DriverID = ${driver1ID}\n        `, 'singleValue') || 0;\n      const d2_time = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n          SELECT Time\n          FROM Races_Results\n          WHERE RaceID = ${raceID}\n            AND Season = ${year}\n            AND DriverID = ${driver2ID}\n        `, 'singleValue') || 0;\n      const d1_laps = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n          SELECT Laps\n          FROM Races_Results\n          WHERE RaceID = ${raceID}\n            AND Season = ${year}\n            AND DriverID = ${driver1ID}\n        `, 'singleValue') || 1;\n      const d2_laps = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n          SELECT Laps\n          FROM Races_Results\n          WHERE RaceID = ${raceID}\n            AND Season = ${year}\n            AND DriverID = ${driver2ID}\n        `, 'singleValue') || 1;\n      const d1_pace = Number((d1_time / d1_laps).toFixed(3));\n      const d2_pace = Number((d2_time / d2_laps).toFixed(3));\n      stats.driver1.avgPace.push(d1_pace);\n      stats.driver2.avgPace.push(d2_pace);\n    }\n\n    // --- 3.9) SPRINT results\n    const d1_SRes = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT FinishingPos\n        FROM Races_Sprintresults\n        WHERE RaceID = ${raceID}\n          AND SeasonID = ${year}\n          AND DriverID = ${driver1ID}\n      `, 'singleValue');\n    const d2_SRes = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT FinishingPos\n        FROM Races_Sprintresults\n        WHERE RaceID = ${raceID}\n          AND SeasonID = ${year}\n          AND DriverID = ${driver2ID}\n      `, 'singleValue');\n    if (d1_SRes === 1) stats.sprintWinsH2H[0] += 1;\n    if (d2_SRes === 1) stats.sprintWinsH2H[1] += 1;\n  }\n\n  // 4) Puntos totales en el campeonato (no por carrera)\n  const d1_Pts = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      SELECT Points\n      FROM Races_DriverStandings\n      WHERE RaceFormula = 1\n        AND SeasonID = ${year}\n        AND DriverID = ${driver1ID}\n    `, 'singleValue') || 0;\n  const d2_Pts = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      SELECT Points\n      FROM Races_DriverStandings\n      WHERE RaceFormula = 1\n        AND SeasonID = ${year}\n        AND DriverID = ${driver2ID}\n    `, 'singleValue') || 0;\n  stats.pointsH2H = [d1_Pts, d2_Pts];\n  const meanRd1 = Number(mean(stats.driver1.RPositions).toFixed(1));\n  const meanRd2 = Number(mean(stats.driver2.RPositions).toFixed(1));\n  const medianRd1 = median(stats.driver1.RPositions);\n  const medianRd2 = median(stats.driver2.RPositions);\n  const meanQd1 = Number(mean(stats.driver1.QPositions).toFixed(1));\n  const meanQd2 = Number(mean(stats.driver2.QPositions).toFixed(1));\n  const medianQd1 = median(stats.driver1.QPositions);\n  const medianQd2 = median(stats.driver2.QPositions);\n  const rDifferences = stats.driver1.avgPace.map((val, i) => (stats.driver2.avgPace[i] ?? 0) - val);\n  const avg_racediff = Number(mean(rDifferences).toFixed(3));\n  const qDifferences = stats.driver1.avgQPace.map((val, i) => (stats.driver2.avgQPace[i] ?? 0) - val);\n  const avg_qualidiff = Number(mean(qDifferences).toFixed(3));\n\n  // 3) Armamos el array final en el mismo orden que en tu Python:\n  const resultList = [stats.raceH2H,\n  // 0) (raceH2H)\n  stats.qualiH2H,\n  // 1) (qualiH2H)\n  stats.pointsH2H,\n  // 2) (pointsH2H)\n  stats.podiumsH2H,\n  // 3) (podiumsH2H)\n  [stats.driver1.bestRace, stats.driver2.bestRace],\n  // 4) (bestRace)\n  [stats.driver1.bestQuali, stats.driver2.bestQuali],\n  // 5) (bestQuali)\n  stats.dnfH2H,\n  // 6) (dnfH2H)\n  stats.winsH2H,\n  // 7) (winsH2H)\n  stats.polesH2H,\n  // 8) (polesH2H)\n  stats.sprintWinsH2H,\n  // 9) (sprintWinsH2H)\n  [-avg_racediff, avg_racediff],\n  // 10) (-avg_racediff, avg_racediff)\n  [-avg_qualidiff, avg_qualidiff],\n  // 11) (-avg_qualidiff, avg_qualidiff)\n  [meanRd1, meanRd2],\n  // 12) (meanRd1, meanRd2)\n  [medianRd1, medianRd2],\n  // 13) (medianRd1, medianRd2)\n  [meanQd1, meanQd2],\n  // 14) (meanQd1, meanQd2)\n  [medianQd1, medianQd2] // 15) (medianQd1, medianQd2)\n  ];\n\n  // 4) Retornamos este array en vez de 'stats'\n  return resultList;\n}\nfunction fetchHead2HeadTeam(teamID1, teamID2, year) {\n  const t1 = teamID1[0];\n  const t2 = teamID2[0];\n  const season = year;\n\n  // 1) Obtenemos todas las carreras de la temporada (Distinct RaceID)\n  const races = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      SELECT DISTINCT RaceID\n      FROM Races_Results\n      WHERE Season = ${season}\n    `, 'allRows') || [];\n\n  // 2) Inicializamos contadores / arreglos\n  const raceH2H = [0, 0];\n  const qualiH2H = [0, 0];\n  const dnfH2H = [0, 0];\n  const bestRace = [0, 0];\n  const bestQuali = [0, 0];\n  const pointsH2H = [0, 0];\n  const podiumsH2H = [0, 0];\n  const polesH2H = [0, 0];\n  const winsH2H = [0, 0];\n  const sprintWinsH2H = [0, 0];\n  let d1_BestRace = 21;\n  let d2_BestRace = 21;\n  let d1_BestQauli = 21;\n  let d2_BestQauli = 21;\n  const d1_avgPace = [];\n  const d2_avgPace = [];\n  const d1_avgQPace = [];\n  const d2_avgQPace = [];\n\n  // 3) Iteramos por cada carrera encontrada\n  for (const gp of races) {\n    const raceID = gp[0];\n\n    // 3.1) Obtenemos todos los DriverIDs de cada equipo en Quali\n    //      (En Python, se guardan como tuples y luego se hace \"IN (drivers1_str)\").\n    //      En JS, construiremos la string manualmente.\n\n    // Pilotos del team1\n    const drivers1 = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT DISTINCT DriverID\n        FROM Races_QualifyingResults\n        WHERE RaceFormula = 1\n          AND RaceID = ${raceID}\n          AND TeamID = ${t1}\n      `, 'allRows') || [];\n\n    // Pilotos del team2\n    const drivers2 = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT DISTINCT DriverID\n        FROM Races_QualifyingResults\n        WHERE RaceFormula = 1\n          AND RaceID = ${raceID}\n          AND TeamID = ${t2}\n      `, 'allRows') || [];\n\n    // Transformamos el array de arrays/tuplas en un array de IDs\n    const drivers1IDs = drivers1.map(d => d[0]);\n    const drivers2IDs = drivers2.map(d => d[0]);\n\n    // Si no hay pilotos, podemos continuar a la siguiente carrera (para evitar queries \"IN ()\")\n    if (!drivers1IDs.length || !drivers2IDs.length) {\n      // Team 1 o Team 2 no participa en esta carrera, saltamos\n      continue;\n    }\n    const drivers1Str = drivers1IDs.join(',');\n    const drivers2Str = drivers2IDs.join(',');\n\n    // 3.2) Fase de Qualy más alta para cada equipo\n    const d1_QStage = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT MAX(QualifyingStage)\n        FROM Races_QualifyingResults\n        WHERE RaceFormula = 1\n          AND RaceID = ${raceID}\n          AND SeasonID = ${season}\n          AND DriverID IN (${drivers1Str})\n      `, 'singleValue') || 0;\n    const d2_QStage = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT MAX(QualifyingStage)\n        FROM Races_QualifyingResults\n        WHERE RaceFormula = 1\n          AND RaceID = ${raceID}\n          AND SeasonID = ${season}\n          AND DriverID IN (${drivers2Str})\n      `, 'singleValue') || 0;\n\n    // 3.3) Posición mínima en esa fase de Qualy (equivalente a \"SELECT MIN(FinishingPos)\")\n    const d1_QRes = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT MIN(FinishingPos)\n        FROM Races_QualifyingResults\n        WHERE RaceFormula = 1\n          AND RaceID = ${raceID}\n          AND SeasonID = ${season}\n          AND DriverID IN (${drivers1Str})\n          AND QualifyingStage = ${d1_QStage}\n      `, 'singleValue') || 99;\n    const d2_QRes = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT MIN(FinishingPos)\n        FROM Races_QualifyingResults\n        WHERE RaceFormula = 1\n          AND RaceID = ${raceID}\n          AND SeasonID = ${season}\n          AND DriverID IN (${drivers2Str})\n          AND QualifyingStage = ${d2_QStage}\n      `, 'singleValue') || 99;\n\n    // 3.4) Comparativa H2H de qualy\n    if (d1_QStage < d2_QStage) {\n      qualiH2H[1] += 1;\n    } else if (d1_QStage > d2_QStage) {\n      qualiH2H[0] += 1;\n    } else {\n      // misma fase de qualy\n      if (d1_QRes < d2_QRes) {\n        qualiH2H[0] += 1;\n      } else if (d1_QRes > d2_QRes) {\n        qualiH2H[1] += 1;\n      }\n    }\n\n    // 3.5) Lap más rápida comparando la misma fase mínima\n    const minQ = Math.min(d1_QStage, d2_QStage);\n    const d1_qLap = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT FastestLap\n        FROM Races_QualifyingResults\n        WHERE RaceFormula = 1\n          AND RaceID = ${raceID}\n          AND SeasonID = ${season}\n          AND DriverID IN (${drivers1Str})\n          AND QualifyingStage = ${minQ}\n      `, 'singleValue') || 0;\n    const d2_qLap = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT FastestLap\n        FROM Races_QualifyingResults\n        WHERE RaceFormula = 1\n          AND RaceID = ${raceID}\n          AND SeasonID = ${season}\n          AND DriverID IN (${drivers2Str})\n          AND QualifyingStage = ${minQ}\n      `, 'singleValue') || 0;\n    if (d1_qLap !== 0 && d2_qLap !== 0) {\n      d1_avgQPace.push(d1_qLap);\n      d2_avgQPace.push(d2_qLap);\n    }\n\n    // Poles: si QStage = 3 y la \"mejor\" posición = 1\n    if (d1_QStage === 3 && d1_QRes === 1) {\n      polesH2H[0] += 1;\n    }\n    if (d2_QStage === 3 && d2_QRes === 1) {\n      polesH2H[1] += 1;\n    }\n\n    // Best Quali\n    if (d1_QRes < d1_BestQauli) {\n      d1_BestQauli = d1_QRes;\n    }\n    if (d2_QRes < d2_BestQauli) {\n      d2_BestQauli = d2_QRes;\n    }\n\n    // 3.6) Resultados de carrera (usamos MIN(FinishingPos))\n    const d1_RRes = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT MIN(FinishingPos)\n        FROM Races_Results\n        WHERE RaceID = ${raceID}\n          AND Season = ${season}\n          AND DriverID IN (${drivers1Str})\n      `, 'singleValue') || 99;\n    const d2_RRes = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT MIN(FinishingPos)\n        FROM Races_Results\n        WHERE RaceID = ${raceID}\n          AND Season = ${season}\n          AND DriverID IN (${drivers2Str})\n      `, 'singleValue') || 99;\n\n    // Wins\n    if (d1_RRes === 1) winsH2H[0] += 1;\n    if (d2_RRes === 1) winsH2H[1] += 1;\n\n    // Race H2H\n    if (d1_RRes < d2_RRes) {\n      raceH2H[0] += 1;\n    } else if (d1_RRes > d2_RRes) {\n      raceH2H[1] += 1;\n    }\n\n    // Podios\n    if (d1_RRes <= 3) podiumsH2H[0] += 1;\n    if (d2_RRes <= 3) podiumsH2H[1] += 1;\n\n    // Best Race\n    if (d1_RRes < d1_BestRace) {\n      d1_BestRace = d1_RRes;\n    }\n    if (d2_RRes < d2_BestRace) {\n      d2_BestRace = d2_RRes;\n    }\n\n    // 3.7) DNF => sumamos\n    const d1_RDNF = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT SUM(DNF)\n        FROM Races_Results\n        WHERE RaceID = ${raceID}\n          AND Season = ${season}\n          AND DriverID IN (${drivers1Str})\n      `, 'singleValue') || 0;\n    const d2_RDNF = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT SUM(DNF)\n        FROM Races_Results\n        WHERE RaceID = ${raceID}\n          AND Season = ${season}\n          AND DriverID IN (${drivers2Str})\n      `, 'singleValue') || 0;\n    if (d1_RDNF > 0) {\n      dnfH2H[0] += d1_RDNF;\n    }\n    if (d2_RDNF > 0) {\n      dnfH2H[1] += d2_RDNF;\n    }\n\n    // 3.8) Ritmo de carrera, si ambos equipos no sumaron DNFs\n    if (d1_RDNF === 0 && d2_RDNF === 0) {\n      // Tomamos el promedio de \"Time\" y \"Laps\" de los pilotos del equipo\n      const d1_raceTotal = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n          SELECT AVG(Time)\n          FROM Races_Results\n          WHERE RaceID = ${raceID}\n            AND Season = ${season}\n            AND DriverID IN (${drivers1Str})\n        `, 'singleValue') || 0;\n      const d2_raceTotal = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n          SELECT AVG(Time)\n          FROM Races_Results\n          WHERE RaceID = ${raceID}\n            AND Season = ${season}\n            AND DriverID IN (${drivers2Str})\n        `, 'singleValue') || 0;\n      const d1_raceLaps = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n          SELECT AVG(Laps)\n          FROM Races_Results\n          WHERE RaceID = ${raceID}\n            AND Season = ${season}\n            AND DriverID IN (${drivers1Str})\n        `, 'singleValue') || 0;\n      const d2_raceLaps = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n          SELECT AVG(Laps)\n          FROM Races_Results\n          WHERE RaceID = ${raceID}\n            AND Season = ${season}\n            AND DriverID IN (${drivers2Str})\n        `, 'singleValue') || 0;\n\n      // Si no son 0, agregamos\n      if (d1_raceLaps && d1_raceTotal) {\n        const pace = Number((d1_raceTotal / d1_raceLaps).toFixed(3));\n        d1_avgPace.push(pace);\n      }\n      if (d2_raceLaps && d2_raceTotal) {\n        const pace = Number((d2_raceTotal / d2_raceLaps).toFixed(3));\n        d2_avgPace.push(pace);\n      }\n    }\n\n    // 3.9) Sprint results (MIN FinishingPos)\n    const d1_SRes = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT MIN(FinishingPos)\n        FROM Races_Sprintresults\n        WHERE RaceID = ${raceID}\n          AND SeasonID = ${season}\n          AND DriverID IN (${drivers1Str})\n      `, 'singleValue');\n    const d2_SRes = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT MIN(FinishingPos)\n        FROM Races_Sprintresults\n        WHERE RaceID = ${raceID}\n          AND SeasonID = ${season}\n          AND DriverID IN (${drivers2Str})\n      `, 'singleValue');\n    if (d1_SRes === 1) {\n      sprintWinsH2H[0] += 1;\n    }\n    if (d2_SRes === 1) {\n      sprintWinsH2H[1] += 1;\n    }\n  }\n\n  // 4) Puntos de cada equipo en el campeonato (TeamStandings)\n  const d1_Pts = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      SELECT Points\n      FROM Races_TeamStandings\n      WHERE RaceFormula = 1\n        AND SeasonID = ${season}\n        AND TeamID = ${t1}\n    `, 'singleValue') || 0;\n  const d2_Pts = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      SELECT Points\n      FROM Races_TeamStandings\n      WHERE RaceFormula = 1\n        AND SeasonID = ${season}\n        AND TeamID = ${t2}\n    `, 'singleValue') || 0;\n  pointsH2H[0] = d1_Pts;\n  pointsH2H[1] = d2_Pts;\n  bestRace[0] = d1_BestRace;\n  bestRace[1] = d2_BestRace;\n  bestQuali[0] = d1_BestQauli;\n  bestQuali[1] = d2_BestQauli;\n\n  // 5) Calculamos la diferencia media de ritmo (race y quali).\n  //    rDifferences = (d2_avg - d1_avg) para cada par\n  const rDifferences = d1_avgPace.map((val, i) => {\n    const d2Val = d2_avgPace[i] || 0;\n    return d2Val - val;\n  });\n  const qDifferences = d1_avgQPace.map((val, i) => {\n    const d2Val = d2_avgQPace[i] || 0;\n    return d2Val - val;\n  });\n\n  // Helpers para la media\n  const mean = arr => {\n    if (!arr.length) return 0;\n    const sum = arr.reduce((acc, num) => acc + num, 0);\n    return sum / arr.length;\n  };\n  const avg_racediff = Number(mean(rDifferences).toFixed(3));\n  const avg_qualidiff = Number(mean(qDifferences).toFixed(3));\n\n  // 6) Construimos resultList con los 12 elementos, en el mismo orden que en Python\n  // resultList = [\n  //   raceH2H, qualiH2H, pointsH2H, podiumsH2H,\n  //   bestRace, bestQuali, dnfH2H, winsH2H,\n  //   polesH2H, sprintWinsH2H,\n  //   (-avg_racediff, avg_racediff),\n  //   (-avg_qualidiff, avg_qualidiff)\n  // ]\n  const resultList = [raceH2H, qualiH2H, pointsH2H, podiumsH2H, bestRace, bestQuali, dnfH2H, winsH2H, polesH2H, sprintWinsH2H, [-avg_racediff, avg_racediff], [-avg_qualidiff, avg_qualidiff]];\n\n  // 7) Retornamos el array final\n  return resultList;\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/scriptUtils/head2head.js?");

/***/ }),

/***/ "./src/js/backend/scriptUtils/transferUtils.js":
/*!*****************************************************!*\
  !*** ./src/js/backend/scriptUtils/transferUtils.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   editContract: () => (/* binding */ editContract),\n/* harmony export */   futureContract: () => (/* binding */ futureContract)\n/* harmony export */ });\n/* harmony import */ var _dbManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dbManager */ \"./src/js/backend/dbManager.js\");\n\nfunction getExcelDate(year) {\n  const excelStartDate = new Date(1900, 0, 1);\n  const targetDate = new Date(year, 0, 1);\n  const msPerDay = 24 * 60 * 60 * 1000;\n  const diffDays = Math.floor((targetDate - excelStartDate) / msPerDay) + 2;\n  return diffDays;\n}\nfunction editContract(driverID, salary, endSeason, startingBonus, raceBonus, raceBonusTargetPos) {\n  const hasContract = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n      SELECT TeamID\n      FROM Staff_Contracts\n      WHERE StaffID = ${driverID}\n        AND ContractType = 0\n    `, 'singleValue');\n  if (hasContract !== null && hasContract !== undefined) {\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        UPDATE Staff_Contracts\n        SET\n          Salary = ${salary},\n          EndSeason = ${endSeason},\n          StartingBonus = ${startingBonus},\n          RaceBonus = ${raceBonus},\n          RaceBonusTargetPos = ${raceBonusTargetPos}\n        WHERE\n          ContractType = 0\n          AND StaffID = ${driverID}\n      `);\n  }\n}\nfunction futureContract(teamID, driverID, salary, endSeason, startingBonus, raceBonus, raceBonusTargetPos, position, year_iteration = \"24\") {\n  if (teamID === \"-1\") {\n    (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        DELETE FROM Staff_Contracts\n        WHERE StaffID = ${driverID}\n          AND ContractType = 3\n      `);\n  } else {\n    let alreadyHasFutureContract = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n        SELECT TeamID\n        FROM Staff_Contracts\n        WHERE StaffID = ${driverID}\n          AND ContractType = 3\n      `, 'singleValue');\n    if (alreadyHasFutureContract === null || alreadyHasFutureContract === undefined) {\n      alreadyHasFutureContract = -1;\n    }\n    if (parseInt(alreadyHasFutureContract, 10) !== parseInt(teamID, 10)) {\n      const season = (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n          SELECT CurrentSeason\n          FROM Player_State\n        `, 'singleValue');\n      const day = getExcelDate(season + 1);\n      (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n          DELETE FROM Staff_Contracts\n          WHERE StaffID = ${driverID}\n            AND ContractType = 3\n        `);\n      if (year_iteration === \"24\") {\n        (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n            INSERT INTO Staff_Contracts\n            VALUES (\n              ${driverID},          \n              3,                 \n              ${teamID},            \n              ${position},        \n              ${day},              \n              ${endSeason},         \n              ${salary},            \n              ${startingBonus},    \n              ${raceBonus},         \n              ${raceBonusTargetPos},\n              0.5,                  \n              0                    \n            )\n          `);\n      } else if (year_iteration === \"23\") {\n        (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n            INSERT INTO Staff_Contracts\n            VALUES (\n              ${driverID},\n              3,\n              1,\n              ${day},\n              1,\n              ${teamID},\n              ${position},\n              1,\n              '[OPINION_STRING_NEUTRAL]',\n              ${day},\n              ${endSeason},\n              1,\n              '[OPINION_STRING_NEUTRAL]',\n              ${salary},\n              1,\n              '[OPINION_STRING_NEUTRAL]',\n              ${startingBonus},\n              1,\n              '[OPINION_STRING_NEUTRAL]',\n              ${raceBonus},\n              1,\n              '[OPINION_STRING_NEUTRAL]',\n              ${raceBonusTargetPos},\n              1,\n              '[OPINION_STRING_NEUTRAL]',\n              0,\n              1,\n              '[OPINION_STRING_NEUTRAL]'\n            )\n          `);\n      }\n    } else {\n      (0,_dbManager__WEBPACK_IMPORTED_MODULE_0__.queryDB)(`\n          UPDATE Staff_Contracts\n          SET\n            PosInTeam = ${position},\n            Salary = ${salary},\n            EndSeason = ${endSeason},\n            StartingBonus = ${startingBonus},\n            RaceBonus = ${raceBonus},\n            RaceBonusTargetPos = ${raceBonusTargetPos}\n          WHERE\n            StaffID = ${driverID}\n            AND TeamID = ${alreadyHasFutureContract}\n            AND ContractType = 3\n        `);\n    }\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/backend/scriptUtils/transferUtils.js?");

/***/ }),

/***/ "./src/js/frontend/calendar.js":
/*!*************************************!*\
  !*** ./src/js/frontend/calendar.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   load_calendar: () => (/* binding */ load_calendar)\n/* harmony export */ });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"./src/js/frontend/config.js\");\n/* harmony import */ var _renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./renderer */ \"./src/js/frontend/renderer.js\");\n/* harmony import */ var _predictions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./predictions */ \"./src/js/frontend/predictions.js\");\n\n\n\nlet deleting = false;\nlet deleted = false;\n\n/**\r\n * Positions both the div the user's moving and the one he has moved it into\r\n * @param {div} div0 The div the user is moving\r\n * @param {div} div1 The div the user has moved div0 into\r\n * @param {string} beforeAfter If the user has moved div0 before or after div1\r\n */\nfunction reubicate(div0, div1, beforeAfter) {\n  const parentDiv = document.querySelector('.main-calendar-section');\n  parentDiv.removeChild(div0);\n  if (beforeAfter === 'before') {\n    parentDiv.insertBefore(div0, div1);\n  } else if (beforeAfter === 'after') {\n    parentDiv.insertBefore(div0, div1.nextSibling);\n  }\n}\n\n/**\r\n * Adds a race in the calendar div\r\n * @param {string} code Code from the race\r\n */\nfunction addRace(code, rainP, rainQ, rainR, type, trackID, state) {\n  let imageUrl = _config__WEBPACK_IMPORTED_MODULE_0__.codes_dict[code];\n  let div = document.createElement('div');\n  let leftDiv = document.createElement('div');\n  let numberDiv = document.createElement('div');\n  numberDiv.className = \"race-calendar-number bold-font\";\n  leftDiv.className = \"left-race\";\n  let rightDiv = document.createElement('div');\n  rightDiv.className = \"right-race\";\n  div.classList.add('race-calendar');\n  div.dataset.trackid = trackID;\n  div.dataset.rainQ = rainQ;\n  div.dataset.rainR = rainR;\n  div.dataset.rainP = rainP;\n  div.dataset.type = type;\n  div.dataset.state = state;\n  if (state === 2) {\n    div.classList.add(\"completed\");\n    let compDiv = document.createElement('div');\n    compDiv.classList.add('complete-div');\n    let divText = document.createElement('div');\n    divText.innerHTML = \"Completed\";\n    divText.className = \"bold-font\";\n    divText.style.fontSize = \"18px\";\n    compDiv.appendChild(divText);\n    div.appendChild(compDiv);\n  }\n  let upperDiv = document.createElement('div');\n  upperDiv.className = \"upper-text-and-flag\";\n  let textDiv = document.createElement('div');\n  textDiv.classList.add('upper-race', 'bold-font');\n  textDiv.textContent = code.slice(0, -1).toUpperCase();\n  const img = document.createElement('img');\n  img.src = imageUrl;\n  img.classList.add('flag');\n  upperDiv.appendChild(textDiv);\n  upperDiv.appendChild(img);\n  let ATAInput;\n  let lowerDiv = document.createElement('div');\n  lowerDiv.classList.add('lower-race');\n  lowerDiv.innerHTML = \"<div class='form-check form-switch'><input class='form-check-input custom-toggle sprint-input' type='checkbox' role='switch''><label class='form-check-label'>Sprint</label></div>\";\n  if (_renderer__WEBPACK_IMPORTED_MODULE_1__.game_version === 2023) {\n    lowerDiv.innerHTML += \"<div class='form-check form-switch'><input class='form-check-input custom-toggle ata-input' type='checkbox' role='switch'><label class='form-check-label' for='flexSwitchCheckDefault'>ATA Quali</label></div>\";\n    ATAInput = lowerDiv.querySelector(\".ata-input\");\n  }\n  let SprintInput = lowerDiv.querySelector(\".sprint-input\");\n  SprintInput.addEventListener(\"click\", function (event) {\n    if (_renderer__WEBPACK_IMPORTED_MODULE_1__.game_version === 2023) {\n      if (ATAInput.checked) ATAInput.checked = false;\n    }\n    if (SprintInput.checked) div.dataset.type = 1;else div.dataset.type = 0;\n  });\n  if (_renderer__WEBPACK_IMPORTED_MODULE_1__.game_version === 2023) {\n    ATAInput.addEventListener(\"click\", function (event) {\n      if (SprintInput.checked) SprintInput.checked = false;\n      if (ATAInput.checked) div.dataset.type = 2;else div.dataset.type = 0;\n    });\n  }\n  leftDiv.appendChild(upperDiv);\n  leftDiv.appendChild(lowerDiv);\n  if (type === 1) {\n    lowerDiv.children[0].firstChild.click();\n  } else if (type === 2) {\n    lowerDiv.children[1].firstChild.click();\n  }\n  div.appendChild(numberDiv);\n  div.appendChild(leftDiv);\n  let qWeather = document.createElement('div');\n  qWeather.className = \"full-quali-weather\";\n  let qName = document.createElement('div');\n  qName.className = \"session-name bold-font\";\n  qName.innerText = \"Sat\";\n  let wSelector = document.createElement('div');\n  wSelector.className = \"weather-selector\";\n  let leftArrow = document.createElement('i');\n  leftArrow.className = \"bi bi-chevron-left\";\n  let rightArrow = document.createElement('i');\n  rightArrow.className = \"bi bi-chevron-right\";\n  let wVis = document.createElement('div');\n  wVis.className = \"weather-vis\";\n  wVis.dataset.value = Number(rainQ);\n  wSelector.appendChild(leftArrow);\n  wSelector.appendChild(wVis);\n  wSelector.appendChild(rightArrow);\n  qWeather.appendChild(qName);\n  qWeather.appendChild(wSelector);\n  let rWeather = qWeather.cloneNode(true);\n  rWeather.firstChild.innerText = \"Sun\";\n  rWeather.children[1].children[1].dataset.value = Number(rainR);\n  let pWeather = qWeather.cloneNode(true);\n  pWeather.firstChild.innerText = \"Fri\";\n  pWeather.children[1].children[1].dataset.value = Number(rainP);\n  rightDiv.appendChild(pWeather);\n  rightDiv.appendChild(qWeather);\n  rightDiv.appendChild(rWeather);\n  div.appendChild(rightDiv);\n  div.querySelectorAll(\".bi-chevron-left\").forEach(function (elem) {\n    elem.addEventListener(\"click\", function () {\n      let val = elem.parentNode.querySelector(\".weather-vis\").dataset.value;\n      let newVal = Number(val) - 1;\n      if (newVal === -1) {\n        newVal = 5;\n      }\n      elem.parentNode.querySelector(\".weather-vis\").dataset.value = newVal;\n      if (elem.parentNode.parentNode.firstChild.innerText === \"Sat\") {\n        elem.parentNode.parentNode.parentNode.parentNode.dataset.rainQ = newVal;\n      } else if (elem.parentNode.parentNode.firstChild.innerText === \"Sun\") {\n        elem.parentNode.parentNode.parentNode.parentNode.dataset.rainR = newVal;\n      } else if (elem.parentNode.parentNode.firstChild.innerText === \"Fri\") {\n        elem.parentNode.parentNode.parentNode.parentNode.dataset.rainP = newVal;\n      }\n      updateVisualizers();\n    });\n  });\n  div.querySelectorAll(\".bi-chevron-right\").forEach(function (elem) {\n    elem.addEventListener(\"click\", function () {\n      let val = elem.parentNode.querySelector(\".weather-vis\").dataset.value;\n      let newVal = Number(val) + 1;\n      if (newVal === 6) {\n        newVal = 0;\n      }\n      elem.parentNode.querySelector(\".weather-vis\").dataset.value = newVal;\n      if (elem.parentNode.parentNode.firstChild.innerText === \"Sat\") {\n        elem.parentNode.parentNode.parentNode.parentNode.dataset.rainQ = newVal;\n      } else if (elem.parentNode.parentNode.firstChild.innerText === \"Sun\") {\n        elem.parentNode.parentNode.parentNode.parentNode.dataset.rainR = newVal;\n      } else if (elem.parentNode.parentNode.firstChild.innerText === \"Fri\") {\n        elem.parentNode.parentNode.parentNode.parentNode.dataset.rainP = newVal;\n      }\n      updateVisualizers();\n    });\n  });\n  document.querySelector('.main-calendar-section').appendChild(div);\n}\nfunction updateVisualizers() {\n  document.querySelector(\".main-calendar\").querySelectorAll(\".weather-vis\").forEach(function (elem) {\n    elem.innerHTML = \"\";\n    let val = elem.dataset.value;\n    let icon = document.createElement(\"i\");\n    icon.className = _config__WEBPACK_IMPORTED_MODULE_0__.weather_dict[val];\n    elem.appendChild(icon);\n  });\n}\nfunction load_calendar(races) {\n  document.querySelector('.main-calendar-section').innerHTML = \"\";\n  races.forEach(function (elem) {\n    let code = _config__WEBPACK_IMPORTED_MODULE_0__.races_map[elem[0]];\n    addRace(code, transformWeather(elem[1]), transformWeather(elem[2]), transformWeather(elem[3]), elem[4], elem[0], elem[5]);\n  });\n  updateVisualizers();\n  update_numbers();\n  load_addRaces();\n}\nfunction update_numbers() {\n  document.querySelectorAll(\".race-calendar-number\").forEach(function (elem, index) {\n    elem.textContent = index + 1;\n  });\n}\nfunction transformWeather(state) {\n  let realWeather;\n  if (state === 1) {\n    realWeather = 0;\n  } else if (state === 2) {\n    realWeather = 1;\n  } else if (state === 4) {\n    realWeather = 2;\n  } else if (state === 8) {\n    realWeather = 3;\n  } else if (state === 16) {\n    realWeather = 4;\n  } else if (state === 32) {\n    realWeather = 5;\n  }\n  return realWeather;\n}\n\n/**\r\n * Changes the number after the race code to specify the format\r\n * @param {div} div div from the race that's changing format\r\n * @param {string} format code of the format\r\n */\nfunction changeFormat(div, format) {\n  let lastChar = div.dataset.code.charAt(div.dataset.code.length - 1);\n  if (/\\d/.test(lastChar)) {\n    div.dataset.code = div.dataset.code.slice(0, -1) + format;\n  } else {\n    div.dataset.code = div.dataset.code + format;\n  }\n}\n\n/**\r\n * Adds all the races to the addRace menu\r\n */\nfunction load_addRaces() {\n  document.getElementById(\"addTrackMenu\").innerHTML = \"\";\n  for (let dataCode of Object.keys(_config__WEBPACK_IMPORTED_MODULE_0__.codes_dict)) {\n    let elem = _config__WEBPACK_IMPORTED_MODULE_0__.countries_dict[dataCode];\n    let li = document.createElement('li');\n    let a = document.createElement('a');\n    a.classList.add('dropdown-item');\n    a.classList.add('menu-race');\n    a.href = '#';\n    a.textContent = elem;\n    a.dataset.code = dataCode;\n    a.dataset.trackid = _config__WEBPACK_IMPORTED_MODULE_0__.invertedRacesMap[dataCode];\n    let imageUrl = _config__WEBPACK_IMPORTED_MODULE_0__.codes_dict[dataCode];\n    let img = document.createElement('img');\n    img.src = imageUrl;\n    img.classList.add('menuFlag');\n    a.appendChild(img);\n    li.appendChild(a);\n    document.getElementById(\"addTrackMenu\").appendChild(li);\n  }\n  listenerRaces();\n}\n\n/**\r\n * Adds the listeners to the addRace menu races\r\n */\nfunction listenerRaces() {\n  document.querySelectorAll('#addTrackMenu a').forEach(item => {\n    item.addEventListener(\"click\", function () {\n      if (document.querySelector(\".main-calendar-section\").childElementCount < _predictions__WEBPACK_IMPORTED_MODULE_2__.max_races) {\n        addRace(item.dataset.code, 0, 0, 0, 0, item.dataset.trackid, 0);\n        updateVisualizers();\n        update_numbers();\n      }\n    });\n  });\n}\n\n/**\r\n * Event listeenr for the delete tracks button\r\n */\ndocument.getElementById(\"deleteTracks\").addEventListener(\"click\", function (btn) {\n  if (deleting) {\n    document.querySelectorAll(\".delete-div\").forEach(function (elem) {\n      elem.parentNode.removeChild(elem);\n      update_numbers();\n    });\n    this.className = \"custom-dropdown custom-button bold-font\";\n    document.querySelectorAll(\".race-calendar\").forEach(function (elem) {\n      if (elem.firstChild.className !== \"complete-div\") {\n        elem.classList = \"race-calendar\";\n      }\n    });\n  } else {\n    document.querySelectorAll(\".race-calendar\").forEach(function (elem) {\n      if (elem.firstChild.className !== \"complete-div\") {\n        elem.classList = \"race-calendar deleting\";\n        let div = document.createElement('div');\n        let trashicon = document.createElement('i');\n        let trashandtext = document.createElement('div');\n        let text = document.createElement('span');\n        text.classList = \"bold-font\";\n        text.innerText = \"Delete\";\n        trashandtext.classList.add('trash-and-text');\n        trashicon.className = \"bi bi-trash-fill\";\n        div.classList.add('delete-div');\n        trashandtext.appendChild(trashicon);\n        trashandtext.appendChild(text);\n        div.appendChild(trashandtext);\n        elem.insertBefore(div, elem.firstChild);\n        trashandtext.addEventListener(\"click\", function () {\n          let race = trashandtext.parentNode.parentNode;\n          trashandtext.parentNode.parentNode.parentNode.removeChild(race);\n          deleted = true;\n          if (race.dataset.trackid === \"6\") {\n            update_notifications(\"Why'd you do that?\", \"monaco\");\n          }\n        });\n      }\n    });\n    this.className = \"custom-dropdown custom-button bold-font delete-mode\";\n  }\n  deleting = !deleting;\n});\n\n/**\r\n * Manages the interaction with the race divs\r\n */\ninteract('.race-calendar').draggable({\n  inertia: true,\n  listeners: {\n    start(event) {\n      let target = event.target;\n      let position = target.getBoundingClientRect();\n      let width = target.getBoundingClientRect().width;\n    },\n    move(event) {\n      const target = event.target;\n      const x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx;\n      const y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;\n      target.style.transform = `translate(${x}px, ${y}px)`;\n      target.style.opacity = 1;\n      target.style.zIndex = 10;\n      target.setAttribute('data-x', x);\n      target.setAttribute('data-y', y);\n    },\n    end(event) {\n      let target = event.target;\n      const racesEvents = document.querySelectorAll('.race-calendar');\n      racesEvents.forEach(function (element) {\n        let eventRect = element.getBoundingClientRect();\n        let centerHorizontal = (eventRect.left + eventRect.right) / 2;\n        if (target !== element) {\n          if (event.clientX >= eventRect.left && event.clientX <= eventRect.right && event.clientY >= eventRect.top && event.clientY <= eventRect.bottom) {\n            if (event.clientX >= centerHorizontal) {\n              reubicate(target, element, \"after\");\n            } else {\n              reubicate(target, element, \"before\");\n            }\n            update_numbers();\n          }\n        }\n      });\n      target.style.transform = 'none';\n      target.setAttribute('data-x', 0);\n      target.setAttribute('data-y', 0);\n\n      // originalParent = undefined;\n      // destinationParent = undefined;\n      // draggable = undefined;\n    }\n  }\n});\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/frontend/calendar.js?");

/***/ }),

/***/ "./src/js/frontend/config.js":
/*!***********************************!*\
  !*** ./src/js/frontend/config.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   abreviations_dict: () => (/* binding */ abreviations_dict),\n/* harmony export */   codes_dict: () => (/* binding */ codes_dict),\n/* harmony export */   combined_dict: () => (/* binding */ combined_dict),\n/* harmony export */   countries_dict: () => (/* binding */ countries_dict),\n/* harmony export */   default_dict: () => (/* binding */ default_dict),\n/* harmony export */   default_points: () => (/* binding */ default_points),\n/* harmony export */   difficultyConfig: () => (/* binding */ difficultyConfig),\n/* harmony export */   driversTableLogosDict: () => (/* binding */ driversTableLogosDict),\n/* harmony export */   engine_stats_dict: () => (/* binding */ engine_stats_dict),\n/* harmony export */   f1_teams: () => (/* binding */ f1_teams),\n/* harmony export */   f2_teams: () => (/* binding */ f2_teams),\n/* harmony export */   f3_teams: () => (/* binding */ f3_teams),\n/* harmony export */   invertedRacesMap: () => (/* binding */ invertedRacesMap),\n/* harmony export */   inverted_dict: () => (/* binding */ inverted_dict),\n/* harmony export */   lightColors: () => (/* binding */ lightColors),\n/* harmony export */   logos_disc: () => (/* binding */ logos_disc),\n/* harmony export */   mentalityModifiers: () => (/* binding */ mentalityModifiers),\n/* harmony export */   mentality_bonuses: () => (/* binding */ mentality_bonuses),\n/* harmony export */   mentality_dict: () => (/* binding */ mentality_dict),\n/* harmony export */   mentality_to_global_menatality: () => (/* binding */ mentality_to_global_menatality),\n/* harmony export */   names_full: () => (/* binding */ names_full),\n/* harmony export */   pars_abreviations: () => (/* binding */ pars_abreviations),\n/* harmony export */   part_codes_abreviations: () => (/* binding */ part_codes_abreviations),\n/* harmony export */   points_race: () => (/* binding */ points_race),\n/* harmony export */   points_sprint: () => (/* binding */ points_sprint),\n/* harmony export */   races_map: () => (/* binding */ races_map),\n/* harmony export */   races_names: () => (/* binding */ races_names),\n/* harmony export */   staff_pics: () => (/* binding */ staff_pics),\n/* harmony export */   staff_positions: () => (/* binding */ staff_positions),\n/* harmony export */   teamOrder: () => (/* binding */ teamOrder),\n/* harmony export */   team_dict: () => (/* binding */ team_dict),\n/* harmony export */   teams_full_name_dict: () => (/* binding */ teams_full_name_dict),\n/* harmony export */   typeStaff_dict: () => (/* binding */ typeStaff_dict),\n/* harmony export */   weather_dict: () => (/* binding */ weather_dict)\n/* harmony export */ });\n// calendar\nlet codes_dict = {\n  \"bah0\": \"../assets/images/bahrain.png\",\n  \"sau0\": \"../assets/images/saudi.jpg\",\n  \"aus0\": \"../assets/images/australia.png\",\n  \"aze0\": \"../assets/images/azerbaiyan.png\",\n  \"mia0\": \"../assets/images/usa.png\",\n  \"imo0\": \"../assets/images/italy.png\",\n  \"mon0\": \"../assets/images/monaco.png\",\n  \"spa0\": \"../assets/images/spain.png\",\n  \"can0\": \"../assets/images/canada.png\",\n  \"aut0\": \"../assets/images/austria.png\",\n  \"gbr0\": \"../assets/images/gbr.png\",\n  \"hun0\": \"../assets/images/hungry.png\",\n  \"bel0\": \"../assets/images/balgium.png\",\n  \"ned0\": \"../assets/images/ned.png\",\n  \"ita0\": \"../assets/images/italy.png\",\n  \"jap0\": \"../assets/images/japan.png\",\n  \"sgp0\": \"../assets/images/singapore.png\",\n  \"qat0\": \"../assets/images/qatar.png\",\n  \"usa0\": \"../assets/images/usa.png\",\n  \"mex0\": \"../assets/images/mexico.png\",\n  \"bra0\": \"../assets/images/brazil.png\",\n  \"veg0\": \"../assets/images/usa.png\",\n  \"uae0\": \"../assets/images/uae.png\",\n  \"chi0\": \"../assets/images/china.png\"\n};\nlet countries_dict = {\n  \"bah0\": \"Bahrain\",\n  \"sau0\": \"Saudi Arabia\",\n  \"aus0\": \"Australia\",\n  \"aze0\": \"Azerbaijan\",\n  \"mia0\": \"Miami\",\n  \"imo0\": \"Imola\",\n  \"mon0\": \"Monaco\",\n  \"spa0\": \"Spain\",\n  \"can0\": \"Canada\",\n  \"aut0\": \"Austria\",\n  \"gbr0\": \"United Kingdom\",\n  \"hun0\": \"Hungary\",\n  \"bel0\": \"Belgium\",\n  \"ned0\": \"Netherlands\",\n  \"ita0\": \"Italy\",\n  \"sgp0\": \"Singapore\",\n  \"jap0\": \"Japan\",\n  \"qat0\": \"Qatar\",\n  \"usa0\": \"USA\",\n  \"mex0\": \"Mexico\",\n  \"bra0\": \"Brazil\",\n  \"veg0\": \"Vegas\",\n  \"uae0\": \"Abu Dhbai\",\n  \"chi0\": \"China\"\n};\nlet weather_dict = {\n  0: \"bi bi-sun\",\n  1: \"bi bi-cloud-sun\",\n  2: \"bi bi-cloud\",\n  3: \"bi bi-cloud-drizzle\",\n  4: \"bi bi-cloud-rain\",\n  5: \"bi bi-cloud-rain-heavy\"\n};\n\n//h2h\nconst lightColors = [\"#f1f1f1\", \"#47c7fc\", \"#ffd300\", \"#6CD3BF\", \"#fcfcfc\", \"#37BEDD\", \"#B6BABD\", \"#c3dc00\", \"#d0e610\", \"#fac51c\", \"#b09247\", \"#f7c82f\"];\nconst default_dict = {\n  1: \"Ferrari\",\n  2: \"McLaren\",\n  3: \"Red Bull\",\n  4: \"Mercedes\",\n  5: \"Alpine\",\n  6: \"Williams\",\n  7: \"Haas\",\n  8: \"Alpha Tauri\",\n  9: \"Alfa Romeo\",\n  10: \"Aston Martin\",\n  32: \"Custom Team\"\n};\nlet combined_dict = {\n  1: \"Ferrari\",\n  2: \"McLaren\",\n  3: \"Red Bull\",\n  4: \"Mercedes\",\n  5: \"Alpine\",\n  6: \"Williams\",\n  7: \"Haas\",\n  8: \"Alpha Tauri\",\n  9: \"Alfa Romeo\",\n  10: \"Aston Martin\",\n  11: \"Prema Racing (F2)\",\n  12: \"Virtuosi Racing (F2)\",\n  13: \"Carlin (F2)\",\n  14: \"Hitech GP (F2)\",\n  15: \"ART Grand Prix (F2)\",\n  16: \"MP Motorsport (F2)\",\n  17: \"PHM Racing (F2)\",\n  18: \"DAMS (F2)\",\n  19: \"Campo Racing (F2)\",\n  20: \"VAR Racing (F2)\",\n  21: \"Trident (F2)\",\n  22: \"Prema Racing (F3)\",\n  23: \"Trident (F3)\",\n  24: \"ART Grand Prix (F3)\",\n  25: \"Hitech GP (F3)\",\n  26: \"VAR Racing (F3)\",\n  27: \"MP Motorsport (F3)\",\n  28: \"Campos Racing (F3)\",\n  29: \"Carlin (F3)\",\n  30: \"Jenzzer Motorsport (F3)\",\n  31: \"PHM Racing (F3)\",\n  32: \"Custom Team\"\n};\n\n//performance\nconst pars_abreviations = {\n  \"chassis\": \"C\",\n  \"front_wing\": \"FW\",\n  \"rear_wing\": \"RW\",\n  \"underfloor\": \"UF\",\n  \"sidepods\": \"SP\",\n  \"suspension\": \"S\"\n};\nconst part_codes_abreviations = {\n  3: \"C\",\n  4: \"FW\",\n  5: \"RW\",\n  6: \"UF\",\n  7: \"SP\",\n  8: \"S\"\n};\nlet abreviations_dict = {\n  1: \"FE\",\n  2: \"MC\",\n  3: \"RB\",\n  4: \"MER\",\n  5: \"ALP\",\n  6: \"WIL\",\n  7: \"HA\",\n  8: \"AT\",\n  9: \"ALFA\",\n  10: \"AM\",\n  32: \"CUS\"\n};\nlet engine_stats_dict = new Map([[10, \"Power\"], [6, \"Fuel efficiency\"], [11, \"Performance threshold\"], [12, \"Performance loss\"], [14, \"Engine durability\"], [18, \"ERS durability\"], [19, \"Gearbox durability\"]]);\n\n//predictions\nconst names_full = {\n  \"BAH\": \"Bahrain\",\n  \"AUS\": \"Australia\",\n  \"SAU\": \"Saudi Arabia\",\n  \"IMO\": \"Imola\",\n  \"MIA\": \"Miami\",\n  \"SPA\": \"Spain\",\n  \"MON\": \"Monaco\",\n  \"AZE\": \"Azerbaijan\",\n  \"CAN\": \"Canada\",\n  \"GBR\": \"Great Britain\",\n  \"AUT\": \"Austria\",\n  \"FRA\": \"France\",\n  \"HUN\": \"Hungary\",\n  \"BEL\": \"Belgium\",\n  \"ITA\": \"Italy\",\n  \"SGP\": \"Singapore\",\n  \"JAP\": \"Japan\",\n  \"USA\": \"United States\",\n  \"MEX\": \"Mexico\",\n  \"BRA\": \"Brazil\",\n  \"UAE\": \"Abu Dhabi\",\n  \"NED\": \"Netherlands\",\n  \"VEG\": \"Vegas\",\n  \"QAT\": \"Qatar\",\n  \"CHI\": \"China\"\n};\n\n//seasonViewer\nlet driversTableLogosDict = {\n  \"stake\": \"logo-stake-table\",\n  \"audi\": \"logo-up-down-extra\",\n  \"alfa\": \"logo-merc-table\",\n  \"sauber\": \"logo-williams-table\",\n  \"visarb\": \"logo-visarb-table\",\n  \"hugo\": \"logo-stake-table\",\n  \"brawn\": \"logo-brawn-table\",\n  \"toyota\": \"logo-williams-table\",\n  \"alphatauri\": \"logo-extra-small\",\n  \"porsche\": \"logo-porsche-table\",\n  \"renault\": \"logo-ferrari-table\",\n  \"andretti\": \"logo-ferrari-table\",\n  \"lotus\": \"logo-up-down\",\n  \"alpine\": \"logo-alpine-table\"\n};\nconst races_map = {\n  2: \"bah0\",\n  1: \"aus0\",\n  11: \"sau0\",\n  24: \"imo0\",\n  22: \"mia0\",\n  5: \"spa0\",\n  6: \"mon0\",\n  4: \"aze0\",\n  7: \"can0\",\n  10: \"gbr0\",\n  9: \"aut0\",\n  8: \"fra0\",\n  12: \"hun0\",\n  13: \"bel0\",\n  14: \"ita0\",\n  15: \"sgp0\",\n  17: \"jap0\",\n  19: \"usa0\",\n  18: \"mex0\",\n  20: \"bra0\",\n  21: \"uae0\",\n  23: \"ned0\",\n  25: \"veg0\",\n  26: \"qat0\",\n  3: \"chi0\"\n};\nconst invertedRacesMap = {\n  \"bah0\": 2,\n  \"aus0\": 1,\n  \"sau0\": 11,\n  \"imo0\": 24,\n  \"mia0\": 22,\n  \"spa0\": 5,\n  \"mon0\": 6,\n  \"aze0\": 4,\n  \"can0\": 7,\n  \"gbr0\": 10,\n  \"aut0\": 9,\n  \"fra0\": 8,\n  \"hun0\": 12,\n  \"bel0\": 13,\n  \"ita0\": 14,\n  \"sgp0\": 15,\n  \"jap0\": 17,\n  \"usa0\": 19,\n  \"mex0\": 18,\n  \"bra0\": 20,\n  \"uae0\": 21,\n  \"ned0\": 23,\n  \"veg0\": 25,\n  \"qat0\": 26,\n  \"chi0\": 3\n};\nconst races_names = {\n  2: \"BAH\",\n  1: \"AUS\",\n  11: \"SAU\",\n  24: \"IMO\",\n  22: \"MIA\",\n  5: \"SPA\",\n  6: \"MON\",\n  4: \"AZE\",\n  7: \"CAN\",\n  10: \"GBR\",\n  9: \"AUT\",\n  8: \"FRA\",\n  12: \"HUN\",\n  13: \"BEL\",\n  14: \"ITA\",\n  15: \"SGP\",\n  17: \"JAP\",\n  19: \"USA\",\n  18: \"MEX\",\n  20: \"BRA\",\n  21: \"UAE\",\n  23: \"NED\",\n  25: \"VEG\",\n  26: \"QAT\",\n  3: \"CHI\"\n};\nconst teams_full_name_dict = {\n  'FERRARI': 1,\n  'MCLAREN': 2,\n  'RED BULL': 3,\n  'MERCEDES': 4,\n  'ALPINE': 5,\n  'WILLIAMS': 6,\n  'HAAS': 7,\n  'ALPHA TAURI': 8,\n  'ALFA ROMEO': 9,\n  'ASTON MARTIN': 10\n};\nlet logos_disc = {\n  1: '../assets/images/ferrari.png',\n  2: '../assets/images/mclaren.png',\n  3: '../assets/images/redbull.png',\n  4: '../assets/images/mercedes.png',\n  5: '../assets/images/alpine.png',\n  6: '../assets/images/williams.png',\n  7: '../assets/images/haas.png',\n  8: '../assets/images/alphatauri.png',\n  9: '../assets/images/alfaromeo.png',\n  10: '../assets/images/astonmartin.png',\n  32: '../assets/images/placeholder.png'\n};\nconst points_race = {\n  1: 25,\n  2: 18,\n  3: 15,\n  4: 12,\n  5: 10,\n  6: 8,\n  7: 6,\n  8: 4,\n  9: 2,\n  10: 1,\n  11: 0,\n  12: 0,\n  13: 0,\n  14: 0,\n  15: 0,\n  16: 0,\n  17: 0,\n  18: 0,\n  19: 0,\n  20: 0,\n  \"DNF\": 0\n};\nconst points_sprint = {\n  1: 8,\n  2: 7,\n  3: 6,\n  4: 5,\n  5: 4,\n  6: 3,\n  7: 2,\n  8: 1,\n  9: 0,\n  10: 0,\n  11: 0,\n  12: 0,\n  13: 0,\n  14: 0,\n  15: 0,\n  16: 0,\n  17: 0,\n  18: 0,\n  19: 0,\n  20: 0,\n  \"-1\": 0\n};\nlet default_points = [\"25\", \"18\", \"15\", \"12\", \"10\", \"8\", \"6\", \"4\", \"2\", \"1\", \"DNF\", \"0\", \"\", \"-\"];\n\n//stats\nlet typeStaff_dict = {\n  0: \"fulldriverlist\",\n  1: \"fullTechnicalList\",\n  2: \"fullEngineerList\",\n  3: \"fullAeroList\",\n  4: \"fullDirectorList\"\n};\nlet mentality_dict = {\n  0: \"enthusiastic\",\n  1: \"positive\",\n  2: \"neutral\",\n  3: \"negative\",\n  4: \"demoralized\"\n};\nlet teamOrder = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 32, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31];\nconst mentality_bonuses = {\n  0: 7,\n  1: 4,\n  2: 0,\n  3: -2,\n  4: -6\n};\nconst mentalityModifiers = {\n  5: -8,\n  9: -7,\n  15: -6,\n  20: -5,\n  24: -4,\n  29: -3,\n  35: -2,\n  39: -1,\n  59: 0,\n  63: 1,\n  69: 2,\n  77: 3,\n  79: 4,\n  83: 5,\n  85: 6,\n  96: 7,\n  100: 8\n};\nconst mentality_to_global_menatality = {\n  0: 95,\n  1: 79,\n  2: 59,\n  3: 24,\n  4: 5\n};\n\n//transfers\nconst f1_teams = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 32];\nconst f2_teams = [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21];\nconst f3_teams = [22, 23, 24, 25, 26, 27, 28, 29, 30, 31];\nconst staff_positions = {\n  1: \"technical-chief\",\n  2: \"race-engineer\",\n  3: \"head-aero\",\n  4: \"sporting-director\"\n};\nconst staff_pics = {\n  1: \"../assets/images/technicalChief.png\",\n  2: \"../assets/images/raceEngineer.png\",\n  3: \"../assets/images/headAero.png\",\n  4: \"../assets/images/sportingDirector.png\"\n};\nlet team_dict = {\n  1: \"fe\",\n  2: \"mc\",\n  3: \"rb\",\n  4: \"me\",\n  5: \"al\",\n  6: \"wi\",\n  7: \"ha\",\n  8: \"at\",\n  9: \"af\",\n  10: \"as\",\n  32: \"ct\",\n  33: \"f2\",\n  34: \"f3\"\n};\nlet inverted_dict = {\n  'ferrari': 1,\n  'mclaren': 2,\n  'redbull': 3,\n  'merc': 4,\n  'alpine': 5,\n  'williams': 6,\n  'haas': 7,\n  'alphatauri': 8,\n  'alfaromeo': 9,\n  'astonmartin': 10,\n  'custom': 32\n};\n\n// renderer\nconst difficultyConfig = {\n  \"default\": {\n    visible: [\"defaultDif\"],\n    lightDif: {\n      className: \"dif-warning\",\n      text: \"\"\n    },\n    researchDif: {\n      className: \"dif-warning\",\n      text: \"\"\n    },\n    statDif: {\n      className: \"dif-warning\",\n      text: \"\"\n    },\n    designTimeDif: {\n      className: \"dif-warning\",\n      text: \"\"\n    },\n    factoryDif: {\n      className: \"dif-warning\",\n      text: \"\"\n    },\n    buildDif: {\n      className: \"dif-warning\",\n      text: \"\"\n    }\n  },\n  \"reduced weight\": {\n    visible: [\"lightDif\"],\n    lightDif: {\n      className: \"dif-warning extra-hard\",\n      text: \"Lightweight parts\"\n    }\n  },\n  \"extra-hard\": {\n    visible: [\"lightDif\", \"researchDif\", \"statDif\"],\n    lightDif: {\n      className: \"dif-warning extra-hard\",\n      text: \"Lightweight parts\"\n    },\n    researchDif: {\n      className: \"dif-warning extra-hard\",\n      text: \"Small research boost\"\n    },\n    statDif: {\n      className: \"dif-warning extra-hard\",\n      text: \"Stats boost +0.1%\"\n    }\n  },\n  \"brutal\": {\n    visible: [\"lightDif\", \"researchDif\", \"statDif\", \"designTimeDif\"],\n    lightDif: {\n      className: \"dif-warning extra-hard\",\n      text: \"Lightweight parts\"\n    },\n    researchDif: {\n      className: \"dif-warning brutal\",\n      text: \"Moderate research boost\"\n    },\n    statDif: {\n      className: \"dif-warning brutal\",\n      text: \"Stats boost +0.15%\"\n    },\n    designTimeDif: {\n      className: \"dif-warning brutal\",\n      text: \"Design times reduced 5%\"\n    }\n  },\n  \"unfair\": {\n    visible: [\"lightDif\", \"researchDif\", \"statDif\", \"designTimeDif\", \"factoryDif\"],\n    lightDif: {\n      className: \"dif-warning extra-hard\",\n      text: \"Lightweight parts\"\n    },\n    researchDif: {\n      className: \"dif-warning unfair\",\n      text: \"Large research boost\"\n    },\n    statDif: {\n      className: \"dif-warning unfair\",\n      text: \"Stats boost +0.3%\"\n    },\n    designTimeDif: {\n      className: \"dif-warning unfair\",\n      text: \"Design times reduced 11%\"\n    },\n    factoryDif: {\n      className: \"dif-warning unfair\",\n      text: \"Factory level 4\"\n    }\n  },\n  \"insane\": {\n    visible: [\"lightDif\", \"researchDif\", \"statDif\", \"designTimeDif\", \"factoryDif\", \"buildDif\"],\n    lightDif: {\n      className: \"dif-warning extra-hard\",\n      text: \"Lightweight parts\"\n    },\n    researchDif: {\n      className: \"dif-warning insane\",\n      text: \"Huge research boost\"\n    },\n    statDif: {\n      className: \"dif-warning insane\",\n      text: \"Stats boost +0.35%\"\n    },\n    designTimeDif: {\n      className: \"dif-warning insane\",\n      text: \"Design times reduced 16%\"\n    },\n    factoryDif: {\n      className: \"dif-warning unfair\",\n      text: \"Factory level 4\"\n    },\n    buildDif: {\n      className: \"dif-warning insane\",\n      text: \"+1 part when design completed\"\n    }\n  },\n  \"impossible\": {\n    visible: [\"lightDif\", \"researchDif\", \"statDif\", \"designTimeDif\", \"factoryDif\", \"buildDif\"],\n    lightDif: {\n      className: \"dif-warning impossible\",\n      text: \"ULTRA-lightweight parts\"\n    },\n    researchDif: {\n      className: \"dif-warning impossible\",\n      text: \"Massive research boost\"\n    },\n    statDif: {\n      className: \"dif-warning impossible\",\n      text: \"Stats boost +0.48%\"\n    },\n    designTimeDif: {\n      className: \"dif-warning impossible\",\n      text: \"Design times reduced 20%\"\n    },\n    factoryDif: {\n      className: \"dif-warning impossible\",\n      text: \"Factory level 5\"\n    },\n    buildDif: {\n      className: \"dif-warning impossible\",\n      text: \"+2 parts when design completed\"\n    }\n  }\n};\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/frontend/config.js?");

/***/ }),

/***/ "./src/js/frontend/dragFile.js":
/*!*************************************!*\
  !*** ./src/js/frontend/dragFile.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDBUtils: () => (/* binding */ getDBUtils)\n/* harmony export */ });\n/* harmony import */ var _backend_UESaveHandler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../backend/UESaveHandler */ \"./src/js/backend/UESaveHandler.js\");\n/* harmony import */ var _backend_dbManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../backend/dbManager.js */ \"./src/js/backend/dbManager.js\");\n/* harmony import */ var _renderer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./renderer.js */ \"./src/js/frontend/renderer.js\");\n/* harmony import */ var _backend_scriptUtils_dbUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../backend/scriptUtils/dbUtils.js */ \"./src/js/backend/scriptUtils/dbUtils.js\");\n// dragDrop.js\n\n\n\n\nlet dbUtils = null;\nlet carAnalysisUtils = null;\nconst dropDiv = document.getElementById(\"dropDiv\");\ndropDiv.addEventListener(\"dragenter\", event => {\n  event.preventDefault();\n  dropDiv.classList.add(\"drag-over\");\n});\ndropDiv.addEventListener(\"dragover\", event => {\n  event.preventDefault();\n  event.dataTransfer.dropEffect = \"copy\";\n});\ndropDiv.addEventListener(\"dragleave\", event => {\n  event.preventDefault();\n  dropDiv.classList.remove(\"drag-over\");\n});\ndropDiv.addEventListener(\"drop\", async event => {\n  event.preventDefault();\n  dropDiv.classList.remove(\"drag-over\");\n  const file = event.dataTransfer.files[0];\n  if (!file) return;\n  const {\n    db,\n    metadata\n  } = await (0,_backend_UESaveHandler__WEBPACK_IMPORTED_MODULE_0__.analyzeFileToDatabase)(file);\n  (0,_backend_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.setDatabase)(db, metadata);\n  dbUtils = new _backend_scriptUtils_dbUtils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](_backend_dbManager_js__WEBPACK_IMPORTED_MODULE_1__.queryDB, metadata);\n  document.getElementById(\"saveFileDropped\").classList.add(\"completed\");\n  const tables = db.exec(\"SELECT name FROM sqlite_master WHERE type='table'\");\n  console.log(\"All tables:\", tables);\n  const message = {\n    command: 'saveSelected',\n    data: {\n      selectedData: \"Hola\",\n      prueba2: \"Hola mola\"\n    }\n  };\n  const command = _renderer_js__WEBPACK_IMPORTED_MODULE_2__.factory.createCommand(message);\n  command.execute();\n});\nfunction getDBUtils() {\n  if (!dbUtils) {\n    throw new Error(\"La base de datos aún no se ha inicializado.\");\n  }\n  return dbUtils;\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/frontend/dragFile.js?");

/***/ }),

/***/ "./src/js/frontend/head2head.js":
/*!**************************************!*\
  !*** ./src/js/frontend/head2head.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   colors_dict: () => (/* binding */ colors_dict),\n/* harmony export */   hideComp: () => (/* binding */ hideComp),\n/* harmony export */   load_drivers_h2h: () => (/* binding */ load_drivers_h2h),\n/* harmony export */   load_labels_initialize_graphs: () => (/* binding */ load_labels_initialize_graphs),\n/* harmony export */   manage_h2h_bars: () => (/* binding */ manage_h2h_bars),\n/* harmony export */   qualiPaceListener: () => (/* binding */ qualiPaceListener),\n/* harmony export */   racePaceListener: () => (/* binding */ racePaceListener),\n/* harmony export */   resetH2H: () => (/* binding */ resetH2H),\n/* harmony export */   sprintsListeners: () => (/* binding */ sprintsListeners)\n/* harmony export */ });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"./src/js/frontend/config.js\");\n/* harmony import */ var _renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./renderer */ \"./src/js/frontend/renderer.js\");\n/* harmony import */ var _transfers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transfers */ \"./src/js/frontend/transfers.js\");\n/* harmony import */ var _predictions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./predictions */ \"./src/js/frontend/predictions.js\");\n\n\n\n\nlet driver1_selected = false;\nlet driver2_selected = false;\nlet driver1Sel;\nlet driver2Sel;\nlet pos_dict = {\n  1: \"1st\",\n  2: \"2nd\",\n  3: \"3rd\"\n};\nlet d1_team;\nlet d2_team;\nlet wins = false;\nlet poles = false;\nlet sprints = false;\nlet race = 0;\nlet quali = 0;\nlet menuLength = 4;\nlet driverGraph;\nlet pointsGraph;\nlet qualiGraph;\nlet gapWinnerGraph;\nlet gapPoleGraph;\nlet compData;\nlet annotationsToggle = true;\nlet h2hCount = 0;\nlet graphCount = 0;\nlet h2hList = [];\nlet graphList = [];\nlet h2hTeamList = [];\nlet graphTeamList = [];\nlet mode = \"driver\";\nlet colors_dict = {\n  \"10\": \"#F91536\",\n  \"11\": \"#f1f1f1\",\n  \"20\": \"#F58020\",\n  \"21\": \"#47c7fc\",\n  \"30\": \"#3671C6\",\n  \"31\": \"#ffd300\",\n  \"40\": \"#6CD3BF\",\n  \"41\": \"#fcfcfc\",\n  \"50\": \"#2293D1\",\n  \"51\": \"#fd48c7\",\n  \"60\": \"#37BEDD\",\n  \"61\": \"#f1f1f1\",\n  \"70\": \"#B6BABD\",\n  \"71\": \"#f62039\",\n  \"80\": \"#5E8FAA\",\n  \"81\": \"#f1f1f1\",\n  \"90\": \"#C92D4B\",\n  \"91\": \"#f1f1f1\",\n  \"100\": \"#358C75\",\n  \"101\": \"#c3dc00\",\n  \"320\": \"#ffffff\",\n  \"321\": \"#000000\"\n};\n//changed as the ct colors changes, so it stays\n\nChart.register(ChartDataLabels);\n\n/**\r\n * Puts the bars of the head to head with the correct width for the drivers selected\r\n * @param {object} data object with all the info of the comparision between both drivers\r\n */\nfunction manage_h2h_bars(data) {\n  let relValue;\n  let d1_width;\n  let d2_width;\n  compData = data;\n  if (data[7].some(elem => elem >= 2)) {\n    data[4] = data[7];\n    document.getElementById(\"bestrh2h\").querySelector(\".only-name\").textContent = \"WINS\";\n    wins = true;\n  } else {\n    document.getElementById(\"bestrh2h\").querySelector(\".only-name\").textContent = \"BEST RACE\";\n    wins = false;\n  }\n  if (data[8].some(elem => elem >= 2)) {\n    data[5] = data[8];\n    document.getElementById(\"bestqh2h\").querySelector(\".only-name\").textContent = \"POLES\";\n    poles = true;\n  } else {\n    document.getElementById(\"bestqh2h\").querySelector(\".only-name\").textContent = \"BEST QUALI\";\n    poles = false;\n  }\n  if (data[9].some(elem => elem >= 1)) {\n    document.getElementById(\"bestrh2h\").querySelector(\".name-H2H\").style.justifyContent = \"space-between\";\n    document.getElementById(\"bestrh2h\").querySelectorAll(\"i\").forEach(function (elem) {\n      elem.classList.remove(\"d-none\");\n    });\n  } else {\n    document.getElementById(\"bestrh2h\").querySelector(\".name-H2H\").style.justifyContent = \"center\";\n    document.getElementById(\"bestrh2h\").querySelectorAll(\"i\").forEach(function (elem) {\n      elem.classList.add(\"d-none\");\n    });\n  }\n  document.querySelectorAll(\".one-statH2H\").forEach(function (elem, index) {\n    if (elem.id === \"bestrh2h\" || elem.id === \"bestqh2h\") {\n      if (!wins && elem.id === \"bestrh2h\") {\n        d1_width = 100 - (data[index][0] - 1) * _predictions__WEBPACK_IMPORTED_MODULE_3__.relative_grid;\n        d2_width = 100 - (data[index][1] - 1) * _predictions__WEBPACK_IMPORTED_MODULE_3__.relative_grid;\n        if (data[index][0] <= 3) {\n          elem.querySelector(\".driver1-number\").textContent = pos_dict[data[index][0]];\n        } else {\n          elem.querySelector(\".driver1-number\").textContent = data[index][0] + \"th\";\n        }\n        if (data[index][1] <= 3) {\n          elem.querySelector(\".driver2-number\").textContent = pos_dict[data[index][1]];\n        } else {\n          elem.querySelector(\".driver2-number\").textContent = data[index][1] + \"th\";\n        }\n      } else if (wins && elem.id === \"bestrh2h\") {\n        relValue = (100 / (data[index][0] + data[index][1])).toFixed(2);\n        d1_width = data[index][0] * relValue;\n        d2_width = data[index][1] * relValue;\n        elem.querySelector(\".driver1-number\").textContent = data[index][0];\n        elem.querySelector(\".driver2-number\").textContent = data[index][1];\n      }\n      if (!poles && elem.id === \"bestqh2h\") {\n        d1_width = 100 - (data[index][0] - 1) * _predictions__WEBPACK_IMPORTED_MODULE_3__.relative_grid;\n        d2_width = 100 - (data[index][1] - 1) * _predictions__WEBPACK_IMPORTED_MODULE_3__.relative_grid;\n        if (data[index][0] <= 3) {\n          elem.querySelector(\".driver1-number\").textContent = pos_dict[data[index][0]];\n        } else {\n          elem.querySelector(\".driver1-number\").textContent = data[index][0] + \"th\";\n        }\n        if (data[index][1] <= 3) {\n          elem.querySelector(\".driver2-number\").textContent = pos_dict[data[index][1]];\n        } else {\n          elem.querySelector(\".driver2-number\").textContent = data[index][1] + \"th\";\n        }\n      } else if (poles && elem.id === \"bestqh2h\") {\n        relValue = (100 / (data[index][0] + data[index][1])).toFixed(2);\n        d1_width = data[index][0] * relValue;\n        d2_width = data[index][1] * relValue;\n        elem.querySelector(\".driver1-number\").textContent = data[index][0];\n        elem.querySelector(\".driver2-number\").textContent = data[index][1];\n      }\n    } else {\n      if (elem.id === \"raceh2h\" || elem.id === \"qualih2h\") {\n        let index2;\n        if (elem.id === \"raceh2h\") {\n          index2 = 10;\n        } else {\n          index2 = 11;\n        }\n        let d1Num = elem.querySelector(\".avg-comparison\").querySelector(\".driver1-avg\");\n        d1Num.className = \"driver1-avg bold-font\";\n        let d2Num = elem.querySelector(\".avg-comparison\").querySelector(\".driver2-avg\");\n        d2Num.className = \"driver2-avg bold-font\";\n        let d1 = compData[index2][0];\n        if (compData[index2][0] > 0) {\n          d1 = \"+\" + compData[index2][0];\n          d1Num.classList.add(\"negative\");\n          d2Num.classList.add(\"positive\");\n        }\n        d1Num.innerText = d1;\n        let d2 = compData[index2][1];\n        if (compData[index2][1] > 0) {\n          d2 = \"+\" + compData[index2][1];\n          d1Num.classList.add(\"positive\");\n          d2Num.classList.add(\"negative\");\n        }\n        d2Num.innerText = d2;\n        if (elem.id === \"qualih2h\") {\n          relValue = (100 / (data[0][0] + data[0][1])).toFixed(2);\n          if (relValue == Infinity) {\n            relValue = 0;\n          }\n          d1_width = data[index][0] * relValue;\n          d2_width = data[index][1] * relValue;\n          elem.querySelector(\".driver1-number\").textContent = data[index][0];\n          elem.querySelector(\".driver2-number\").textContent = data[index][1];\n          if (quali === 2) {\n            d1_width = 100 - (data[14][0] - 1) * _predictions__WEBPACK_IMPORTED_MODULE_3__.relative_grid;\n            d2_width = 100 - (data[14][1] - 1) * _predictions__WEBPACK_IMPORTED_MODULE_3__.relative_grid;\n            elem.querySelector(\".driver1-number\").textContent = data[14][0];\n            elem.querySelector(\".driver2-number\").textContent = data[14][1];\n          } else if (quali === 3) {\n            d1_width = 100 - (data[15][0] - 1) * _predictions__WEBPACK_IMPORTED_MODULE_3__.relative_grid;\n            d2_width = 100 - (data[15][1] - 1) * _predictions__WEBPACK_IMPORTED_MODULE_3__.relative_grid;\n            elem.querySelector(\".driver1-number\").textContent = data[15][0];\n            elem.querySelector(\".driver2-number\").textContent = data[15][1];\n          }\n        }\n        if (elem.id === \"raceh2h\") {\n          relValue = (100 / (data[0][0] + data[0][1])).toFixed(2);\n          if (relValue == Infinity) {\n            relValue = 0;\n          }\n          d1_width = data[index][0] * relValue;\n          d2_width = data[index][1] * relValue;\n          elem.querySelector(\".driver1-number\").textContent = data[index][0];\n          elem.querySelector(\".driver2-number\").textContent = data[index][1];\n          if (race === 2) {\n            d1_width = 100 - (data[12][0] - 1) * _predictions__WEBPACK_IMPORTED_MODULE_3__.relative_grid;\n            d2_width = 100 - (data[12][1] - 1) * _predictions__WEBPACK_IMPORTED_MODULE_3__.relative_grid;\n            elem.querySelector(\".driver1-number\").textContent = data[12][0];\n            elem.querySelector(\".driver2-number\").textContent = data[12][1];\n          } else if (race === 3) {\n            d1_width = 100 - (data[13][0] - 1) * _predictions__WEBPACK_IMPORTED_MODULE_3__.relative_grid;\n            d2_width = 100 - (data[13][1] - 1) * _predictions__WEBPACK_IMPORTED_MODULE_3__.relative_grid;\n            elem.querySelector(\".driver1-number\").textContent = data[13][0];\n            elem.querySelector(\".driver2-number\").textContent = data[13][1];\n          }\n        }\n      } else if (elem.id === \"ptsh2h\") {\n        relValue = 100 / Math.max(data[index][0], data[index][1]);\n        if (relValue == Infinity) {\n          relValue = 0;\n        }\n        d1_width = data[index][0] * relValue;\n        d2_width = data[index][1] * relValue;\n        elem.querySelector(\".driver1-number\").textContent = data[index][0];\n        elem.querySelector(\".driver2-number\").textContent = data[index][1];\n      } else if (elem.id === \"dnfh2h\" || elem.id === \"podiumsh2h\") {\n        relValue = (100 / (data[index][0] + data[index][1])).toFixed(2);\n        if (relValue == Infinity) {\n          relValue = 0;\n        }\n        d1_width = data[index][0] * relValue;\n        d2_width = data[index][1] * relValue;\n        elem.querySelector(\".driver1-number\").textContent = data[index][0];\n        elem.querySelector(\".driver2-number\").textContent = data[index][1];\n      }\n    }\n    if (d1_width > 100) {\n      d1_width = 100;\n    }\n    if (d2_width > 100) {\n      d2_width = 100;\n    }\n    fill_bars(elem, d1_width, d2_width);\n  });\n}\n/**\r\n * Fills the bars for the elem with driver1 and 2 data\r\n * @param {div} elem general bar for the comparision\r\n * @param {Number} d1_width driver 1's width for his bar\r\n * @param {Number} d2_width driver 2's width for his bar\r\n */\nfunction fill_bars(elem, d1_width, d2_width) {\n  elem.querySelector(\".driver1-bar\").className = \"driver1-bar\";\n  elem.querySelector(\".driver2-bar\").className = \"driver2-bar\";\n  document.querySelector(\".driver1-name\").className = \"driver1-name\";\n  document.querySelector(\".driver2-name\").className = \"driver2-name\";\n  elem.querySelector(\".driver1-bar\").classList.add(_config__WEBPACK_IMPORTED_MODULE_0__.team_dict[h2hTeamList[0]] + \"bar-primary\");\n  document.querySelector(\".driver1-name\").classList.add(_config__WEBPACK_IMPORTED_MODULE_0__.team_dict[h2hTeamList[0]] + \"-back-transparent\");\n  if (h2hTeamList[0] === h2hTeamList[1]) {\n    elem.querySelector(\".driver2-bar\").classList.add(_config__WEBPACK_IMPORTED_MODULE_0__.team_dict[h2hTeamList[1]] + \"bar-secondary\");\n    document.querySelector(\".driver2-name\").classList.add(_config__WEBPACK_IMPORTED_MODULE_0__.team_dict[h2hTeamList[1]] + \"-back-transparent-secondary\");\n  } else {\n    elem.querySelector(\".driver2-bar\").classList.add(_config__WEBPACK_IMPORTED_MODULE_0__.team_dict[h2hTeamList[1]] + \"bar-primary\");\n    document.querySelector(\".driver2-name\").classList.add(_config__WEBPACK_IMPORTED_MODULE_0__.team_dict[h2hTeamList[1]] + \"-back-transparent\");\n  }\n  elem.querySelector(\".driver1-bar\").style.width = d1_width + \"%\";\n  elem.querySelector(\".driver2-bar\").style.width = d2_width + \"%\";\n}\n\n/**\r\n * Toggles the sprint wins comparision\r\n */\nfunction toggle_sprints() {\n  let elem = document.querySelector(\"#bestrh2h\");\n  let d1_width;\n  let d2_width;\n  let relValue;\n  if (sprints) {\n    elem.querySelector(\".only-name\").textContent = \"SPRINT WINS\";\n    relValue = (100 / (compData[9][0] + compData[9][1])).toFixed(2);\n    d1_width = compData[9][0] * relValue;\n    d2_width = compData[9][1] * relValue;\n    elem.querySelector(\".driver1-number\").textContent = compData[9][0];\n    elem.querySelector(\".driver2-number\").textContent = compData[9][1];\n  } else {\n    if (wins) {\n      elem.querySelector(\".only-name\").textContent = \"WINS\";\n      relValue = (100 / (compData[4][0] + compData[4][1])).toFixed(2);\n      d1_width = compData[4][0] * relValue;\n      d2_width = compData[4][1] * relValue;\n      elem.querySelector(\".driver1-number\").textContent = compData[4][0];\n      elem.querySelector(\".driver2-number\").textContent = compData[4][1];\n    } else {\n      elem.querySelector(\".only-name\").textContent = \"BEST RACE\";\n      d1_width = 100 - (compData[4][0] - 1) * 5;\n      d2_width = 100 - (compData[4][1] - 1) * 5;\n      if (compData[4][0] <= 3) {\n        elem.querySelector(\".driver1-number\").textContent = pos_dict[compData[4][0]];\n      } else {\n        elem.querySelector(\".driver1-number\").textContent = compData[4][0] + \"th\";\n      }\n      if (compData[4][1] <= 3) {\n        elem.querySelector(\".driver2-number\").textContent = pos_dict[compData[4][1]];\n      } else {\n        elem.querySelector(\".driver2-number\").textContent = compData[4][1] + \"th\";\n      }\n    }\n  }\n  fill_bars(elem, d1_width, d2_width);\n}\nfunction toggle_racePace() {\n  let d1_width;\n  let d2_width;\n  let relValue;\n  let elem = document.querySelector(\"#raceh2h\");\n  if (race === 1) {\n    elem.querySelector(\".only-name\").textContent = \"AVG PACE DIFF (s)\";\n    elem.querySelector(\".bar-space\").classList.add(\"d-none\");\n    elem.querySelector(\".avg-comparison\").classList.remove(\"d-none\");\n    let d1Num = elem.querySelector(\".avg-comparison\").querySelector(\".driver1-avg\");\n    d1Num.className = \"driver1-avg bold-font\";\n    let d2Num = elem.querySelector(\".avg-comparison\").querySelector(\".driver2-avg\");\n    d2Num.className = \"driver2-avg bold-font\";\n    let d1 = compData[10][0];\n    if (compData[10][0] > 0) {\n      d1 = \"+\" + compData[10][0];\n      d1Num.classList.add(\"negative\");\n      d2Num.classList.add(\"positive\");\n    }\n    d1Num.innerText = d1;\n    let d2 = compData[10][1];\n    if (compData[10][1] > 0) {\n      d2 = \"+\" + compData[10][1];\n      d1Num.classList.add(\"positive\");\n      d2Num.classList.add(\"negative\");\n    }\n    d2Num.innerText = d2;\n  } else {\n    elem.querySelector(\".bar-space\").classList.remove(\"d-none\");\n    elem.querySelector(\".avg-comparison\").classList.add(\"d-none\");\n    if (race === 0) {\n      elem.querySelector(\".only-name\").textContent = \"RACE\";\n      relValue = (100 / (compData[0][0] + compData[0][1])).toFixed(2);\n      d1_width = compData[0][0] * relValue;\n      d2_width = compData[0][1] * relValue;\n      elem.querySelector(\".driver1-number\").textContent = compData[0][0];\n      elem.querySelector(\".driver2-number\").textContent = compData[0][1];\n    } else if (race === 2) {\n      elem.querySelector(\".only-name\").textContent = \"AVG RACE\";\n      d1_width = 100 - (compData[12][0] - 1) * 5;\n      d2_width = 100 - (compData[12][1] - 1) * 5;\n      elem.querySelector(\".driver1-number\").textContent = compData[12][0];\n      elem.querySelector(\".driver2-number\").textContent = compData[12][1];\n    } else if (race === 3) {\n      elem.querySelector(\".only-name\").textContent = \"MEDIAN RACE\";\n      d1_width = 100 - (compData[13][0] - 1) * 5;\n      d2_width = 100 - (compData[13][1] - 1) * 5;\n      elem.querySelector(\".driver1-number\").textContent = compData[13][0];\n      elem.querySelector(\".driver2-number\").textContent = compData[13][1];\n    }\n    fill_bars(elem, d1_width, d2_width);\n  }\n}\nfunction toggle_qualiPace() {\n  let elem = document.querySelector(\"#qualih2h\");\n  let d1_width;\n  let d2_width;\n  let relValue;\n  if (quali === 1) {\n    elem.querySelector(\".only-name\").textContent = \"AVG QUALI DIFF (s)\";\n    elem.querySelector(\".bar-space\").classList.add(\"d-none\");\n    elem.querySelector(\".avg-comparison\").classList.remove(\"d-none\");\n    let d1Num = elem.querySelector(\".avg-comparison\").querySelector(\".driver1-avg\");\n    d1Num.className = \"driver1-avg bold-font\";\n    let d2Num = elem.querySelector(\".avg-comparison\").querySelector(\".driver2-avg\");\n    d2Num.className = \"driver2-avg bold-font\";\n    let d1 = compData[11][0];\n    if (compData[11][0] > 0) {\n      d1 = \"+\" + compData[11][0];\n      d1Num.classList.add(\"negative\");\n      d2Num.classList.add(\"positive\");\n    }\n    d1Num.innerText = d1;\n    let d2 = compData[11][1];\n    if (compData[11][1] > 0) {\n      d2 = \"+\" + compData[11][1];\n      d1Num.classList.add(\"positive\");\n      d2Num.classList.add(\"negative\");\n    }\n    d2Num.innerText = d2;\n  } else {\n    elem.querySelector(\".bar-space\").classList.remove(\"d-none\");\n    elem.querySelector(\".avg-comparison\").classList.add(\"d-none\");\n    if (quali === 0) {\n      elem.querySelector(\".only-name\").textContent = \"QUALIFYING\";\n      relValue = (100 / (compData[0][0] + compData[0][1])).toFixed(2);\n      d1_width = compData[1][0] * relValue;\n      d2_width = compData[1][1] * relValue;\n      elem.querySelector(\".driver1-number\").textContent = compData[1][0];\n      elem.querySelector(\".driver2-number\").textContent = compData[1][1];\n    } else if (quali === 2) {\n      elem.querySelector(\".only-name\").textContent = \"AVG QUALI\";\n      d1_width = 100 - (compData[14][0] - 1) * 5;\n      d2_width = 100 - (compData[14][1] - 1) * 5;\n      elem.querySelector(\".driver1-number\").textContent = compData[14][0];\n      elem.querySelector(\".driver2-number\").textContent = compData[14][1];\n    } else if (quali === 3) {\n      elem.querySelector(\".only-name\").textContent = \"MEDIAN QUALI\";\n      d1_width = 100 - (compData[15][0] - 1) * 5;\n      d2_width = 100 - (compData[15][1] - 1) * 5;\n      elem.querySelector(\".driver1-number\").textContent = compData[15][0];\n      elem.querySelector(\".driver2-number\").textContent = compData[15][1];\n    }\n    fill_bars(elem, d1_width, d2_width);\n  }\n}\n\n/**\r\n * Adds listeners for the arrows to change between sprints and races\r\n */\nfunction sprintsListeners() {\n  document.querySelector(\"#bestrh2h\").querySelectorAll(\"i\").forEach(function (elem) {\n    elem.removeEventListener('evento2', change_sprintView);\n    elem.addEventListener(\"click\", change_sprintView);\n  });\n}\n\n/**\r\n * listeners to the race head to head comparison\r\n */\nfunction racePaceListener() {\n  document.querySelector(\"#raceh2h\").querySelectorAll(\".bi-chevron-right\").forEach(function (elem) {\n    elem.removeEventListener('evento5', increase_racePaceView);\n    elem.addEventListener(\"click\", increase_racePaceView);\n  });\n  document.querySelector(\"#raceh2h\").querySelectorAll(\".bi-chevron-left\").forEach(function (elem) {\n    elem.removeEventListener('evento6', decrease_racePaceView);\n    elem.addEventListener(\"click\", decrease_racePaceView);\n  });\n}\n\n/**\r\n * listeners to the qualifying head to head comparison\r\n */\nfunction qualiPaceListener() {\n  document.querySelector(\"#qualih2h\").querySelectorAll(\".bi-chevron-right\").forEach(function (elem) {\n    elem.removeEventListener('evento3', increase_qualiPaceView);\n    elem.addEventListener(\"click\", increase_qualiPaceView);\n  });\n  document.querySelector(\"#qualih2h\").querySelectorAll(\".bi-chevron-left\").forEach(function (elem) {\n    elem.removeEventListener('evento4', decrease_qualiPaceView);\n    elem.addEventListener(\"click\", decrease_qualiPaceView);\n  });\n}\n\n/**\r\n * increases the race comparison showed\r\n */\nfunction increase_racePaceView() {\n  race += 1;\n  race = race % menuLength;\n  toggle_racePace();\n}\n\n/**\r\n * decreases the race comparison showed\r\n */\nfunction decrease_racePaceView() {\n  race -= 1;\n  race = (race + menuLength) % menuLength;\n  toggle_racePace();\n}\n\n/**\r\n * increases the quali comparison showed\r\n */\nfunction increase_qualiPaceView() {\n  quali += 1;\n  quali = quali % menuLength;\n  toggle_qualiPace();\n}\n\n/**\r\n * decreases the quali comparison showed\r\n */\nfunction decrease_qualiPaceView() {\n  quali -= 1;\n  quali = (quali + menuLength) % menuLength;\n  toggle_qualiPace();\n}\n\n/**\r\n * Changes the sprint view\r\n */\nfunction change_sprintView() {\n  sprints = !sprints;\n  toggle_sprints();\n}\n\n/**\r\n * Event listener for the annotatiosn switch\r\n */\ndocument.getElementById(\"annotationsToggle\").addEventListener(\"click\", function () {\n  annotationsToggle = !annotationsToggle;\n  if (typeof driverGraph !== 'undefined' && driverGraph !== null) {\n    driverGraph.options.plugins.annotation.annotations.line1.display = annotationsToggle;\n    driverGraph.options.plugins.annotation.annotations.line2.display = annotationsToggle;\n    driverGraph.options.plugins.annotation.annotations.line3.display = annotationsToggle;\n    driverGraph.options.plugins.annotation.annotations.line4.display = annotationsToggle;\n    driverGraph.update();\n  }\n  if (typeof qualiGraph !== 'undefined' && qualiGraph !== null) {\n    qualiGraph.options.plugins.annotation.annotations.line1.display = annotationsToggle;\n    qualiGraph.options.plugins.annotation.annotations.line2.display = annotationsToggle;\n    qualiGraph.update();\n  }\n});\n\n/**\r\n * hides the comparison\r\n */\nfunction hideComp() {\n  document.querySelector(\".drivers-modal-zone\").innerHTML = \"\";\n  document.querySelector(\"#mainH2h\").classList.add(\"d-none\");\n  document.querySelectorAll(\".modal-team\").forEach(function (elem) {\n    elem.classList.add(\"d-none\");\n  });\n}\n\n/**\r\n * Loads all the drivers into the menus of driver selection\r\n * @param {Object} drivers object with all the driver info\r\n */\nfunction load_drivers_h2h(drivers) {\n  let dest = document.querySelector(\".drivers-modal-zone\");\n  h2hCount = 0;\n  h2hList = [];\n  graphList = [];\n  h2hTeamList = [];\n  graphTeamList = [];\n  dest.innerHTML = \"\";\n  drivers.forEach(function (driver) {\n    let newDiv = document.createElement(\"div\");\n    newDiv.className = \"col modal-driver\";\n    newDiv.dataset.driverid = driver[1];\n    newDiv.dataset.teamid = driver[2];\n    let name = driver[0].split(\" \");\n    let spanName = document.createElement(\"span\");\n    let spanLastName = document.createElement(\"span\");\n    spanLastName.dataset.teamid = driver[2];\n    newDiv.dataset.teamid = driver[2];\n    newDiv.classList.add(_config__WEBPACK_IMPORTED_MODULE_0__.team_dict[driver[2]] + \"-transparent\");\n    (0,_transfers__WEBPACK_IMPORTED_MODULE_2__.format_name)(driver[0], name, spanName, spanLastName);\n    spanLastName.classList.add(\"bold-font\");\n    let h2hBut = document.createElement(\"div\");\n    h2hBut.dataset.driverid = driver[1];\n    h2hBut.dataset.teamid = driver[2];\n    let h2hLabel = document.createElement(\"div\");\n    h2hLabel.innerText = \"H2H\";\n    h2hLabel.className = \"no-pointer pos-relative\";\n    h2hBut.appendChild(h2hLabel);\n    h2hBut.className = \"H2Hradio\";\n    h2hBut.dataset.state = \"unchecked\";\n    h2hBut.addEventListener(\"click\", function () {\n      if (h2hBut.dataset.state === \"unchecked\" && h2hCount < 2) {\n        h2hBut.dataset.state = \"checked\";\n        h2hBut.classList.add(\"activated\");\n        h2hCount += 1;\n        h2hList.push(h2hBut.dataset.driverid);\n        h2hTeamList.push(h2hBut.dataset.teamid);\n      } else if (h2hBut.dataset.state === \"checked\") {\n        h2hBut.dataset.state = \"unchecked\";\n        h2hBut.classList.remove(\"activated\");\n        h2hCount -= 1;\n        let ind = h2hList.indexOf(h2hBut.dataset.driverid);\n        h2hTeamList.splice(ind, 1);\n        h2hList = h2hList.filter(x => x !== h2hBut.dataset.driverid);\n      }\n      let text = document.querySelector(\".H2H-text\").querySelector(\".text-normal\");\n      text.innerText = \"- \" + h2hCount + \"/2 drivers selected\";\n      text.classList.add(\"h2h-highlight\");\n      setTimeout(function () {\n        text.classList.remove(\"h2h-highlight\");\n      }, 400);\n    });\n    let graphBut = document.createElement(\"div\");\n    let graphIcon = document.createElement(\"i\");\n    graphBut.dataset.driverid = driver[1];\n    graphBut.dataset.teamid = driver[2];\n    graphIcon.className = \"bi bi-graph-up no-pointer pos-relative \";\n    graphBut.appendChild(graphIcon);\n    graphBut.className = \"GraphButton\";\n    graphBut.dataset.state = \"unchecked\";\n    graphBut.addEventListener(\"click\", function () {\n      if (graphBut.dataset.state === \"unchecked\") {\n        graphBut.dataset.state = \"checked\";\n        graphBut.classList.add(\"activated\");\n        graphList.push(graphBut.dataset.driverid);\n        graphTeamList.push(graphBut.dataset.teamid);\n        graphCount += 1;\n      } else if (graphBut.dataset.state === \"checked\") {\n        graphBut.dataset.state = \"unchecked\";\n        graphBut.classList.remove(\"activated\");\n        let ind = graphList.indexOf(graphBut.dataset.driverid);\n        graphTeamList.splice(ind, 1);\n        graphList = graphList.filter(x => x !== graphBut.dataset.driverid);\n        graphCount -= 1;\n      }\n      let text = document.querySelector(\".graph-text\").querySelector(\".text-normal\");\n      text.innerText = \"- \" + graphCount + \" drivers selected\";\n      text.classList.add(\"graph-highlight\");\n      setTimeout(function () {\n        text.classList.remove(\"graph-highlight\");\n      }, 400);\n    });\n    let buttons = document.createElement(\"div\");\n    buttons.classList = \"buttons-drivers-modal\";\n    let nameAndSurName = document.createElement(\"div\");\n    nameAndSurName.appendChild(spanName);\n    nameAndSurName.appendChild(spanLastName);\n    buttons.appendChild(h2hBut);\n    buttons.append(graphBut);\n    newDiv.appendChild(nameAndSurName);\n    newDiv.appendChild(buttons);\n    (0,_transfers__WEBPACK_IMPORTED_MODULE_2__.manageColor)(newDiv, spanLastName);\n    dest.appendChild(newDiv);\n  });\n  buttonsListeners();\n}\ndocument.querySelector(\".teams-modal-zone\").querySelectorAll(\".H2Hradio\").forEach(function (h2hBut) {\n  h2hBut.addEventListener(\"click\", function () {\n    if (h2hBut.dataset.state === \"unchecked\" && h2hCount < 2) {\n      h2hBut.dataset.state = \"checked\";\n      h2hBut.classList.add(\"activated\");\n      h2hCount += 1;\n      h2hTeamList.push(h2hBut.dataset.teamid);\n    } else if (h2hBut.dataset.state === \"checked\") {\n      h2hBut.dataset.state = \"unchecked\";\n      h2hBut.classList.remove(\"activated\");\n      h2hCount -= 1;\n      let ind = h2hTeamList.indexOf(h2hBut.dataset.teamid);\n      h2hTeamList.splice(ind, 1);\n    }\n    let text = document.querySelector(\".H2H-text\").querySelector(\".text-normal\");\n    text.innerText = \"- \" + h2hCount + \"/2 teams selected\";\n    text.classList.add(\"h2h-highlight\");\n    setTimeout(function () {\n      text.classList.remove(\"h2h-highlight\");\n    }, 400);\n  });\n});\ndocument.querySelector(\".teams-modal-zone\").querySelectorAll(\".GraphButton\").forEach(function (graphBut) {\n  graphBut.addEventListener(\"click\", function () {\n    if (graphBut.dataset.state === \"unchecked\") {\n      graphBut.dataset.state = \"checked\";\n      graphBut.classList.add(\"activated\");\n      graphTeamList.push(graphBut.dataset.teamid);\n      graphCount += 1;\n    } else if (graphBut.dataset.state === \"checked\") {\n      graphBut.dataset.state = \"unchecked\";\n      graphBut.classList.remove(\"activated\");\n      let ind = graphTeamList.indexOf(graphBut.dataset.teamid);\n      graphTeamList.splice(ind, 1);\n      graphCount -= 1;\n    }\n    let text = document.querySelector(\".graph-text\").querySelector(\".text-normal\");\n    text.innerText = \"- \" + graphCount + \" teams selected\";\n    text.classList.add(\"graph-highlight\");\n    setTimeout(function () {\n      text.classList.remove(\"graph-highlight\");\n    }, 400);\n  });\n});\ndocument.querySelector(\"#driverspillmodal\").addEventListener(\"click\", function () {\n  document.querySelector(\".drivers-modal-section\").classList.remove(\"d-none\");\n  document.querySelector(\".teams-modal-section\").classList.add(\"d-none\");\n  mode = \"driver\";\n  resetH2H();\n});\ndocument.querySelector(\"#teamspillmodal\").addEventListener(\"click\", function () {\n  document.querySelector(\".drivers-modal-section\").classList.add(\"d-none\");\n  document.querySelector(\".teams-modal-section\").classList.remove(\"d-none\");\n  mode = \"team\";\n  resetH2H();\n});\nfunction buttonsListeners() {\n  document.querySelectorAll(\"H2HRadio\").forEach(function (button) {\n    button.addEventListener(\"click\", function () {});\n  });\n}\ndocument.querySelector(\"#confirmComparison\").addEventListener(\"click\", function () {\n  H2HReady();\n  if (h2hCount === 2) {\n    let drivers = document.querySelectorAll(\".H2Hradio.activated\");\n    let d1;\n    let d2;\n    document.querySelectorAll(\".H2Hradio.activated\").forEach(function (elem) {\n      if (mode === \"driver\") {\n        if (elem.dataset.driverid === h2hList[0]) {\n          d1 = elem;\n        } else if (elem.dataset.driverid === h2hList[1]) {\n          d2 = elem;\n        }\n      } else if (mode === \"team\") {\n        if (elem.dataset.teamid === h2hTeamList[0]) {\n          d1 = elem;\n        } else if (elem.dataset.teamid === h2hTeamList[1]) {\n          d2 = elem;\n        }\n      }\n    });\n    nameTitleD1(d1.parentElement.parentElement);\n    nameTitleD2(d2.parentElement.parentElement);\n  }\n  document.querySelector(\"#compConfigContent\").innerText = document.querySelector(\"#yearButtonH2H\").textContent;\n  if (mode === \"driver\") {\n    document.querySelector(\"#qualiForm\").classList.remove(\"d-none\");\n    document.querySelector(\"#raceForm\").classList.remove(\"d-none\");\n    document.querySelector(\"#gapToWinner\").classList.remove(\"d-none\");\n    document.querySelector(\"#gapToPole\").classList.remove(\"d-none\");\n    document.querySelector(\"#raceForm\").click();\n    race = 0;\n    quali = 0;\n    menuLength = 4;\n    document.getElementById(\"qualih2h\").querySelector(\".only-name\").innerText = \"QUALIFYING\";\n    document.getElementById(\"raceh2h\").querySelector(\".only-name\").innerText = \"RACE\";\n    document.getElementById(\"raceh2h\").querySelector(\".bar-space\").classList.remove(\"d-none\");\n    document.getElementById(\"raceh2h\").querySelector(\".avg-comparison\").classList.add(\"d-none\");\n    document.getElementById(\"qualih2h\").querySelector(\".bar-space\").classList.remove(\"d-none\");\n    document.getElementById(\"qualih2h\").querySelector(\".avg-comparison\").classList.add(\"d-none\");\n  } else if (mode === \"team\") {\n    document.querySelector(\"#qualiForm\").classList.add(\"d-none\");\n    document.querySelector(\"#raceForm\").classList.add(\"d-none\");\n    document.querySelector(\"#gapToWinner\").classList.add(\"d-none\");\n    document.querySelector(\"#gapToPole\").classList.add(\"d-none\");\n    document.querySelector(\"#pointsProgression\").click();\n    menuLength = 2;\n    race = 0;\n    quali = 0;\n    document.getElementById(\"qualih2h\").querySelector(\".only-name\").innerText = \"QUALIFYING\";\n    document.getElementById(\"raceh2h\").querySelector(\".only-name\").innerText = \"RACE\";\n    document.getElementById(\"raceh2h\").querySelector(\".bar-space\").classList.remove(\"d-none\");\n    document.getElementById(\"raceh2h\").querySelector(\".avg-comparison\").classList.add(\"d-none\");\n    document.getElementById(\"qualih2h\").querySelector(\".bar-space\").classList.remove(\"d-none\");\n    document.getElementById(\"qualih2h\").querySelector(\".avg-comparison\").classList.add(\"d-none\");\n  }\n});\ndocument.querySelector(\"#clearAll\").addEventListener(\"click\", function () {\n  resetH2H();\n});\nfunction resetH2H() {\n  h2hCount = 0;\n  graphCount = 0;\n  h2hList = [];\n  graphList = [];\n  h2hTeamList = [];\n  graphTeamList = [];\n  let h2htext = document.querySelector(\".H2H-text\").querySelector(\".text-normal\");\n  let graphtext = document.querySelector(\".graph-text\").querySelector(\".text-normal\");\n  if (mode === \"driver\") {\n    h2htext.innerText = \"- \" + h2hCount + \"/2 drivers selected\";\n    graphtext.innerText = \"- \" + graphCount + \" drivers selected\";\n  } else if (mode === \"team\") {\n    h2htext.innerText = \"- \" + h2hCount + \"/2 teams selected\";\n    graphtext.innerText = \"- \" + graphCount + \" teams selected\";\n  }\n  document.querySelector(\".teams-modal-zone\").querySelectorAll(\".H2Hradio\").forEach(function (elem) {\n    elem.classList = \"H2Hradio\";\n    elem.dataset.state = \"unchecked\";\n  });\n  document.querySelector(\".teams-modal-zone\").querySelectorAll(\".GraphButton\").forEach(function (elem) {\n    elem.classList = \"GraphButton\";\n    elem.dataset.state = \"unchecked\";\n  });\n  document.querySelector(\".drivers-modal-zone\").querySelectorAll(\".H2Hradio\").forEach(function (elem) {\n    elem.classList = \"H2Hradio\";\n    elem.dataset.state = \"unchecked\";\n  });\n  document.querySelector(\".drivers-modal-zone\").querySelectorAll(\".GraphButton\").forEach(function (elem) {\n    elem.classList = \"GraphButton\";\n    elem.dataset.state = \"unchecked\";\n  });\n}\n\n/**\r\n * Event listeners for the 3 types of graphs\r\n */\ndocument.querySelector(\"#pointsProgression\").addEventListener(\"click\", function (elem) {\n  document.querySelector(\"#graphTypeButton\").innerText = \"Points progression\";\n  document.querySelector(\"#qualiGraph\").classList.add(\"d-none\");\n  document.querySelector(\"#driverGraph\").classList.add(\"d-none\");\n  document.querySelector(\"#progressionGraph\").classList.remove(\"d-none\");\n  document.querySelector(\"#gapToWinnerGraph\").classList.add(\"d-none\");\n  document.querySelector(\"#gapToPoleGraph\").classList.add(\"d-none\");\n});\ndocument.querySelector(\"#raceForm\").addEventListener(\"click\", function (elem) {\n  document.querySelector(\"#graphTypeButton\").innerText = \"Race form\";\n  document.querySelector(\"#qualiGraph\").classList.add(\"d-none\");\n  document.querySelector(\"#driverGraph\").classList.remove(\"d-none\");\n  document.querySelector(\"#progressionGraph\").classList.add(\"d-none\");\n  document.querySelector(\"#gapToWinnerGraph\").classList.add(\"d-none\");\n  document.querySelector(\"#gapToPoleGraph\").classList.add(\"d-none\");\n});\ndocument.querySelector(\"#qualiForm\").addEventListener(\"click\", function (elem) {\n  document.querySelector(\"#graphTypeButton\").innerText = \"Qualifying form\";\n  document.querySelector(\"#qualiGraph\").classList.remove(\"d-none\");\n  document.querySelector(\"#driverGraph\").classList.add(\"d-none\");\n  document.querySelector(\"#progressionGraph\").classList.add(\"d-none\");\n  document.querySelector(\"#gapToWinnerGraph\").classList.add(\"d-none\");\n  document.querySelector(\"#gapToPoleGraph\").classList.add(\"d-none\");\n});\ndocument.querySelector(\"#gapToWinner\").addEventListener(\"click\", function (elem) {\n  document.querySelector(\"#graphTypeButton\").innerText = \"Gap to winner\";\n  document.querySelector(\"#qualiGraph\").classList.add(\"d-none\");\n  document.querySelector(\"#driverGraph\").classList.add(\"d-none\");\n  document.querySelector(\"#progressionGraph\").classList.add(\"d-none\");\n  document.querySelector(\"#gapToWinnerGraph\").classList.remove(\"d-none\");\n  document.querySelector(\"#gapToPoleGraph\").classList.add(\"d-none\");\n});\ndocument.querySelector(\"#gapToPole\").addEventListener(\"click\", function (elem) {\n  document.querySelector(\"#graphTypeButton\").innerText = \"Gap to pole\";\n  document.querySelector(\"#qualiGraph\").classList.add(\"d-none\");\n  document.querySelector(\"#driverGraph\").classList.add(\"d-none\");\n  document.querySelector(\"#progressionGraph\").classList.add(\"d-none\");\n  document.querySelector(\"#gapToWinnerGraph\").classList.add(\"d-none\");\n  document.querySelector(\"#gapToPoleGraph\").classList.remove(\"d-none\");\n});\n\n/**\r\n * Updates the driver 1 name card with the d1 information stored in aDriver1\r\n * @param {a} aDriver1 clickable element of the driver 1 dropdown\r\n */\nfunction nameTitleD1(aDriver1) {\n  driver1Sel = aDriver1;\n  if (mode === \"driver\") {\n    document.querySelector(\".driver1-first\").classList.remove(\"d-none\");\n    document.querySelector(\".driver1-second\").classList.remove(\"d-none\");\n    document.querySelector(\".team1\").classList.add(\"d-none\");\n    document.querySelector(\".driver1-first\").textContent = driver1Sel.firstChild.children[0].innerText;\n    document.querySelector(\".driver1-second\").textContent = driver1Sel.firstChild.children[1].innerText;\n    document.querySelector(\".driver1-second\").dataset.teamid = driver1Sel.firstChild.children[1].dataset.teamid;\n    d1_team = driver1Sel.firstChild.children[1].dataset.teamid;\n    document.querySelector(\".driver1-second\").className = \"driver1-second bold-font\";\n    (0,_transfers__WEBPACK_IMPORTED_MODULE_2__.manageColor)(document.querySelector(\".driver1-second\"), document.querySelector(\".driver1-second\"));\n  } else if (mode === \"team\") {\n    document.querySelector(\".driver1-first\").classList.add(\"d-none\");\n    document.querySelector(\".driver1-second\").classList.add(\"d-none\");\n    document.querySelector(\".team1\").classList.remove(\"d-none\");\n    document.querySelector(\".team1\").textContent = driver1Sel.children[0].children[1].innerText;\n    document.querySelector(\".team1\").dataset.teamid = driver1Sel.dataset.teamid;\n  }\n}\n\n/**\r\n * Updates the driver 2 name card with the d1 information stored in aDriver2\r\n * @param {a} aDriver2 clickable element of the driver 2 dropdown\r\n */\nfunction nameTitleD2(aDriver2) {\n  driver2Sel = aDriver2;\n  if (mode === \"driver\") {\n    document.querySelector(\".driver2-first\").classList.remove(\"d-none\");\n    document.querySelector(\".driver2-second\").classList.remove(\"d-none\");\n    document.querySelector(\".team2\").classList.add(\"d-none\");\n    document.querySelector(\".driver2-first\").textContent = driver2Sel.firstChild.children[0].innerText;\n    document.querySelector(\".driver2-second\").textContent = driver2Sel.firstChild.children[1].innerText;\n    document.querySelector(\".driver2-second\").dataset.teamid = driver2Sel.firstChild.children[1].dataset.teamid;\n    document.querySelector(\".driver2-second\").className = \"driver2-second bold-font\";\n    d2_team = driver2Sel.firstChild.children[1].dataset.teamid;\n    (0,_transfers__WEBPACK_IMPORTED_MODULE_2__.manageColor)(document.querySelector(\".driver2-second\"), document.querySelector(\".driver2-second\"));\n  } else if (mode === \"team\") {\n    document.querySelector(\".driver2-first\").classList.add(\"d-none\");\n    document.querySelector(\".driver2-second\").classList.add(\"d-none\");\n    document.querySelector(\".team2\").classList.remove(\"d-none\");\n    document.querySelector(\".team2\").textContent = driver2Sel.children[0].children[1].innerText;\n    document.querySelector(\".team2\").dataset.teamid = driver2Sel.dataset.teamid;\n  }\n}\n\n/**\r\n * Sends the message that the H2H is properly configured to fetch results\r\n */\nfunction H2HReady() {\n  document.querySelector(\"#mainH2h\").classList.remove(\"d-none\");\n  let list1, list2;\n  if (mode === \"driver\") {\n    list1 = h2hList;\n    list2 = graphList;\n  } else if (mode === \"team\") {\n    list1 = h2hTeamList;\n    list2 = graphTeamList;\n  }\n  let data = {\n    h2h: h2hCount === 2 ? list1 : -1,\n    graph: list2,\n    year: document.querySelector(\"#yearButtonH2H\").textContent,\n    mode: mode\n  };\n  manageH2hState();\n  const message = {\n    command: 'configuredH2H',\n    data: data\n  };\n  const command = _renderer__WEBPACK_IMPORTED_MODULE_1__.factory.createCommand(message);\n  command.execute();\n}\nfunction manageH2hState() {\n  if (h2hCount === 2) {\n    document.querySelector(\".blocking-h2h\").classList.add(\"d-none\");\n  } else {\n    document.querySelector(\".blocking-h2h\").classList.remove(\"d-none\");\n    document.querySelector(\".driver1-name\").className = \"driver1-name\";\n    document.querySelector(\".driver2-name\").className = \"driver2-name\";\n    document.querySelector(\".driver1-first\").textContent = \"\";\n    document.querySelector(\".driver2-first\").textContent = \"\";\n    document.querySelector(\".driver1-second\").textContent = \"\";\n    document.querySelector(\".driver2-second\").textContent = \"\";\n    document.querySelectorAll(\".driver1-bar\").forEach(function (bar) {\n      bar.className = \"driver1-bar\";\n      bar.style.width = \"0px\";\n    });\n    document.querySelectorAll(\".driver2-bar\").forEach(function (bar) {\n      bar.className = \"driver2-bar\";\n      bar.style.width = \"0px\";\n    });\n    document.querySelectorAll(\".driver1-number\").forEach(function (num) {\n      num.innerText = \"\";\n    });\n    document.querySelectorAll(\".driver2-number\").forEach(function (num) {\n      num.innerText = \"\";\n    });\n  }\n}\nfunction load_labels_initialize_graphs(data) {\n  var labels = [];\n  data[0].forEach(function (elem) {\n    labels.push(_config__WEBPACK_IMPORTED_MODULE_0__.races_names[elem[1]]);\n  });\n  if (typeof driverGraph !== 'undefined' && driverGraph !== null) {\n    driverGraph.destroy();\n  }\n  if (typeof pointsGraph !== 'undefined' && pointsGraph !== null) {\n    pointsGraph.destroy();\n  }\n  if (typeof qualiGraph !== 'undefined' && qualiGraph !== null) {\n    qualiGraph.destroy();\n  }\n  if (typeof gapWinnerGraph !== 'undefined' && gapWinnerGraph !== null) {\n    gapWinnerGraph.destroy();\n  }\n  if (typeof gapPoleGraph !== 'undefined' && gapPoleGraph !== null) {\n    gapPoleGraph.destroy();\n  }\n  createPointsChart(labels);\n  if (mode === \"driver\") {\n    let max = 20;\n    let q2_line = 15;\n    if (_renderer__WEBPACK_IMPORTED_MODULE_1__.game_version === 2024 && _renderer__WEBPACK_IMPORTED_MODULE_1__.custom_team) {\n      max = 22;\n      q2_line = 16;\n    } else {\n      max = 20;\n    }\n    createRaceChart(labels, max);\n    createQualiChart(labels, max, q2_line);\n    createGapCharts(labels);\n    load_graphs_data(data);\n  } else if (mode === \"team\") {\n    load_teams_points_graph(data);\n  }\n}\nfunction load_teams_points_graph(data) {\n  data.forEach(function (team, ind) {\n    if (ind !== 0 && ind !== data.length - 1) {\n      let teamPoints = [];\n      team.forEach(function (driv, index) {\n        let points = get_one_driver_points_format(driv, data);\n        if (teamPoints.length === 0) {\n          teamPoints = [...points];\n        } else {\n          teamPoints = teamPoints.map((point, index) => point + points[index]);\n        }\n      });\n      let team_color = colors_dict[graphTeamList[ind - 1] + \"0\"];\n      pointsGraph.data.datasets.push({\n        label: _config__WEBPACK_IMPORTED_MODULE_0__.combined_dict[graphTeamList[ind - 1]],\n        data: teamPoints,\n        borderColor: team_color,\n        pointBackgroundColor: team_color,\n        borderWidth: 2,\n        pointRadius: 0,\n        fill: false,\n        pointHitRadius: 7,\n        datalabels: {\n          color: function () {\n            if (_config__WEBPACK_IMPORTED_MODULE_0__.lightColors.indexOf(team_color) !== -1) {\n              return \"#272727\";\n            } else {\n              return '#eeeef1';\n            }\n          },\n          backgroundColor: team_color,\n          display: function (context) {\n            if (context.dataIndex === findLastNonNaNIndex(context.dataset.data)) {\n              return true;\n            } else {\n              return false;\n            }\n          },\n          borderRadius: 5,\n          font: {\n            family: \"Formula1Bold\"\n          }\n        }\n      });\n    }\n  });\n  pointsGraph.update();\n}\nfunction get_one_driver_points_format(driver, data) {\n  let d1_races = [];\n  let d1_points_provisional = [];\n  let d1_points = [0];\n  driver.slice(3).forEach(function (elem) {\n    d1_races.push(elem[0]);\n    let ptsThatRace = elem[2];\n    if (ptsThatRace === -1) {\n      ptsThatRace = 0;\n    }\n    if (elem.length === 10) {\n      d1_points_provisional.push(ptsThatRace + elem[7]);\n    } else {\n      d1_points_provisional.push(ptsThatRace);\n    }\n  });\n  data[0].forEach(function (elem) {\n    let index1 = d1_races.indexOf(elem[0]);\n    if (index1 !== -1) {\n      d1_points.push(d1_points_provisional[index1] + d1_points[d1_points.length - 1]);\n    } else {\n      if (data[data.length - 1].indexOf(elem[0]) !== -1) {\n        d1_points.push(d1_points[d1_points.length - 1]);\n      } else {\n        d1_points.push(NaN);\n      }\n    }\n  });\n  d1_points.shift();\n  return d1_points;\n}\nfunction load_graphs_data(data) {\n  let max_gapPole = 0;\n  let max_gapWinner = 0;\n  data.forEach(function (driv, index) {\n    if (index !== 0 && index !== data.length - 1) {\n      let d1_res = [];\n      let d1_races = [];\n      let d1_provisonal = [];\n      let d1_points_provisional = [];\n      let d1_points = [0];\n      let d1_qualis = [];\n      let d1_provisonal_q = [];\n      let d1_provisional_gapW = [];\n      let d1_provisional_gapP = [];\n      let d1_gapWinner = [];\n      let d1_gapPole = [];\n      let d1_backgroundColors = [];\n      let d1_backgroundColorsPole = [];\n      data[index].slice(3).forEach(function (elem) {\n        d1_races.push(elem[0]);\n        d1_provisonal.push(elem[1]);\n        d1_provisonal_q.push(elem[4]);\n        if (elem[5].slice(-1) !== \"L\") {\n          d1_provisional_gapW.push(elem[5].slice(1, -1));\n        } else {\n          d1_provisional_gapW.push(elem[5]);\n        }\n        if (elem[6] !== \"NR\") {\n          d1_provisional_gapP.push(elem[6].slice(1, -1));\n        } else {\n          d1_provisional_gapP.push(\"NR\");\n        }\n        let ptsThatRace = elem[2];\n        if (ptsThatRace === -1) {\n          ptsThatRace = 0;\n        }\n        if (elem.length === 10) {\n          d1_points_provisional.push(ptsThatRace + elem[7]);\n        } else {\n          d1_points_provisional.push(ptsThatRace);\n        }\n      });\n      let d1Id = graphList[index - 1];\n      let d1pos = graphList.indexOf(d1Id);\n      let d1_color;\n      if (d1pos === graphTeamList.indexOf(driv[1].toString())) {\n        d1_color = colors_dict[data[index][1] + \"0\"];\n      } else {\n        d1_color = colors_dict[data[index][1] + \"1\"];\n      }\n      data[0].forEach(function (elem) {\n        let index1 = d1_races.indexOf(elem[0]);\n        if (index1 !== -1) {\n          if (d1_provisonal[index1] === -1) {\n            d1_res.push(NaN);\n            d1_gapWinner.push(NaN);\n            d1_backgroundColors.push(d1_color + \"50\");\n          } else {\n            d1_res.push(d1_provisonal[index1]);\n            if (d1_provisional_gapW[index1].slice(-1) === \"L\") {\n              d1_gapWinner.push(NaN);\n              d1_backgroundColors.push(d1_color + \"76\");\n            } else {\n              d1_gapWinner.push(d1_provisional_gapW[index1]);\n              if (parseFloat(d1_provisional_gapW[index1]) > max_gapWinner) {\n                max_gapWinner = parseFloat(d1_provisional_gapW[index1]);\n              }\n              d1_backgroundColors.push(d1_color);\n            }\n          }\n          d1_points.push(d1_points_provisional[index1] + d1_points[d1_points.length - 1]);\n          d1_qualis.push(d1_provisonal_q[index1]);\n          if (d1_provisional_gapP[index1] === \"NR\") {\n            d1_gapPole.push(NaN);\n            d1_backgroundColorsPole.push(d1_color + \"60\");\n          } else {\n            d1_gapPole.push(d1_provisional_gapP[index1]);\n            if (parseFloat(d1_provisional_gapP[index1]) > max_gapPole) {\n              max_gapPole = parseFloat(d1_provisional_gapP[index1]);\n            }\n            d1_backgroundColorsPole.push(d1_color);\n          }\n        } else {\n          d1_res.push(NaN);\n          d1_qualis.push(NaN);\n          if (data[data.length - 1].indexOf(elem[0]) !== -1) {\n            d1_points.push(d1_points[d1_points.length - 1]);\n          } else {\n            d1_points.push(NaN);\n          }\n        }\n      });\n      d1_points.shift();\n      d1_gapWinner = d1_gapWinner.map(function (elem) {\n        if (isNaN(elem)) {\n          return max_gapWinner / 2;\n        } else {\n          return elem;\n        }\n      });\n      d1_gapPole = d1_gapPole.map(function (elem) {\n        if (isNaN(elem)) {\n          return max_gapPole / 2;\n        } else {\n          return elem;\n        }\n      });\n      driverGraph.data.datasets.push({\n        label: driv[0],\n        data: d1_res,\n        borderColor: d1_color,\n        pointBackgroundColor: d1_color,\n        borderWidth: 2,\n        fill: false,\n        pointHitRadius: 7\n      });\n      qualiGraph.data.datasets.push({\n        label: driv[0],\n        data: d1_qualis,\n        borderColor: d1_color,\n        pointBackgroundColor: d1_color,\n        borderWidth: 2,\n        fill: false,\n        pointHitRadius: 7\n      });\n      pointsGraph.data.datasets.push({\n        label: driv[0],\n        data: d1_points,\n        borderColor: d1_color,\n        pointBackgroundColor: d1_color,\n        borderWidth: 2,\n        pointRadius: 0,\n        fill: false,\n        pointHitRadius: 7,\n        datalabels: {\n          color: function () {\n            if (_config__WEBPACK_IMPORTED_MODULE_0__.lightColors.indexOf(d1_color) !== -1) {\n              return \"#272727\";\n            } else {\n              return '#eeeef1';\n            }\n          },\n          backgroundColor: d1_color,\n          display: function (context) {\n            if (context.dataIndex === findLastNonNaNIndex(context.dataset.data)) {\n              return true;\n            } else {\n              return false;\n            }\n          },\n          borderRadius: 5,\n          font: {\n            family: \"Formula1Bold\"\n          }\n        }\n      });\n      gapWinnerGraph.options.scales.y.max = max_gapWinner;\n      gapPoleGraph.options.scales.y.max = max_gapPole;\n      gapWinnerGraph.data.datasets.push({\n        label: driv[0],\n        data: d1_gapWinner,\n        borderColor: d1_color,\n        pointBackgroundColor: d1_color,\n        backgroundColor: d1_backgroundColors,\n        borderWidth: 1,\n        fill: true,\n        pointHitRadius: 7\n      });\n      gapPoleGraph.data.datasets.push({\n        label: driv[0],\n        data: d1_gapPole,\n        borderColor: d1_color,\n        pointBackgroundColor: d1_color,\n        backgroundColor: d1_backgroundColorsPole,\n        borderWidth: 1,\n        fill: true,\n        pointHitRadius: 7\n      });\n    }\n  });\n\n  /*\r\n  \r\n  let d2_color;\r\n    */\n  driverGraph.update();\n  qualiGraph.update();\n  pointsGraph.update();\n  gapWinnerGraph.update();\n  gapPoleGraph.update();\n}\n\n/**\r\n * Finds tha last non NaN element in an array\r\n * @param {Array} arr array in which the function will look\r\n * @returns the indef on which is the last non NaN or -1 if there is none\r\n */\nfunction findLastNonNaNIndex(arr) {\n  for (let i = arr.length - 1; i >= 0; i--) {\n    if (!isNaN(arr[i])) {\n      return i;\n    }\n  }\n  return -1; // Devuelve -1 si todos los valores son NaN\n}\nfunction updateMaxYAxis(newMax) {\n  driverGraph.options.scales.y.max = newMax;\n  qualiGraph.options.scales.y.max = newMax;\n  driverGraph.update();\n  qualiGraph.update();\n}\n\n/**\r\n * Creates the head to head race chart\r\n * @param {Array} labelsArray array with all the labels for the races\r\n */\nfunction createRaceChart(labelsArray, max) {\n  const dataD = {\n    labels: labelsArray\n  };\n  driverGraph = new Chart(document.getElementById('driverGraph'), {\n    type: 'line',\n    data: dataD,\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      interaction: {\n        mode: 'index'\n      },\n      layout: {\n        padding: {\n          top: 10,\n          right: 25,\n          boottom: 20,\n          left: 10\n        }\n      },\n      scales: {\n        x: {\n          grid: {\n            color: '#292929'\n          },\n          ticks: {\n            color: \"#dedde6\",\n            font: {\n              family: \"Formula1Bold\"\n            }\n          }\n        },\n        y: {\n          reverse: true,\n          min: 1,\n          max: max,\n          grid: {\n            color: '#292929'\n          },\n          ticks: {\n            color: \"#dedde6\",\n            font: {\n              family: \"Formula1Bold\"\n            }\n          }\n        }\n      },\n      plugins: {\n        datalabels: {\n          display: false\n        },\n        annotation: {\n          annotations: {\n            line1: {\n              type: 'line',\n              display: annotationsToggle,\n              yMin: 1,\n              yMax: 1,\n              borderColor: '#FDE06B',\n              borderWidth: 1\n            },\n            line2: {\n              type: 'line',\n              display: annotationsToggle,\n              yMin: 2,\n              yMax: 2,\n              borderColor: '#AEB2B8',\n              borderWidth: 1\n            },\n            line3: {\n              type: 'line',\n              display: annotationsToggle,\n              yMin: 3,\n              yMax: 3,\n              borderColor: '#d7985a',\n              borderWidth: 1\n            },\n            line4: {\n              type: 'line',\n              display: annotationsToggle,\n              yMin: 10,\n              yMax: 10,\n              borderColor: '#dedde6',\n              borderWidth: 1\n            }\n          }\n        },\n        legend: {\n          labels: {\n            boxHeight: 2,\n            boxWidth: 25,\n            color: \"#dedde6\",\n            font: {\n              family: \"Formula1\"\n            }\n          }\n        },\n        tooltip: {\n          titleFont: {\n            family: 'Formula1Bold',\n            size: 16\n          },\n          bodyFont: {\n            family: 'Formula1',\n            size: 14\n          }\n        }\n      }\n    }\n  });\n}\n\n/**\r\n * Creates the head to head qualifying chart\r\n * @param {Array} labelsArray array with all the labels for the races\r\n */\nfunction createQualiChart(labelsArray, max, q2_line) {\n  const dataD = {\n    labels: labelsArray\n  };\n  qualiGraph = new Chart(document.getElementById('qualiGraph'), {\n    type: 'line',\n    data: dataD,\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      interaction: {\n        mode: 'index'\n      },\n      layout: {\n        padding: {\n          top: 10,\n          right: 25,\n          boottom: 20,\n          left: 10\n        }\n      },\n      scales: {\n        x: {\n          grid: {\n            color: '#292929'\n          },\n          ticks: {\n            color: \"#dedde6\",\n            font: {\n              family: \"Formula1Bold\"\n            }\n          }\n        },\n        y: {\n          reverse: true,\n          min: 1,\n          max: max,\n          grid: {\n            color: '#292929'\n          },\n          ticks: {\n            color: \"#dedde6\",\n            font: {\n              family: \"Formula1Bold\"\n            }\n          }\n        }\n      },\n      plugins: {\n        datalabels: {\n          display: false\n        },\n        annotation: {\n          annotations: {\n            line1: {\n              type: 'line',\n              display: annotationsToggle,\n              yMin: q2_line,\n              yMax: q2_line,\n              borderColor: 'red',\n              borderWidth: 1,\n              label: {\n                display: true,\n                color: \"white\",\n                backgroundColor: \"red\",\n                content: 'Q2',\n                position: 'start',\n                font: {\n                  family: \"Formula1Bold\",\n                  size: 12\n                }\n              }\n            },\n            line2: {\n              type: 'line',\n              display: annotationsToggle,\n              yMin: 10,\n              yMax: 10,\n              borderColor: 'red',\n              borderWidth: 1,\n              label: {\n                color: \"white\",\n                display: true,\n                backgroundColor: \"red\",\n                content: 'Q3',\n                position: 'start',\n                font: {\n                  family: \"Formula1Bold\",\n                  size: 12\n                }\n              }\n            }\n          }\n        },\n        legend: {\n          labels: {\n            boxHeight: 2,\n            boxWidth: 25,\n            color: \"#dedde6\",\n            font: {\n              family: \"Formula1\"\n            }\n          }\n        },\n        tooltip: {\n          titleFont: {\n            family: 'Formula1Bold',\n            size: 16\n          },\n          bodyFont: {\n            family: 'Formula1',\n            size: 14\n          }\n        }\n      }\n    }\n  });\n}\n\n/**\r\n * Creates the head to head qualifying chart\r\n * @param {Array} labelsArray array with all the labels for the races\r\n */\nfunction createPointsChart(labelsArray) {\n  const dataD = {\n    labels: labelsArray\n  };\n  pointsGraph = new Chart(document.getElementById('progressionGraph'), {\n    type: 'line',\n    data: dataD,\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      interaction: {\n        mode: 'index'\n      },\n      layout: {\n        padding: {\n          top: 10,\n          right: 25,\n          boottom: 20,\n          left: 10\n        }\n      },\n      scales: {\n        x: {\n          grid: {\n            color: '#292929'\n          },\n          ticks: {\n            color: \"#dedde6\",\n            font: {\n              family: \"Formula1Bold\"\n            }\n          }\n        },\n        y: {\n          grid: {\n            color: '#292929'\n          },\n          ticks: {\n            color: \"#dedde6\",\n            font: {\n              family: \"Formula1Bold\"\n            }\n          }\n        }\n      },\n      plugins: {\n        legend: {\n          labels: {\n            boxHeight: 2,\n            boxWidth: 25,\n            color: \"#dedde6\",\n            font: {\n              family: \"Formula1\"\n            }\n          }\n        },\n        tooltip: {\n          titleFont: {\n            family: 'Formula1Bold',\n            size: 16\n          },\n          bodyFont: {\n            family: 'Formula1',\n            size: 14\n          }\n        }\n      }\n    }\n  });\n}\nfunction createGapCharts(labelsArray, maxGapWinner, maxGapPole) {\n  const dataD1 = {\n    labels: labelsArray\n  };\n  const dataD2 = {\n    labels: labelsArray\n  };\n  let commonOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    interaction: {\n      mode: 'index'\n    },\n    scales: {\n      x: {\n        grid: {\n          color: '#292929'\n        },\n        ticks: {\n          color: \"#dedde6\",\n          font: {\n            family: \"Formula1Bold\"\n          }\n        }\n      },\n      y: {\n        min: 0,\n        grid: {\n          color: '#292929'\n        },\n        ticks: {\n          color: \"#dedde6\",\n          font: {\n            family: \"Formula1Bold\"\n          }\n        }\n      }\n    },\n    plugins: {\n      datalabels: {\n        display: false\n      },\n      legend: {\n        labels: {\n          boxHeight: 2,\n          boxWidth: 25,\n          color: \"#dedde6\",\n          font: {\n            family: \"Formula1\"\n          }\n        }\n      },\n      tooltip: {\n        titleFont: {\n          family: 'Formula1Bold',\n          size: 16\n        },\n        bodyFont: {\n          family: 'Formula1',\n          size: 14\n        },\n        callbacks: {\n          label: function (tooltipItem) {\n            let dataset = tooltipItem.dataset; // Acceder al dataset actual\n            let index = tooltipItem.dataIndex; // Obtener el índice del dato\n            let color = dataset.backgroundColor[index]; // Obtener el color de fondo del dato actual\n            let result;\n            if (color.endsWith(\"50\")) {\n              result = 'DNF';\n            } else if (color.endsWith(\"60\")) {\n              result = \"Not representative\";\n            } else if (color.endsWith(\"76\")) {\n              result = \"Lapped\";\n            } else {\n              result = `${tooltipItem.raw}s`;\n            }\n\n            // Mostrar el nombre del piloto y el resultado (valor o DNF)\n            return `${dataset.label}: ${result}`;\n          }\n        }\n      }\n    },\n    options: {\n      layout: {\n        padding: {\n          top: 10,\n          right: 25,\n          boottom: 20,\n          left: 10\n        }\n      }\n    }\n  };\n  let gapWinnerOptions = {\n    ...commonOptions,\n    scales: {\n      ...commonOptions.scales,\n      y: {\n        ...commonOptions.scales.y,\n        max: maxGapWinner\n      }\n    },\n    plugins: {\n      ...commonOptions.plugins\n    }\n  };\n  gapWinnerGraph = new Chart(document.getElementById('gapToWinnerGraph'), {\n    type: 'bar',\n    data: dataD1,\n    options: gapWinnerOptions\n  });\n  let gapPoleOptions = {\n    ...commonOptions,\n    scales: {\n      ...commonOptions.scales,\n      y: {\n        ...commonOptions.scales.y,\n        max: 20\n      }\n    },\n    plugins: {\n      ...commonOptions.plugins\n    }\n  };\n  gapPoleGraph = new Chart(document.getElementById('gapToPoleGraph'), {\n    type: 'bar',\n    data: dataD2,\n    options: gapPoleOptions\n  });\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/frontend/head2head.js?");

/***/ }),

/***/ "./src/js/frontend/performance.js":
/*!****************************************!*\
  !*** ./src/js/frontend/performance.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   gather_engines_data: () => (/* binding */ gather_engines_data),\n/* harmony export */   load_attributes: () => (/* binding */ load_attributes),\n/* harmony export */   load_car_attributes: () => (/* binding */ load_car_attributes),\n/* harmony export */   load_cars: () => (/* binding */ load_cars),\n/* harmony export */   load_custom_engines: () => (/* binding */ load_custom_engines),\n/* harmony export */   load_one_part: () => (/* binding */ load_one_part),\n/* harmony export */   load_parts_list: () => (/* binding */ load_parts_list),\n/* harmony export */   load_parts_stats: () => (/* binding */ load_parts_stats),\n/* harmony export */   load_performance: () => (/* binding */ load_performance),\n/* harmony export */   load_performance_graph: () => (/* binding */ load_performance_graph),\n/* harmony export */   manage_engineStats: () => (/* binding */ manage_engineStats),\n/* harmony export */   order_by: () => (/* binding */ order_by),\n/* harmony export */   teamSelected: () => (/* binding */ teamSelected),\n/* harmony export */   teamsEngine: () => (/* binding */ teamsEngine),\n/* harmony export */   update_max_design: () => (/* binding */ update_max_design),\n/* harmony export */   viewingGraph: () => (/* binding */ viewingGraph)\n/* harmony export */ });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"./src/js/frontend/config.js\");\n/* harmony import */ var _head2head__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./head2head */ \"./src/js/frontend/head2head.js\");\n/* harmony import */ var _renderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./renderer */ \"./src/js/frontend/renderer.js\");\n\n\n\n\nconst teamsPill = document.getElementById(\"teamsPill\");\nconst enginesPill = document.getElementById(\"enginesPill\");\nconst teamsDiv = document.getElementById(\"teamsDiv\");\nconst enginesDiv = document.getElementById(\"enginesDiv\");\nconst divsTeamsArray = [teamsDiv, enginesDiv];\nlet teamSelected;\nlet engineSelected;\nlet teamEngineSelected;\nlet performanceGraph;\nlet teamsEngine = \"teams\";\nlet viewingGraph = true;\nlet actualMaxDesign = 0;\nlet customEnginesCopy;\nfunction normalizeData(data) {\n  let values = Object.values(data);\n  let min = Math.min(...values);\n  let max = Math.max(...values);\n  let adjustedMin = min - 5;\n  let adjustedMax = max + 5;\n  let normalizedData = {};\n  for (let key in data) {\n    if (data.hasOwnProperty(key)) {\n      normalizedData[key] = (data[key] - adjustedMin) / (adjustedMax - adjustedMin) * 100;\n    }\n  }\n  return normalizedData;\n}\nfunction load_performance(teams) {\n  // let teams = normalizeData(teams);\n  for (let key in teams) {\n    if (teams.hasOwnProperty(key)) {\n      let teamPerformance = document.querySelector(`#teamsDiv .team-performance[data-teamid='${key}']`);\n      if (teamPerformance) {\n        let performanceBarProgress = teamPerformance.querySelector('.performance-bar-progress');\n        let team_value = teamPerformance.querySelector('.team-title-value');\n        if (performanceBarProgress) {\n          performanceBarProgress.style.width = teams[key] + '%';\n          team_value.innerText = teams[key].toFixed(2) + ' %';\n          performanceBarProgress.dataset.overall = teams[key];\n        }\n      }\n    }\n  }\n}\nfunction load_cars(data) {\n  for (let key in data) {\n    let cars = document.querySelectorAll(`#carsDiv .car[data-teamid='${key}']`);\n    cars.forEach(function (car, index) {\n      let carNumber = parseInt(car.dataset.carnumber);\n      index = index + 1;\n      let bar = car.querySelector('.performance-bar-progress');\n      bar.dataset.overall = data[key][carNumber][0];\n      bar.style.width = data[key][carNumber][0] + '%';\n      let name = car.querySelector('.team-title-name');\n      name.innerText = car.dataset.teamshow + \" \" + carNumber.toString() + \" -  #\" + data[key][carNumber][1];\n      let missing_parts = data[key][carNumber][2];\n      let missing_copntainer = car.querySelector(\".car-missing-parts\");\n      missing_copntainer.innerHTML = \"\";\n      if (missing_parts.length > 0) {\n        let list = document.createElement(\"span\");\n        let string = \"\";\n        missing_parts.forEach(function (part) {\n          let partName = _config__WEBPACK_IMPORTED_MODULE_0__.part_codes_abreviations[part];\n          string += partName + \" \";\n        });\n        list.innerText = string;\n        missing_copntainer.appendChild(list);\n        let icon = document.createElement(\"i\");\n        icon.classList.add(\"bi\", \"bi-exclamation-triangle-fill\");\n        missing_copntainer.appendChild(icon);\n      } else {\n        let icon = document.createElement(\"i\");\n        icon.classList.add(\"bi\", \"bi-check-all\");\n        missing_copntainer.appendChild(icon);\n      }\n      let value = document.createElement(\"span\");\n      value.classList.add(\"value\");\n      value.innerText = data[key][carNumber][0].toFixed(2) + \" %\";\n      missing_copntainer.appendChild(value);\n    });\n  }\n}\nfunction load_attributes(teams) {\n  for (let key in teams) {\n    for (let attribute in teams[key]) {\n      let team = document.querySelector(`#teamsDiv .team-performance[data-teamid='${key}']`);\n      let bar = team.querySelector(`.performance-bar-progress`);\n      let attributeValue = teams[key][attribute];\n      bar.dataset[attribute] = attributeValue.toFixed(3);\n    }\n  }\n}\nfunction load_car_attributes(teams) {\n  for (let key in teams) {\n    for (let car in teams[key]) {\n      let carDiv = document.querySelector(`#carsDiv .car[data-teamid='${key}'][data-carnumber='${car}']`);\n      for (let attribute in teams[key][car]) {\n        let bar = carDiv.querySelector(`.performance-bar-progress`);\n        let attributeValue = teams[key][car][attribute];\n        bar.dataset[attribute] = attributeValue.toFixed(3);\n      }\n    }\n  }\n}\nfunction order_by(criterion) {\n  let teams = document.querySelectorAll(\".team-performance\");\n  let teamsArray = Array.from(teams);\n  teamsArray.sort(function (a, b) {\n    return b.querySelector(\".performance-bar-progress\").dataset[criterion] - a.querySelector(\".performance-bar-progress\").dataset[criterion];\n  });\n  teamsArray.forEach(function (team, index) {\n    document.getElementById(\"teamsDiv\").appendChild(team);\n    let bar = team.querySelector(\".performance-bar-progress\");\n    bar.style.width = bar.dataset[criterion] + \"%\";\n    team.querySelector(\".team-title-value\").innerText = parseFloat(bar.dataset[criterion]).toFixed(2) + \" %\";\n    let number = team.querySelector(\".team-number\");\n    number.innerText = index + 1;\n  });\n  let cars = document.querySelectorAll(\".car-performance\");\n  let carsArray = Array.from(cars);\n  carsArray.sort(function (a, b) {\n    return b.querySelector(\".performance-bar-progress\").dataset[criterion] - a.querySelector(\".performance-bar-progress\").dataset[criterion];\n  });\n  carsArray.forEach(function (car, index) {\n    document.getElementById(\"carsDiv\").appendChild(car);\n    let bar = car.querySelector(\".performance-bar-progress\");\n    bar.style.width = bar.dataset[criterion] + \"%\";\n    let number = car.querySelector(\".performance-number\");\n    let value = car.querySelector(\".car-missing-parts .value\");\n    value.innerText = parseFloat(bar.dataset[criterion]).toFixed(2) + \" %\";\n    number.innerText = index + 1;\n  });\n}\ndocument.getElementById(\"teamsCarsButton\").addEventListener(\"click\", function (elem) {\n  if (event.target.dataset.value === \"teams\") {\n    event.target.dataset.value = \"cars\";\n    event.target.className = \"bi bi-person-fill\";\n    document.getElementById(\"teamsDiv\").classList.add(\"d-none\");\n    document.getElementById(\"carsDiv\").classList.remove(\"d-none\");\n  } else {\n    event.target.dataset.value = \"teams\";\n    event.target.className = \"bi bi-people-fill\";\n    document.getElementById(\"carsDiv\").classList.add(\"d-none\");\n    document.getElementById(\"teamsDiv\").classList.remove(\"d-none\");\n  }\n});\ndocument.querySelector(\"#attributeMenu\").querySelectorAll(\"a\").forEach(function (elem) {\n  elem.addEventListener(\"click\", function () {\n    order_by(elem.dataset.attribute);\n    document.querySelector(\"#attributeButton\").innerText = elem.innerText;\n  });\n});\n\n/**\r\n * Pills that manage engines and teams screens and lists\r\n */\nteamsPill.addEventListener(\"click\", function () {\n  teamsEngine = \"teams\";\n  document.querySelector(\"#enginesPerformance\").classList.add(\"d-none\");\n  document.querySelector(\"#teamsPerformance\").classList.remove(\"d-none\");\n  document.querySelector(\"#carAttributeSelector\").classList.remove(\"d-none\");\n  document.querySelector(\"#customEnginesButtonContainer\").classList.add(\"d-none\");\n  removeSelected();\n  if (viewingGraph) {\n    document.querySelector(\".save-button\").classList.add(\"d-none\");\n  } else {\n    document.querySelector(\".save-button\").classList.remove(\"d-none\");\n    (0,_renderer__WEBPACK_IMPORTED_MODULE_2__.first_show_animation)();\n  }\n});\nenginesPill.addEventListener(\"click\", function () {\n  teamsEngine = \"engines\";\n  document.querySelector(\"#teamsPerformance\").classList.add(\"d-none\");\n  document.querySelector(\"#enginesPerformance\").classList.remove(\"d-none\");\n  document.querySelector(\"#carAttributeSelector\").classList.add(\"d-none\");\n  document.querySelector(\"#customEnginesButtonContainer\").classList.remove(\"d-none\");\n  removeSelected();\n  document.querySelector(\".save-button\").classList.remove(\"d-none\");\n  (0,_renderer__WEBPACK_IMPORTED_MODULE_2__.first_show_animation)();\n});\nfunction gather_engines_data() {\n  let engines = document.querySelectorAll(\".engine-performance\");\n  let enginesData = {};\n  engines.forEach(function (engine) {\n    let engineID = engine.dataset.engineid;\n    let engineStats = {};\n    engine.querySelectorAll(\".engine-performance-stat\").forEach(function (stat) {\n      let attribute = stat.dataset.attribute;\n      let value = stat.querySelector(\".custom-input-number\").value.split(\" \")[0];\n      engineStats[attribute] = value;\n    });\n    enginesData[engineID] = engineStats;\n  });\n  return enginesData;\n}\nfunction update_max_design(data) {\n  actualMaxDesign = parseInt(data) + 1;\n}\n\n/**\r\n * Manages the engine stats for all manufacturers\r\n * @param {Object} engineData engine stats for all manufacturers\r\n */\nfunction manage_engineStats(engineData) {\n  let officialEngines = engineData.filter(function (elem) {\n    return elem[0] <= 10;\n  });\n  let customEngines = engineData.filter(function (elem) {\n    return elem[0] > 10;\n  });\n  officialEngines.forEach(function (elem) {\n    let engineId = elem[0];\n    let engineStats = elem[1];\n    let engine = document.querySelector(`[data-engineId=\"${engineId}\"]`);\n    for (let key in engineStats) {\n      let value = engineStats[key];\n      let attribute = engine.querySelector(`.engine-performance-stat[data-attribute=\"${key}\"]`);\n      let input = attribute.querySelector(\".custom-input-number\");\n      let bar = attribute.querySelector(\".engine-performance-progress\");\n      input.value = value.toFixed(1) + \" %\";\n      bar.style.width = value + \"%\";\n    }\n  });\n  load_custom_engines(customEngines);\n}\n\n/**\r\n * removes the team or engine selected anc changes the icon if necesssary\r\n */\nfunction removeSelected() {\n  let elemsSelected = document.querySelectorAll('.selected');\n  elemsSelected.forEach(item => {\n    item.classList.remove('selected');\n  });\n}\n\n/**\r\n * eventListeners for all teams and engines\r\n */\ndocument.querySelectorAll(\".team\").forEach(function (elem) {\n  elem.addEventListener(\"click\", function () {\n    removeSelected();\n    (0,_renderer__WEBPACK_IMPORTED_MODULE_2__.manageSaveButton)(true, \"performance\");\n    document.querySelector(\"#performanceGraphButton\").classList.remove(\"active\");\n    elem.classList.toggle('selected');\n    teamSelected = elem.dataset.teamid;\n    const message = {\n      command: 'performanceRequest',\n      data: {\n        teamID: teamSelected\n      }\n    };\n    const command = _renderer__WEBPACK_IMPORTED_MODULE_2__.factory.createCommand(message);\n    command.execute();\n    document.querySelector(\"#performanceGraph\").classList.add(\"d-none\");\n    document.querySelector(\".teams-show\").classList.remove(\"d-none\");\n    document.querySelector(\".save-button\").classList.remove(\"d-none\");\n    (0,_renderer__WEBPACK_IMPORTED_MODULE_2__.first_show_animation)();\n    viewingGraph = false;\n  });\n});\ndocument.querySelectorAll(\".car\").forEach(function (elem) {\n  elem.addEventListener(\"click\", function () {\n    removeSelected();\n    (0,_renderer__WEBPACK_IMPORTED_MODULE_2__.manageSaveButton)(true, \"performance\");\n    document.querySelector(\"#performanceGraphButton\").classList.remove(\"active\");\n    elem.classList.toggle('selected');\n    teamSelected = elem.dataset.teamid;\n    const message = {\n      command: 'performanceRequest',\n      data: {\n        teamID: teamSelected\n      }\n    };\n    const command = _renderer__WEBPACK_IMPORTED_MODULE_2__.factory.createCommand(message);\n    command.execute();\n    document.querySelector(\"#performanceGraph\").classList.add(\"d-none\");\n    document.querySelector(\".teams-show\").classList.remove(\"d-none\");\n    document.querySelector(\".save-button\").classList.remove(\"d-none\");\n    (0,_renderer__WEBPACK_IMPORTED_MODULE_2__.first_show_animation)();\n    viewingGraph = false;\n  });\n});\ndocument.querySelectorAll(\".engine\").forEach(function (elem) {\n  elem.addEventListener(\"click\", function () {\n    removeSelected();\n    elem.classList.toggle('selected');\n    engineSelected = elem.dataset.engineid;\n    teamEngineSelected = elem.dataset.teamengine;\n    document.querySelector(\".engines-show\").classList.remove(\"d-none\");\n    resetBarsEngines(elem);\n  });\n});\nfunction load_parts_stats(data) {\n  for (let key in data) {\n    if (key !== \"engine\") {\n      let part = document.querySelector(`.part-performance[data-part='${key}']`);\n      for (let stat in data[key]) {\n        if (stat !== \"15\") {\n          let stat_input = part.querySelector(`.part-performance-stat[data-attribute='${stat}']`).querySelector(\".custom-input-number\");\n          if (stat === \"7\" || stat === \"8\" || stat === \"9\") {\n            stat_input.value = data[key][stat].toFixed(2) + \" kN\";\n          } else {\n            stat_input.value = data[key][stat].toFixed(2) + \" %\";\n          }\n        }\n      }\n    }\n  }\n}\nfunction load_parts_list(data) {\n  for (let key in data) {\n    let list = document.querySelector(`.part-performance[data-part='${key}'] .parts-list`);\n    let partLoadouts = document.querySelector(`.part-performance[data-part='${key}']`);\n    list.innerHTML = \"\";\n    let index = 1;\n    for (let part in data[key]) {\n      let partElem = document.createElement(\"div\");\n      partElem.classList.add(\"one-part\");\n      if (index === 1) {\n        partElem.classList.add(\"one-part-default\");\n      }\n      let partTitle = document.createElement(\"div\");\n      partTitle.classList.add(\"one-part-title\");\n      let partName = document.createElement(\"div\");\n      partName.dataset.designId = data[key][part][0];\n      partName.classList.add(\"one-part-name\");\n      let partNameText = _config__WEBPACK_IMPORTED_MODULE_0__.abreviations_dict[teamSelected] + \"-\" + _config__WEBPACK_IMPORTED_MODULE_0__.pars_abreviations[key] + \"-\" + index;\n      partName.innerText = partNameText;\n      let subtitle = document.querySelector(`.part-performance[data-part='${key}'] .part-subtitle`);\n      subtitle.innerText = partNameText;\n      subtitle.dataset.editing = data[key][part][0];\n      partTitle.appendChild(partName);\n      add_partName_listener(partName, subtitle);\n      let loadoutContainer = document.createElement(\"div\");\n      loadoutContainer.classList.add(\"fitted-icons\");\n      let n_parts = document.createElement(\"div\");\n      n_parts.classList.add(\"n-parts\");\n      n_parts.innerText = \"x\" + data[key][part][6];\n      loadoutContainer.appendChild(n_parts);\n      add_n_parts_buttons(loadoutContainer);\n      let loadout1 = document.createElement(\"i\");\n      loadout1.classList.add(\"bi\", \"bi-check\", \"loadout-1\");\n      loadoutContainer.appendChild(loadout1);\n      if (data[key][part][4] === 1) {\n        loadout1.classList.add(\"fitted\");\n        let number = document.createElement(\"div\");\n        number.classList.add(\"number\");\n        number.innerText = \"1\";\n        loadout1.appendChild(number);\n        partLoadouts.dataset.loadout1 = data[key][part][0];\n      }\n      loadout_listener(loadout1, \"1\", partLoadouts);\n      let loadout2 = document.createElement(\"i\");\n      loadout2.classList.add(\"bi\", \"bi-check\", \"loadout-2\");\n      loadoutContainer.appendChild(loadout2);\n      if (data[key][part][5] === 1) {\n        loadout2.classList.add(\"fitted\");\n        let number = document.createElement(\"div\");\n        number.classList.add(\"number\");\n        number.innerText = \"2\";\n        loadout2.appendChild(number);\n        partLoadouts.dataset.loadout2 = data[key][part][0];\n      }\n      loadout_listener(loadout2, \"2\", partLoadouts);\n      partTitle.appendChild(loadoutContainer);\n      let posRelative = document.createElement(\"div\");\n      posRelative.classList.add(\"one-part-flag-and-text\");\n      if (data[key][part][1] !== data[key][part][2]) {\n        let flag = document.createElement(\"img\");\n        flag.classList.add(\"one-part-flag\");\n        let code = data[key][part][3];\n        let codeFlag = _config__WEBPACK_IMPORTED_MODULE_0__.races_map[code];\n        let flagSrc = _config__WEBPACK_IMPORTED_MODULE_0__.codes_dict[codeFlag];\n        flag.src = flagSrc;\n        let flagName = document.createElement(\"div\");\n        flagName.classList.add(\"one-part-flag-title\");\n        flagName.innerText = _config__WEBPACK_IMPORTED_MODULE_0__.races_names[code];\n        posRelative.appendChild(flag);\n        posRelative.appendChild(flagName);\n      } else {\n        posRelative.innerText = \"BASE\";\n      }\n      partElem.appendChild(partTitle);\n      partElem.appendChild(posRelative);\n      partElem.dataset.partid = part;\n      list.appendChild(partElem);\n      if (index === data[key].length) {\n        partName.classList.add(\"editing\");\n      }\n      index++;\n    }\n    add_new_part_button(list);\n    if (list.scrollHeight > list.clientHeight) {\n      list.classList.add(\"list-overflow\");\n    } else {\n      list.classList.remove(\"list-overflow\");\n    }\n  }\n}\nfunction add_new_part_button(list) {\n  let new_part_div = document.createElement(\"div\");\n  new_part_div.classList.add(\"new-part\");\n  let icon = document.createElement(\"i\");\n  let generalPart = list.parentNode;\n  icon.classList.add(\"bi\", \"bi-plus-circle\");\n  icon.textContent = \"Add new part\";\n  new_part_div.appendChild(icon);\n  list.appendChild(new_part_div);\n  icon.addEventListener(\"click\", function () {\n    let previousPart = list.childNodes[list.childNodes.length - 2];\n    let previous_name = previousPart.querySelector(\".one-part-name\").innerText;\n    let new_name = previous_name.split(\"-\")[0] + \"-\" + previous_name.split(\"-\")[1] + \"-\" + (parseInt(previous_name.split(\"-\")[2]) + 1);\n    let part = document.createElement(\"div\");\n    part.classList.add(\"one-part\");\n    let partTitle = document.createElement(\"div\");\n    partTitle.classList.add(\"one-part-title\");\n    let partName = document.createElement(\"div\");\n    partName.dataset.designId = actualMaxDesign;\n    partName.classList.add(\"one-part-name\");\n    partName.innerText = new_name;\n    let subtitle = list.parentNode.querySelector(`.part-subtitle`);\n    subtitle.dataset.editing = \"-1\";\n    actualMaxDesign += 1;\n    subtitle.innerText = new_name;\n    partTitle.appendChild(partName);\n    let parts = list.querySelectorAll(\".one-part\");\n    parts.forEach(function (part) {\n      part.querySelector(\".one-part-name\").classList.remove(\"editing\");\n    });\n    add_partName_listener(partName, subtitle, \"new\");\n    let loadoutContainer = document.createElement(\"div\");\n    loadoutContainer.classList.add(\"fitted-icons\");\n    let n_parts = document.createElement(\"div\");\n    n_parts.classList.add(\"n-parts\");\n    n_parts.innerText = \"x0\";\n    loadoutContainer.appendChild(n_parts);\n    add_n_parts_buttons(loadoutContainer);\n    let loadout1 = document.createElement(\"i\");\n    loadout1.classList.add(\"bi\", \"bi-check\", \"loadout-1\");\n    loadoutContainer.appendChild(loadout1);\n    loadout_listener(loadout1, \"1\", generalPart);\n    let loadout2 = document.createElement(\"i\");\n    loadout2.classList.add(\"bi\", \"bi-check\", \"loadout-2\");\n    loadoutContainer.appendChild(loadout2);\n    loadout_listener(loadout2, \"2\", generalPart);\n    partTitle.appendChild(loadoutContainer);\n    part.appendChild(partTitle);\n    list.insertBefore(part, new_part_div);\n    partName.classList.add(\"editing\");\n    new_part_div.remove();\n  });\n}\nfunction add_n_parts_buttons(loadoutContainer) {\n  let buttonsContainer = document.createElement(\"div\");\n  buttonsContainer.classList.add(\"n-parts-buttons\");\n  let up = document.createElement(\"i\");\n  up.classList.add(\"bi\", \"bi-chevron-up\");\n  let down = document.createElement(\"i\");\n  down.classList.add(\"bi\", \"bi-chevron-down\");\n  buttonsContainer.appendChild(up);\n  buttonsContainer.appendChild(down);\n  up.addEventListener(\"click\", function () {\n    let n_parts = loadoutContainer.querySelector(\".n-parts\");\n    let n = parseInt(n_parts.innerText.split(\"x\")[1]);\n    n += 1;\n    n_parts.innerText = \"x\" + n;\n  });\n  down.addEventListener(\"click\", function () {\n    let fitted_parts = loadoutContainer.parentNode.querySelectorAll(\".fitted\");\n    let fitted_parts_numb = fitted_parts.length;\n    let n_parts = loadoutContainer.querySelector(\".n-parts\");\n    let n = parseInt(n_parts.innerText.split(\"x\")[1]);\n    if (n > fitted_parts_numb) {\n      n -= 1;\n      if (n < 0) {\n        n = 0;\n      }\n      n_parts.innerText = \"x\" + n;\n    } else {\n      fitted_parts.forEach(function (part) {\n        let errorClass = \"\";\n        if (part.classList.contains(\"loadout-1\")) {\n          errorClass = \"loadout-1-error\";\n        } else if (part.classList.contains(\"loadout-2\")) {\n          errorClass = \"loadout-2-error\";\n        }\n        part.classList.add(errorClass);\n        setTimeout(() => {\n          part.classList.remove(errorClass);\n        }, 500);\n      });\n    }\n  });\n  loadoutContainer.appendChild(buttonsContainer);\n}\nfunction load_one_part(data) {\n  let key = Object.keys(data)[0];\n  let part = document.querySelector(`.part-performance[data-part='${key}']`);\n  for (let stat in data[key]) {\n    if (stat !== \"15\") {\n      let stat_input = part.querySelector(`.part-performance-stat[data-attribute='${stat}']`).querySelector(\".custom-input-number\");\n      if (stat === \"7\" || stat === \"8\" || stat === \"9\") {\n        stat_input.value = data[key][stat].toFixed(2) + \" kN\";\n      } else {\n        stat_input.value = data[key][stat].toFixed(2) + \" %\";\n      }\n    }\n  }\n}\nfunction add_partName_listener(div, subtitle, type = \"old\") {\n  div.addEventListener(\"click\", function () {\n    if (type === \"new\") {\n      subtitle.dataset.editing = -1;\n    } else {\n      subtitle.dataset.editing = div.dataset.designId;\n    }\n    subtitle.innerText = div.innerText;\n    let parts = div.parentNode.parentNode.parentNode.querySelectorAll(\".one-part\");\n    parts.forEach(function (part) {\n      part.querySelector(\".one-part-name\").classList.remove(\"editing\");\n    });\n    div.classList.add(\"editing\");\n    if (type === \"old\") {\n      const message = {\n        command: 'partRequest',\n        data: {\n          designID: div.dataset.designId\n        }\n      };\n      const command = _renderer__WEBPACK_IMPORTED_MODULE_2__.factory.createCommand(message);\n      command.execute();\n    }\n  });\n}\nfunction loadout_listener(icon, loadout_n, partTitle) {\n  icon.addEventListener(\"click\", function () {\n    let part_design = icon.parentNode.parentNode.querySelector(\".one-part-name\").dataset.designId;\n    let n_parts_elem = icon.parentNode.querySelector(\".n-parts\");\n    let n_parts = n_parts_elem.innerText.split(\"x\")[1];\n    let parts_fitted = icon.parentNode.parentNode.querySelectorAll(\".fitted\").length;\n    if (parts_fitted < n_parts) {\n      partTitle.dataset[`loadout${loadout_n}`] = part_design;\n      if (loadout_n === \"1\") {\n        let oldFitted = partTitle.querySelector(\".loadout-1.fitted\");\n        if (oldFitted) {\n          oldFitted.classList.remove(\"fitted\");\n          oldFitted.querySelector(\".number\").remove();\n        }\n        icon.classList.toggle(\"fitted\");\n        let number = document.createElement(\"div\");\n        number.classList.add(\"number\");\n        number.innerText = \"1\";\n        icon.appendChild(number);\n      } else {\n        let oldFitted = partTitle.querySelector(\".loadout-2.fitted\");\n        if (oldFitted) {\n          oldFitted.classList.remove(\"fitted\");\n          oldFitted.querySelector(\".number\").remove();\n        }\n        icon.classList.toggle(\"fitted\");\n        let number = document.createElement(\"div\");\n        number.classList.add(\"number\");\n        number.innerText = \"2\";\n        icon.appendChild(number);\n      }\n    } else {\n      n_parts_elem.classList.add(\"n-parts-error\");\n      setTimeout(() => {\n        n_parts_elem.classList.remove(\"n-parts-error\");\n      }, 500);\n    }\n  });\n}\ndocument.querySelector(\"#fitButton\").addEventListener(\"click\", function () {\n  let data = {\n    command: \"fitParts\",\n    teamID: teamSelected\n  };\n  _renderer__WEBPACK_IMPORTED_MODULE_2__.socket.send(JSON.stringify(data));\n});\ndocument.querySelectorAll(\".part-performance-title .bi-caret-down-fill\").forEach(function (elem) {\n  elem.addEventListener(\"click\", function () {\n    elem.classList.toggle(\"clicked\");\n    let generalPart = elem.parentNode.parentNode;\n    elem.parentNode.querySelector(\".part-buttons\").classList.toggle(\"d-none\");\n    if (elem.classList.contains(\"clicked\")) {\n      generalPart.querySelector(\".part-performance-stats\").style.opacity = 0;\n      generalPart.querySelector(\".part-performance-stats\").style.height = \"0\";\n      generalPart.querySelector(\".part-performance-stats\").style.pointerEvents = \"none\";\n    } else {\n      generalPart.querySelector(\".part-performance-stats\").style.opacity = 1;\n      generalPart.querySelector(\".part-performance-stats\").style.pointerEvents = \"auto\";\n      //wait 0.2s and restore height\n      setTimeout(() => {\n        generalPart.querySelector(\".part-performance-stats\").style.height = \"auto\";\n      }, 200);\n    }\n  });\n});\ndocument.querySelector(\".performance-show\").querySelectorAll(\".part-name-buttons .bi-plus-lg\").forEach(function (elem) {\n  let intervalIds = [];\n  elem.addEventListener(\"mousedown\", function () {\n    let part = elem.parentNode.parentNode.parentNode.parentNode;\n    let inputs = part.querySelectorAll(\".custom-input-number\");\n    inputs.forEach(function (input) {\n      let increment;\n      if (input.max === \"100\") {\n        increment = 0.5;\n      } else {\n        increment = 0.025;\n      }\n      updateValue(input, increment);\n      let intervalId = setInterval(() => {\n        updateValue(input, increment);\n      }, 100);\n      intervalIds.push(intervalId);\n    });\n  });\n  elem.addEventListener(\"mouseup\", function () {\n    intervalIds.forEach(clearInterval);\n    intervalIds = [];\n  });\n  elem.addEventListener(\"mouseleave\", function () {\n    intervalIds.forEach(clearInterval);\n    intervalIds = [];\n  });\n});\ndocument.querySelector(\".performance-show\").querySelectorAll(\".part-name-buttons .bi-dash-lg\").forEach(function (elem) {\n  let intervalIds = [];\n  elem.addEventListener(\"mousedown\", function () {\n    let part = elem.parentNode.parentNode.parentNode.parentNode;\n    let inputs = part.querySelectorAll(\".custom-input-number\");\n    inputs.forEach(function (input) {\n      let increment;\n      if (input.max === \"100\") {\n        increment = -0.5;\n      } else {\n        increment = -0.025;\n      }\n      updateValue(input, increment);\n      let intervalId = setInterval(() => {\n        updateValue(input, increment);\n      }, 100);\n      intervalIds.push(intervalId);\n    });\n  });\n  elem.addEventListener(\"mouseup\", function () {\n    intervalIds.forEach(clearInterval);\n    intervalIds = [];\n  });\n  elem.addEventListener(\"mouseleave\", function () {\n    intervalIds.forEach(clearInterval);\n    intervalIds = [];\n  });\n});\ndocument.querySelector(\".performance-show\").querySelectorAll('.stat-number .bi-plus-lg').forEach(button => {\n  let intervalId;\n  button.addEventListener('mousedown', function () {\n    const input = this.previousElementSibling;\n    updateValue(input, 0.01);\n    intervalId = setInterval(() => {\n      updateValue(input, 0.01);\n    }, 100);\n  });\n  button.addEventListener('mouseup', function () {\n    clearInterval(intervalId);\n  });\n  button.addEventListener('mouseleave', function () {\n    clearInterval(intervalId);\n  });\n});\ndocument.querySelector(\".engines-show\").querySelectorAll('.bi-plus-lg').forEach(button => {\n  let intervalId;\n  let bar = button.parentNode.parentNode.querySelector(\".engine-performance-progress\");\n  button.addEventListener('mousedown', function () {\n    const input = this.previousElementSibling;\n    updateValue(input, 0.5);\n    bar.style.width = input.value.split(' ')[0] + \"%\";\n    intervalId = setInterval(() => {\n      updateValue(input, 0.5);\n      bar.style.width = input.value.split(' ')[0] + \"%\";\n    }, 100);\n  });\n  button.addEventListener('mouseup', function () {\n    clearInterval(intervalId);\n  });\n  button.addEventListener('mouseleave', function () {\n    clearInterval(intervalId);\n  });\n});\ndocument.querySelector(\".performance-show\").querySelectorAll('.stat-number .bi-dash-lg').forEach(button => {\n  let intervalId;\n  button.addEventListener('mousedown', function () {\n    const input = this.nextElementSibling;\n    updateValue(input, -0.01);\n    intervalId = setInterval(() => {\n      updateValue(input, -0.01);\n    }, 100);\n  });\n  button.addEventListener('mouseup', function () {\n    clearInterval(intervalId);\n  });\n  button.addEventListener('mouseleave', function () {\n    clearInterval(intervalId);\n  });\n});\ndocument.querySelector(\".engines-show\").querySelectorAll('.bi-dash-lg').forEach(button => {\n  let intervalId;\n  let bar = button.parentNode.parentNode.querySelector(\".engine-performance-progress\");\n  button.addEventListener('mousedown', function () {\n    const input = this.nextElementSibling;\n    updateValue(input, -0.5);\n    bar.style.width = input.value.split(' ')[0] + \"%\";\n    intervalId = setInterval(() => {\n      updateValue(input, -0.5);\n      bar.style.width = input.value.split(' ')[0] + \"%\";\n    }, 100);\n  });\n  button.addEventListener('mouseup', function () {\n    clearInterval(intervalId);\n  });\n  button.addEventListener('mouseleave', function () {\n    clearInterval(intervalId);\n  });\n});\ndocument.querySelector(\".performance-show\").querySelectorAll(\".new-or-existing-part div\").forEach(function (elem) {\n  elem.addEventListener(\"click\", function () {\n    let parent = elem.parentNode;\n    let options = parent.querySelectorAll(\"div\");\n    options.forEach(function (option) {\n      option.classList.remove(\"active-part\");\n    });\n    elem.classList.add(\"active-part\");\n    parent.parentNode.parentNode.dataset.new = elem.dataset.new;\n  });\n});\nfunction updateValue(input, increment) {\n  let value = input.value.split(' ')[0];\n  let unit = input.value.split(' ')[1];\n  value = (parseFloat(value) + increment).toFixed(2);\n  if (value > parseFloat(input.max)) {\n    value = parseFloat(input.max).toFixed(2);\n  }\n  if (value < parseFloat(input.min)) {\n    value = parseFloat(input.min).toFixed(2);\n  }\n  input.value = value + ' ' + unit;\n}\ndocument.querySelector(\"#performanceGraphButton\").addEventListener(\"click\", function () {\n  if (!viewingGraph) {\n    document.querySelector(\"#performanceGraphButton\").classList.add(\"active\");\n    document.querySelector(\".teams-show\").classList.add(\"d-none\");\n    document.querySelector(\"#performanceGraph\").classList.remove(\"d-none\");\n  }\n  removeSelected();\n  document.querySelector(\".save-button\").classList.add(\"d-none\");\n  viewingGraph = true;\n});\ndocument.querySelectorAll(\".part-performance-title .bi-chevron-up\").forEach(function (elem) {\n  elem.addEventListener(\"click\", function () {\n    let title = elem.parentNode.parentNode;\n    let list = title.parentNode.querySelector(\".parts-list\");\n    let partEditing = list.querySelector('.one-part-name.editing').parentNode.parentNode;\n    let newPart = partEditing.previousElementSibling;\n    if (!newPart) {\n      let lastValidPart = list.lastElementChild;\n      while (lastValidPart && lastValidPart.classList.contains('new-part')) {\n        lastValidPart = lastValidPart.previousElementSibling;\n      }\n      newPart = lastValidPart;\n    }\n    newPart.querySelector(\".one-part-name\").click();\n  });\n});\ndocument.querySelectorAll(\".part-performance-title .bi-chevron-down\").forEach(function (elem) {\n  elem.addEventListener(\"click\", function () {\n    let title = elem.parentNode.parentNode;\n    let list = title.parentNode.querySelector(\".parts-list\");\n    let partEditing = list.querySelector('.one-part-name.editing').parentNode.parentNode;\n    let newPart = partEditing.nextElementSibling;\n\n    // Si el siguiente es 'new-part', nos movemos al primero\n    if (newPart && newPart.classList.contains('new-part')) {\n      newPart = list.firstElementChild;\n    }\n\n    // Simulamos el click en el nuevo elemento encontrado (si es válido)\n    if (newPart) {\n      newPart.querySelector(\".one-part-name\").click();\n    }\n  });\n});\n\n/**\r\n * Puts the bars of the engine to their appropiate values\r\n * @param {div} div element of the dom that contains the stats of the engine\r\n */\nfunction resetBarsEngines(div) {\n  let statsString = div.dataset.stats;\n  var statsArray = statsString.split(' ').map(function (item) {\n    return parseFloat(item, 10) / 10;\n  });\n  document.querySelector(\".engines-show\").querySelectorAll(\".custom-progress\").forEach(function (elem, index) {\n    elem.dataset.progress = statsArray[index];\n    manage_bar(elem, elem.dataset.progress);\n  });\n}\n\n/**\r\n * resets all bars to 0\r\n */\nfunction resetBars() {\n  document.querySelectorAll(\".custom-progress\").forEach(function (elem) {\n    elem.dataset.progress = 0;\n    manage_bar(elem, elem.dataset.progress);\n  });\n}\nfunction add_custom_engine(name, stats) {\n  let generalEngineDiv = document.createElement(\"div\");\n  let engineTitle = document.createElement(\"input\");\n  engineTitle.type = \"text\";\n  if (name !== \"\") {\n    engineTitle.value = name;\n  } else {\n    engineTitle.value = \"New Engine\";\n  }\n  let engineCount = document.querySelectorAll(\".custom-engines-div > div\").length;\n  let engineStatsId = `engineStats${engineCount + 1}`;\n  let engineStats = document.createElement(\"div\");\n  let caret = document.createElement(\"i\");\n  let trash = document.createElement(\"i\");\n  trash.classList.add(\"bi\", \"bi-trash\");\n  caret.classList.add(\"bi\", \"bi-caret-down-fill\", \"clicked\");\n  generalEngineDiv.classList.add(\"engine-performance\");\n  engineTitle.classList.add(\"engine-performance-title\");\n  engineStats.classList.add(\"engine-performance-stats\", \"collapse\", \"show\");\n  engineStats.id = engineStatsId;\n  caret.addEventListener(\"click\", function () {\n    caret.classList.toggle(\"clicked\");\n  });\n  trash.addEventListener(\"click\", function () {\n    generalEngineDiv.remove();\n  });\n  caret.setAttribute(\"data-bs-toggle\", \"collapse\");\n  caret.setAttribute(\"data-bs-target\", `#${engineStatsId}`);\n  for (let [key, value] of _config__WEBPACK_IMPORTED_MODULE_0__.engine_stats_dict) {\n    if (_renderer__WEBPACK_IMPORTED_MODULE_2__.game_version === 2024 && key !== 11 && key !== 12 || _renderer__WEBPACK_IMPORTED_MODULE_2__.game_version === 2023) {\n      let stat = document.createElement(\"div\");\n      stat.classList.add(\"engine-performance-stat\");\n      stat.dataset.attribute = key;\n      let statTitle = document.createElement(\"div\");\n      statTitle.classList.add(\"part-performance-stat-title\");\n      statTitle.innerText = value;\n      let stat_number = document.createElement(\"div\");\n      stat_number.classList.add(\"stat-number\");\n      stat_number.innerHTML = '<i class=\"bi bi-dash-lg\"></i> <input type=\"text\" class=\"custom-input-number\"> <i class=\"bi bi-plus-lg\"></i>';\n      let input = stat_number.querySelector(\".custom-input-number\");\n      let bar = document.createElement(\"div\");\n      bar.classList.add(\"engine-performance-bar\");\n      let bar_progress = document.createElement(\"div\");\n      bar_progress.classList.add(\"engine-performance-progress\");\n      if (stats[key.toString()] !== undefined) {\n        input.value = stats[key] + \" %\";\n        bar_progress.style.width = stats[key] + \"%\";\n      } else {\n        input.value = \"50.0 %\";\n      }\n      stat.appendChild(statTitle);\n      stat.appendChild(stat_number);\n      bar.appendChild(bar_progress);\n      stat.appendChild(bar);\n      engineStats.appendChild(stat);\n      let less = stat_number.querySelector(\".bi-dash-lg\");\n      let intervalId;\n      less.addEventListener('mousedown', function () {\n        const input = this.nextElementSibling;\n        updateValue(input, -0.5);\n        bar_progress.style.width = input.value.split(' ')[0] + \"%\";\n        intervalId = setInterval(() => {\n          updateValue(input, -0.5);\n          bar_progress.style.width = input.value.split(' ')[0] + \"%\";\n        }, 100);\n      });\n      less.addEventListener('mouseup', function () {\n        clearInterval(intervalId);\n      });\n      less.addEventListener('mouseleave', function () {\n        clearInterval(intervalId);\n      });\n      let plus = stat_number.querySelector(\".bi-plus-lg\");\n      plus.addEventListener('mousedown', function () {\n        const input = this.previousElementSibling;\n        updateValue(input, 0.5);\n        bar_progress.style.width = input.value.split(' ')[0] + \"%\";\n        intervalId = setInterval(() => {\n          updateValue(input, 0.5);\n          bar_progress.style.width = input.value.split(' ')[0] + \"%\";\n        }, 100);\n      });\n      plus.addEventListener('mouseup', function () {\n        clearInterval(intervalId);\n      });\n      plus.addEventListener('mouseleave', function () {\n        clearInterval(intervalId);\n      });\n    }\n  }\n  generalEngineDiv.appendChild(engineTitle);\n  generalEngineDiv.appendChild(engineStats);\n  generalEngineDiv.appendChild(caret);\n  generalEngineDiv.appendChild(trash);\n  document.querySelector(\".custom-engines-div\").appendChild(generalEngineDiv);\n}\ndocument.querySelector(\"#addCustomEngineButton\").addEventListener(\"click\", function () {\n  add_custom_engine(\"\", \"\");\n});\ndocument.querySelector(\"#confirmCustomEnginesButton\").addEventListener(\"click\", function () {\n  let engines = document.querySelectorAll(\".custom-engines-div .engine-performance\");\n  let enginesData = {};\n  let unique_id = 1;\n  engines.forEach(function (engine) {\n    //id is title in lowercase\n    let engineID = 13 + unique_id;\n    let engineName = engine.querySelector(\".engine-performance-title\").value.toLowerCase();\n    let engineStats = {};\n    engine.querySelectorAll(\".engine-performance-stat\").forEach(function (stat) {\n      let attribute = stat.dataset.attribute;\n      let value = stat.querySelector(\".custom-input-number\").value.split(\" \")[0];\n      engineStats[attribute] = value;\n    });\n    enginesData[engineID] = {};\n    enginesData[engineID][\"stats\"] = engineStats;\n    enginesData[engineID][\"name\"] = engineName;\n    unique_id += 3;\n  });\n  let data = {\n    enginesData: enginesData\n  };\n  const message = {\n    command: 'customEngines',\n    data: data\n  };\n  const command = _renderer__WEBPACK_IMPORTED_MODULE_2__.factory.createCommand(message);\n  command.execute();\n});\nfunction load_custom_engines(data) {\n  let engines = data;\n  let engineDropdown = document.querySelector(\"#engineMenu\");\n  engineDropdown.querySelectorAll(\"a.custom-engine\").forEach(function (elem) {\n    elem.remove();\n  });\n  document.querySelector(\".custom-engines-div\").innerHTML = \"\";\n  engines.forEach(function (engine) {\n    add_custom_engine(engine[2], engine[1]);\n    let engineOption = document.createElement(\"a\");\n    engineOption.classList.add(\"dropdown-item\", \"custom-engine\");\n    engineOption.innerText = engine[2].charAt(0).toUpperCase() + engine[2].slice(1);\n    engineOption.dataset.engine = engine[0];\n    engineOption.href = \"#\";\n    engineDropdown.appendChild(engineOption);\n    engineOption.addEventListener(\"click\", function () {\n      let engineid = engineOption.dataset.engine;\n      let engine = engineOption.innerText;\n      document.querySelector(\"#engineLabel\").innerText = engine;\n      document.querySelector(\"#engineButton\").dataset.value = engineid;\n    });\n  });\n}\ndocument.querySelector(\"#cancelCustomEnginesButton\").addEventListener(\"click\", function () {\n  load_custom_engines(customEnginesCopy);\n});\n\n/**\r\n * Manages the progression of the bars \r\n * @param {div} bar bar that is about to be edited\r\n * @param {int} progress number that determines the progress of the bar \r\n */\nfunction manage_bar(bar, progress) {\n  if (bar.dataset.type === \"engine\") {\n    let whiteDiv = bar.querySelector(\".white-part\");\n    let newProgress = progress * 10;\n    let newWidth = 0 + newProgress + \"%\";\n    whiteDiv.style.width = newWidth;\n  } else {\n    let grayDiv = bar.querySelector(\".gray-part\");\n    let greenDiv = bar.querySelector(\".green-part\");\n    if (progress == 0) {\n      grayDiv.style.width = \"100%\";\n      greenDiv.style.width = \"0%\";\n      bar.parentNode.querySelector(\".performance-data\").className = \"performance-data bold-font\";\n    } else if (progress > 0) {\n      grayDiv.style.width = \"100%\";\n      let newProgress = progress * 10;\n      let newWidth = 0 + newProgress + \"%\";\n      greenDiv.style.width = newWidth;\n      bar.parentNode.querySelector(\".performance-data\").className = \"performance-data bold-font positive\";\n    } else if (progress < 0) {\n      greenDiv.style.width = \"0%\";\n      let newProgress = progress * 10;\n      let newWidth = 100 + newProgress + \"%\";\n      grayDiv.style.width = newWidth;\n      bar.parentNode.querySelector(\".performance-data\").className = \"performance-data bold-font negative\";\n    }\n  }\n  bar.parentNode.querySelector(\".performance-data\").innerHTML = progress * 10 + \"%\";\n}\nfunction load_performance_graph(data) {\n  let labelsArray = [];\n  data[1].forEach(function (elem) {\n    labelsArray.push(_config__WEBPACK_IMPORTED_MODULE_0__.races_names[elem[2]]);\n  });\n  labelsArray.unshift(\"\");\n  if (typeof performanceGraph !== 'undefined' && performanceGraph !== null) {\n    performanceGraph.destroy();\n  }\n  createPerformanceChart(labelsArray);\n  performanceGraph.update();\n  let teamPerformances = {};\n\n  // Inicializar un array vacío para cada equipo\n  for (let i = 1; i <= 10; i++) {\n    teamPerformances[i] = [];\n  }\n  teamPerformances[32] = [];\n  let minValue = Number.POSITIVE_INFINITY;\n  let maxValue = Number.NEGATIVE_INFINITY;\n  let performances = [...data[0]];\n  performances.forEach(race => {\n    for (let team in race) {\n      let value = race[team];\n      teamPerformances[team].push(value);\n      if (value < minValue) {\n        minValue = value;\n      }\n      if (value > maxValue) {\n        maxValue = value;\n      }\n    }\n  });\n  let yAxisMin = minValue - 5;\n  let yAxisMax = maxValue + 5;\n  for (let team in teamPerformances) {\n    let color = _head2head__WEBPACK_IMPORTED_MODULE_1__.colors_dict[team + \"0\"];\n    let data = teamPerformances[team];\n    performanceGraph.data.datasets.push({\n      label: _config__WEBPACK_IMPORTED_MODULE_0__.combined_dict[team],\n      data: data,\n      borderColor: color,\n      backgroundColor: color,\n      pointRadius: 0,\n      fill: false,\n      tension: 0.1,\n      pointHitRadius: 7\n    });\n  }\n  performanceGraph.options.scales.y.min = yAxisMin;\n  performanceGraph.options.scales.y.max = yAxisMax;\n  performanceGraph.update();\n}\n\n/**\r\n * Creates the head to head race chart\r\n * @param {Array} labelsArray array with all the labels for the races\r\n */\nfunction createPerformanceChart(labelsArray) {\n  const dataD = {\n    labels: labelsArray\n  };\n  performanceGraph = new Chart(document.getElementById('performanceGraph'), {\n    type: 'line',\n    data: dataD,\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      interaction: {\n        mode: 'index'\n      },\n      layout: {\n        padding: {\n          top: 25,\n          right: 25,\n          boottom: 20,\n          left: 10\n        }\n      },\n      scales: {\n        x: {\n          grid: {\n            color: '#292929'\n          },\n          ticks: {\n            color: \"#dedde6\",\n            font: {\n              family: \"Formula1Bold\"\n            }\n          }\n        },\n        y: {\n          min: 0,\n          max: 100,\n          grid: {\n            color: '#292929'\n          },\n          ticks: {\n            color: \"#dedde6\",\n            font: {\n              family: \"Formula1Bold\"\n            },\n            callback: function (value) {\n              return value.toFixed(1); // Mostrar solo un decimal\n            }\n          }\n        }\n      },\n      plugins: {\n        datalabels: {\n          display: false\n        },\n        legend: {\n          labels: {\n            boxHeight: 2,\n            boxWidth: 25,\n            color: \"#dedde6\",\n            font: {\n              family: \"Formula1\"\n            }\n          },\n          display: false\n        },\n        tooltip: {\n          titleFont: {\n            family: 'Formula1Bold',\n            size: 16\n          },\n          bodyFont: {\n            family: 'Formula1',\n            size: 14\n          }\n        }\n      }\n    }\n  });\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/frontend/performance.js?");

/***/ }),

/***/ "./src/js/frontend/predictions.js":
/*!****************************************!*\
  !*** ./src/js/frontend/predictions.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   max_races: () => (/* binding */ max_races),\n/* harmony export */   mid_grid: () => (/* binding */ mid_grid),\n/* harmony export */   placeRaces: () => (/* binding */ placeRaces),\n/* harmony export */   placeRacesInModal: () => (/* binding */ placeRacesInModal),\n/* harmony export */   relative_grid: () => (/* binding */ relative_grid),\n/* harmony export */   resetPredict: () => (/* binding */ resetPredict),\n/* harmony export */   setMaxRaces: () => (/* binding */ setMaxRaces),\n/* harmony export */   setMidGrid: () => (/* binding */ setMidGrid),\n/* harmony export */   setRelativeGrid: () => (/* binding */ setRelativeGrid)\n/* harmony export */ });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"./src/js/frontend/config.js\");\n/* harmony import */ var _transfers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transfers */ \"./src/js/frontend/transfers.js\");\n\n\nlet yearSel;\nlet yearProbSel;\nlet racePredicted;\nlet raceName;\nlet probRace;\nlet mid_grid = 10;\nlet max_races = 23;\nlet relative_grid = 5;\nfunction setMidGrid(value) {\n  mid_grid = value;\n}\nfunction setMaxRaces(value) {\n  max_races = value;\n}\nfunction setRelativeGrid(value) {\n  relative_grid = value;\n}\nfunction placeRaces(races) {\n  yearSel = races[0];\n  let raceMenu = document.querySelector(\"#raceMenu\");\n  let dropdownRaceMenu = document.querySelector(\"#raceProbMenu\");\n  raceMenu.innerHTML = \"\";\n  races[1].forEach(function (race) {\n    let newDiv = document.createElement(\"div\");\n    newDiv.className = \"race bold-font\";\n    let nameDiv = document.createElement(\"div\");\n    nameDiv.textContent = _config__WEBPACK_IMPORTED_MODULE_0__.names_full[_config__WEBPACK_IMPORTED_MODULE_0__.races_names[race[1]]];\n    newDiv.dataset.raceid = race[0];\n    let img = document.createElement(\"img\");\n    img.setAttribute(\"src\", _config__WEBPACK_IMPORTED_MODULE_0__.codes_dict[_config__WEBPACK_IMPORTED_MODULE_0__.races_map[race[1]]]);\n    img.className = \"race-flag front-gradient\";\n    img.style.float = \"right\";\n    newDiv.appendChild(nameDiv);\n    newDiv.appendChild(img);\n    raceMenu.appendChild(newDiv);\n    newDiv.addEventListener(\"click\", function () {\n      racePredicted = newDiv.dataset.raceid;\n      if (raceMenu.querySelector(\".selected\")) {\n        raceMenu.querySelector(\".selected\").classList.remove(\"selected\");\n      }\n      newDiv.classList.add(\"selected\");\n      let data = {\n        // command: \"predictMontecarlo\",\n        command: \"predict\",\n        race: newDiv.dataset.raceid,\n        year: yearSel\n      };\n      socket.send(JSON.stringify(data));\n    });\n  });\n}\nfunction resetPredict() {\n  let raceMenu = document.querySelector(\"#raceMenu\");\n  raceMenu.innerHTML = \"\";\n  let dropdownRaceMenu = document.querySelector(\"#raceProbMenu\");\n  dropdownRaceMenu.innerHTML = \"\";\n  let header = document.querySelector(\".prob-viewer-header\");\n  header.innerHTML = \"\";\n  let driverDiv = document.createElement(\"div\");\n  driverDiv.classList = \"viewer-header-driver bold-font\";\n  driverDiv.innerText = \"Driver\";\n  let PositionDiv = document.createElement(\"div\");\n  PositionDiv.classList = \"viewer-header-position bold-font\";\n  PositionDiv.innerText = \"Pos\";\n  header.appendChild(driverDiv);\n  header.appendChild(PositionDiv);\n  let dataSect = document.querySelector(\".prob-viewer-data\");\n  dataSect.innerHTML = \"\";\n  document.querySelector(\"#predictionFirst\").querySelector(\".prediction-table-data\").innerHTML = \"\";\n  document.querySelector(\"#predictionSecond\").querySelector(\".prediction-table-data\").innerHTML = \"\";\n  document.querySelector(\"#raceProbButton\").innerText = \"Race\";\n  document.querySelector(\"#confirmPredict\").disabled = true;\n}\nfunction placeRacesInModal(races) {\n  yearProbSel = races[0];\n  let raceMenu = document.querySelector(\"#raceMenu\");\n  let dropdownRaceMenu = document.querySelector(\"#raceProbMenu\");\n  dropdownRaceMenu.innerHTML = \"\";\n  races[1].forEach(function (race) {\n    let a = document.createElement('a');\n    a.classList.add('dropdown-item');\n    a.classList.add('menu-race');\n    a.href = '#';\n    a.textContent = _config__WEBPACK_IMPORTED_MODULE_0__.names_full[_config__WEBPACK_IMPORTED_MODULE_0__.races_names[race[1]]];\n    a.dataset.code = race[0];\n    let imageUrl = _config__WEBPACK_IMPORTED_MODULE_0__.codes_dict[_config__WEBPACK_IMPORTED_MODULE_0__.races_map[race[1]]];\n    let img2 = document.createElement('img');\n    img2.src = imageUrl;\n    img2.classList.add('menuFlag');\n    a.appendChild(img2);\n    a.addEventListener(\"click\", function () {\n      probRace = a.dataset.code;\n      document.querySelector(\"#raceProbButton\").innerText = a.textContent;\n      document.querySelector(\"#confirmPredict\").disabled = false;\n    });\n    dropdownRaceMenu.appendChild(a);\n  });\n}\nfunction manageProgress(prog) {\n  let bar = document.querySelector(\"#predictBar\");\n  let val = \"width: \" + prog[0] + \"% !important;\";\n  bar.setAttribute(\"style\", val);\n  document.querySelector(\".indicator\").innerText = prog[0] + \"%\";\n}\nfunction resetBar() {\n  document.querySelector(\".bar-and-indicator\").style.opacity = 0;\n  let bar = document.querySelector(\"#predictBar\");\n  let val = \"width: 0% !important;\";\n  bar.setAttribute(\"style\", val);\n  document.querySelector(\".indicator\").innerText = \"0%\";\n}\ndocument.querySelector(\"#confirmPredict\").addEventListener(\"click\", function () {\n  let data = {\n    command: \"predictMontecarlo\",\n    race: probRace,\n    year: yearProbSel\n  };\n  socket.send(JSON.stringify(data));\n  document.querySelector(\".bar-and-indicator\").style.opacity = 1;\n  document.querySelector(\"#cancelPredict\").disabled = true;\n  document.querySelector(\"#confirmPredict\").disabled = true;\n});\ndocument.querySelector(\"#predictionpill\").addEventListener(\"click\", function () {\n  document.querySelector(\"#mainPred\").classList.remove(\"d-none\");\n  document.querySelector(\"#mainProb\").classList.add(\"d-none\");\n  document.querySelector(\"#yearPredictionButton\").classList.remove(\"d-none\");\n  document.querySelector(\"#predictButton\").classList.add(\"d-none\");\n  document.querySelector(\"#predictConfigContent\").classList.add(\"d-none\");\n});\ndocument.querySelector(\"#probpill\").addEventListener(\"click\", function () {\n  document.querySelector(\"#mainPred\").classList.add(\"d-none\");\n  document.querySelector(\"#mainProb\").classList.remove(\"d-none\");\n  document.querySelector(\"#yearPredictionButton\").classList.add(\"d-none\");\n  document.querySelector(\"#predictButton\").classList.remove(\"d-none\");\n  document.querySelector(\"#predictConfigContent\").classList.remove(\"d-none\");\n});\nfunction loadMontecarlo(data) {\n  let bar = document.querySelector(\"#predictBar\");\n  bar.setAttribute(\"style\", \"width: 100%\");\n  document.querySelector(\".indicator\").innerText = \"100%\";\n  let drivers = data[0];\n  setTimeout(function () {\n    document.querySelector(\"#cancelPredict\").disabled = false;\n    document.querySelector(\"#confirmPredict\").disabled = false;\n    document.querySelector(\"#cancelPredict\").click();\n    resetBar();\n  }, 500);\n  document.querySelector(\"#mainProb\").classList.remove(\"d-none\");\n  document.querySelector(\"#predictConfigContent\").innerText = document.querySelector(\"#yearPredictionModalButton\").textContent + \" \" + document.querySelector(\"#raceProbButton\").textContent;\n  drivers = orderPercent(drivers);\n  let header = document.querySelector(\".prob-viewer-header\");\n  header.innerHTML = \"\";\n  let driverDiv = document.createElement(\"div\");\n  driverDiv.classList = \"viewer-header-driver bold-font\";\n  driverDiv.innerText = \"Driver\";\n  let PositionDiv = document.createElement(\"div\");\n  PositionDiv.classList = \"viewer-header-position bold-font\";\n  PositionDiv.innerText = \"Pos\";\n  header.appendChild(driverDiv);\n  header.appendChild(PositionDiv);\n  let dataSect = document.querySelector(\".prob-viewer-data\");\n  dataSect.innerHTML = \"\";\n  drivers[0].slice(4).forEach(function (elem, index) {\n    let headerPos = document.createElement(\"div\");\n    headerPos.className = \"viewer-header-pos bold-font\";\n    headerPos.innerText = index + 1;\n    header.appendChild(headerPos);\n  });\n  drivers.forEach(function (elem, index) {\n    let row = document.createElement(\"div\");\n    row.classList = \"prob-viewer-row\";\n    if (index % 2 === 0) {\n      row.classList.add(\"prob-row-even\");\n    } else {\n      row.classList.add(\"prob-row-odd\");\n    }\n    let nameDiv = document.createElement(\"div\");\n    nameDiv.classList = \"viewer-header-driver\";\n    let name = elem[1].split(\" \");\n    let spanName = document.createElement(\"span\");\n    let spanLastName = document.createElement(\"span\");\n    spanLastName.dataset.teamid = elem[2];\n    row.dataset.teamid = elem[2];\n    row.classList.add(_config__WEBPACK_IMPORTED_MODULE_0__.team_dict[elem[2]] + \"-transparent\");\n    spanName.textContent = (0,_transfers__WEBPACK_IMPORTED_MODULE_1__.insert_space)(name[0]) + \" \";\n    spanLastName.textContent = name.slice(1).join(\" \").toUpperCase();\n    spanLastName.classList.add(\"bold-font\");\n    (0,_transfers__WEBPACK_IMPORTED_MODULE_1__.manageColor)(spanLastName, spanLastName);\n    nameDiv.appendChild(spanName);\n    nameDiv.appendChild(spanLastName);\n    let position = document.createElement(\"div\");\n    position.classList = \"viewer-header-position bold-font\";\n    position.innerText = elem[3];\n    row.appendChild(nameDiv);\n    row.appendChild(position);\n    elem.slice(4).forEach(function (perc) {\n      let percDiv = document.createElement(\"div\");\n      percDiv.className = \"viewer-header-data\";\n      if (perc !== 0) {\n        percDiv.innerText = Number(perc.toFixed(2));\n      }\n      if (perc < 25) {\n        if (perc !== 0) {\n          percDiv.classList.add(\"i0-25\");\n        }\n      } else if (perc < 50) {\n        percDiv.classList.add(\"i25-50\");\n      } else if (perc < 70) {\n        percDiv.classList.add(\"i50-75\");\n      } else {\n        percDiv.classList.add(\"i75-100\");\n      }\n      row.appendChild(percDiv);\n    });\n    dataSect.appendChild(row);\n  });\n}\nfunction orderDrivers(lista, camp) {\n  return lista.sort((a, b) => a[camp] - b[camp]);\n}\nfunction orderPercent(lista) {\n  lista.sort(function (a, b) {\n    return a[3] - b[3];\n  });\n  return lista;\n}\nfunction predictDrivers(drivers) {\n  document.querySelector(\"#predictionFirst\").querySelector(\".prediction-table-data\").innerHTML = \"\";\n  document.querySelector(\"#predictionSecond\").querySelector(\".prediction-table-data\").innerHTML = \"\";\n  let next_race = drivers[0];\n  let list;\n  let nextRace = Number(racePredicted) === Number(next_race[0]);\n  if (nextRace) {\n    list = orderDrivers(drivers[1], \"Prediction\");\n  } else {\n    list = drivers[1];\n  }\n  list.forEach(function (driver) {\n    let mainDiv = document.createElement(\"div\");\n    mainDiv.className = \"driver-info\";\n    let name = driver.Name.split(\" \");\n    let nameDiv = document.createElement(\"div\");\n    nameDiv.classList = \"driver-prediction\";\n    let spanName = document.createElement(\"span\");\n    let spanLastName = document.createElement(\"span\");\n    mainDiv.dataset.teamid = driver.Team;\n    mainDiv.classList.add(_config__WEBPACK_IMPORTED_MODULE_0__.team_dict[driver.Team] + \"-transparent\");\n    spanLastName.dataset.teamid = driver.Team;\n    spanName.textContent = (0,_transfers__WEBPACK_IMPORTED_MODULE_1__.insert_space)(name[0]) + \" \";\n    spanLastName.textContent = name.slice(1).join(\" \").toUpperCase();\n    spanLastName.classList.add(\"bold-font\");\n    (0,_transfers__WEBPACK_IMPORTED_MODULE_1__.manageColor)(spanLastName, spanLastName);\n    nameDiv.appendChild(spanName);\n    nameDiv.appendChild(spanLastName);\n    mainDiv.appendChild(nameDiv);\n    let positionDiv = document.createElement(\"div\");\n    positionDiv.className = \"position-prediction bold-font\";\n    let provisional = driver.result;\n    let positionNum = document.createElement(\"div\");\n    if (provisional === 1) {\n      provisional = provisional + \"st\";\n      positionNum.style.color = \"#FDE06B\";\n    } else if (provisional === 2) {\n      provisional = provisional + \"nd\";\n      positionNum.style.color = \"#AEB2B8\";\n    } else if (provisional === 3) {\n      provisional = provisional + \"rd\";\n      positionNum.style.color = \"#d7985a\";\n    } else {\n      provisional = provisional + \"th\";\n    }\n    let positionDelta = document.createElement(\"div\");\n    positionNum.textContent = provisional;\n    let delta = driver.Prediction - driver.result;\n    if (delta > 0) {\n      positionDelta.innerText = \"+\" + delta;\n      positionDelta.style.color = \"#5bd999\";\n    } else if (delta < 0) {\n      positionDelta.innerText = delta;\n      positionDelta.style.color = \"#e95656\";\n    } else if (delta === 0) {\n      positionDelta.innerText = \"\\u00A0\" + \" =\";\n    }\n    positionDiv.appendChild(positionNum);\n    positionDiv.appendChild(positionDelta);\n    let predictionDiv = document.createElement(\"div\");\n    predictionDiv.className = \"prediction-prediction bold-font\";\n    provisional = driver.Prediction;\n    if (provisional === 1) {\n      provisional = provisional + \"st\";\n      predictionDiv.style.color = \"#FDE06B\";\n    } else if (provisional === 2) {\n      provisional = provisional + \"nd\";\n      predictionDiv.style.color = \"#AEB2B8\";\n    } else if (provisional === 3) {\n      provisional = provisional + \"rd\";\n      predictionDiv.style.color = \"#d7985a\";\n    } else {\n      provisional = provisional + \"th\";\n    }\n    predictionDiv.textContent = provisional;\n    mainDiv.appendChild(predictionDiv);\n    mainDiv.appendChild(positionDiv);\n    if (nextRace) {\n      if (driver.Prediction <= mid_grid) {\n        document.querySelector(\"#predictionFirst\").querySelector(\".prediction-table-data\").appendChild(mainDiv);\n      } else if (driver.Prediction > mid_grid) {\n        document.querySelector(\"#predictionSecond\").querySelector(\".prediction-table-data\").appendChild(mainDiv);\n      }\n    } else {\n      if (driver.result <= mid_grid && driver.result != 0) {\n        document.querySelector(\"#predictionFirst\").querySelector(\".prediction-table-data\").appendChild(mainDiv);\n      } else if (driver.result > mid_grid && driver.result != 0) {\n        document.querySelector(\"#predictionSecond\").querySelector(\".prediction-table-data\").appendChild(mainDiv);\n      }\n    }\n  });\n  if (nextRace) {\n    document.querySelectorAll(\".position-prediction\").forEach(function (elem) {\n      elem.classList.add(\"d-none\");\n    });\n    document.querySelectorAll(\".driver-prediction\").forEach(function (elem) {\n      elem.style.width = \"75%\";\n    });\n  } else {\n    document.querySelectorAll(\".position-prediction\").forEach(function (elem) {\n      elem.classList.remove(\"d-none\");\n    });\n    document.querySelectorAll(\".driver-prediction\").forEach(function (elem) {\n      elem.style.width = \"50%\";\n    });\n  }\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/frontend/predictions.js?");

/***/ }),

/***/ "./src/js/frontend/renderer.js":
/*!*************************************!*\
  !*** ./src/js/frontend/renderer.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   custom_team: () => (/* binding */ custom_team),\n/* harmony export */   factory: () => (/* binding */ factory),\n/* harmony export */   first_show_animation: () => (/* binding */ first_show_animation),\n/* harmony export */   game_version: () => (/* binding */ game_version),\n/* harmony export */   manageSaveButton: () => (/* binding */ manageSaveButton),\n/* harmony export */   socket: () => (/* binding */ socket),\n/* harmony export */   updateFront: () => (/* binding */ updateFront)\n/* harmony export */ });\n/* harmony import */ var marked__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! marked */ \"./node_modules/marked/lib/marked.esm.js\");\n/* harmony import */ var _teams__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./teams */ \"./src/js/frontend/teams.js\");\n/* harmony import */ var _seasonViewer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./seasonViewer */ \"./src/js/frontend/seasonViewer.js\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./config */ \"./src/js/frontend/config.js\");\n/* harmony import */ var _transfers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./transfers */ \"./src/js/frontend/transfers.js\");\n/* harmony import */ var _calendar__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./calendar */ \"./src/js/frontend/calendar.js\");\n/* harmony import */ var _performance__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./performance */ \"./src/js/frontend/performance.js\");\n/* harmony import */ var _predictions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./predictions */ \"./src/js/frontend/predictions.js\");\n/* harmony import */ var _stats__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./stats */ \"./src/js/frontend/stats.js\");\n/* harmony import */ var _head2head__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./head2head */ \"./src/js/frontend/head2head.js\");\n/* harmony import */ var _backend_commandFactory__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../backend/commandFactory */ \"./src/js/backend/commandFactory.js\");\n/* harmony import */ var _backend_UESaveHandler__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../backend/UESaveHandler */ \"./src/js/backend/UESaveHandler.js\");\n/* harmony import */ var _backend_dbManager__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../backend/dbManager */ \"./src/js/backend/dbManager.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst names_configs = {\n  \"visarb\": \"VISA CASHAPP RB\",\n  \"toyota\": \"TOYOTA\",\n  \"hugo\": \"HUGO BOSS\",\n  \"alphatauri\": \"ALPHA TAURI\",\n  \"brawn\": \"BRAWN GP\",\n  \"porsche\": \"PORSCHE\",\n  \"alpine\": \"ALPINE\",\n  \"renault\": \"RENAULT\",\n  \"andretti\": \"ANDRETTI\",\n  \"lotus\": \"LOTUS\",\n  \"alfa\": \"ALFA ROMEO\",\n  \"audi\": \"AUDI\",\n  \"sauber\": \"SAUBER\",\n  \"stake\": \"STAKE SAUBER\"\n};\nconst pretty_names = {\n  \"visarb\": \"Visa Cashapp RB\",\n  \"toyota\": \"Toyota\",\n  \"hugo\": \"Hugo Boss\",\n  \"alphatauri\": \"Alpha Tauri\",\n  \"brawn\": \"Brawn GP\",\n  \"porsche\": \"Porsche\",\n  \"alpine\": \"Alpine\",\n  \"renault\": \"Renault\",\n  \"andretti\": \"Andretti\",\n  \"lotus\": \"Lotus\",\n  \"alfa\": \"Alfa Romeo\",\n  \"audi\": \"Audi\",\n  \"sauber\": \"Sauber\",\n  \"stake\": \"Stake Sauber\"\n};\nconst abreviations_for_replacements = {\n  \"visarb\": \"VCARB\",\n  \"toyota\": \"TOY\",\n  \"hugo\": \"HUGO\",\n  \"alphatauri\": \"AT\",\n  \"brawn\": \"BGP\",\n  \"porsche\": \"POR\",\n  \"alpine\": \"ALP\",\n  \"renault\": \"REN\",\n  \"andretti\": \"AND\",\n  \"lotus\": \"LOT\",\n  \"alfa\": \"ALFA\",\n  \"audi\": \"AUDI\",\n  \"sauber\": \"SAU\",\n  \"stake\": \"STK\"\n};\nconst logos_configs = {\n  \"visarb\": \"../assets/images/visarb.png\",\n  \"toyota\": \"../assets/images/toyota.png\",\n  \"hugo\": \"../assets/images/hugoboss.png\",\n  \"alphatauri\": \"../assets/images/alphatauri.png\",\n  \"brawn\": \"../assets/images/brawn.png\",\n  \"porsche\": \"../assets/images/porsche.png\",\n  \"alpine\": \"../assets/images/alpine.png\",\n  \"renault\": \"../assets/images/renault.png\",\n  \"andretti\": \"../assets/images/andretti.png\",\n  \"lotus\": \"../assets/images/lotus.png\",\n  \"alfa\": \"../assets/images/alfaromeo.png\",\n  \"audi\": \"../assets/images/audi.png\",\n  \"sauber\": \"../assets/images/sauber.png\",\n  \"stake\": \"../assets/images/kick.png\"\n};\nconst logos_classes_configs = {\n  \"visarb\": \"visarblogo\",\n  \"toyota\": \"toyotalogo\",\n  \"hugo\": \"hugologo\",\n  \"alphatauri\": \"alphataurilogo\",\n  \"porsche\": \"porschelogo\",\n  \"brawn\": \"brawnlogo\",\n  \"alpine\": \"alpinelogo\",\n  \"renault\": \"ferrarilogo\",\n  \"andretti\": \"andrettilogo\",\n  \"lotus\": \"lotuslogo\",\n  \"alfa\": \"alfalogo\",\n  \"audi\": \"audilogo\",\n  \"sauber\": \"sauberlogo\",\n  \"stake\": \"alfalogo\"\n};\nconst driverTransferPill = document.getElementById(\"transferpill\");\nconst editStatsPill = document.getElementById(\"statspill\");\nconst CalendarPill = document.getElementById(\"calendarpill\");\nconst carPill = document.getElementById(\"carpill\");\nconst viewPill = document.getElementById(\"viewerpill\");\nconst h2hPill = document.getElementById(\"h2hpill\");\nconst constructorsPill = document.getElementById(\"constructorspill\");\nconst predictPill = document.getElementById(\"predictpill\");\nconst editorPill = document.getElementById(\"editorPill\");\nconst gamePill = document.getElementById(\"gamePill\");\nconst driverTransferDiv = document.getElementById(\"driver_transfers\");\nconst editStatsDiv = document.getElementById(\"edit_stats\");\nconst customCalendarDiv = document.getElementById(\"custom_calendar\");\nconst carPerformanceDiv = document.getElementById(\"car_performance\");\nconst viewDiv = document.getElementById(\"season_viewer\");\nconst h2hDiv = document.getElementById(\"head2head_viewer\");\nconst teamsDiv = document.getElementById(\"edit_teams\");\nconst predictDiv = document.getElementById(\"predict_results\");\nconst patchNotesBody = document.getElementById(\"patchNotesBody\");\nconst selectImageButton = document.getElementById('selectImage');\nconst scriptsArray = [predictDiv, h2hDiv, viewDiv, driverTransferDiv, editStatsDiv, customCalendarDiv, carPerformanceDiv, teamsDiv];\nconst dropDownMenu = document.getElementById(\"dropdownMenu\");\nconst notificationPanel = document.getElementById(\"notificationPanel\");\nconst logButton = document.getElementById(\"logFileButton\");\nconst status = document.querySelector(\".status-info\");\nconst updateInfo = document.querySelector(\".update-info\");\nconst noNotifications = [\"Custom Engines fetched\", \"Cars fetched\", \"Part values fetched\", \"Parts stats fetched\", \"24 Year\", \"Game Year\", \"Performance fetched\", \"Season performance fetched\", \"Config\", \"ERROR\", \"Montecarlo fetched\", \"TeamData Fetched\", \"Progress\", \"JIC\", \"Calendar fetched\", \"Contract fetched\", \"Staff Fetched\", \"Engines fetched\", \"Results fetched\", \"Year fetched\", \"Numbers fetched\", \"H2H fetched\", \"DriversH2H fetched\", \"H2HDriver fetched\", \"Retirement fetched\", \"Prediction Fetched\", \"Events to Predict Fetched\", \"Events to Predict Modal Fetched\"];\nlet difficulty_dict = {\n  \"-2\": \"Custom\",\n  0: \"default\",\n  1: \"reduced weight\",\n  2: \"extra-hard\",\n  3: \"brutal\",\n  4: \"unfair\",\n  5: \"insane\",\n  6: \"impossible\"\n};\nlet inverted_difficulty_dict = {\n  \"disabled\": -1,\n  \"default\": 0,\n  \"reduced weight\": 1,\n  \"extra-hard\": 2,\n  \"brutal\": 3,\n  \"unfair\": 4,\n  \"insane\": 5,\n  \"impossible\": 6\n};\nlet difcultyCustom = \"default\";\nlet conn = 0;\nlet game_version = 2023;\nlet custom_team = false;\nlet customIconPath = null;\nlet firstShow = false;\nlet configCopy;\nlet latestTag;\nlet isSaveSelected = 0;\nlet scriptSelected = 0;\nlet divBlocking = 1;\nlet versionNow;\nconst versionPanel = document.querySelector('.version-panel');\nconst parchModalTitle = document.getElementById(\"patchModalTitle\");\nconst repoOwner = 'IUrreta';\nconst repoName = 'DatabaseEditor';\nconst factory = new _backend_commandFactory__WEBPACK_IMPORTED_MODULE_10__.CommandFactory();\nconst socket = new WebSocket('ws://localhost:8765/');\n/**\r\n * When the socket is opened sends a connect message to the backend\r\n */\nsocket.onopen = () => {\n  //console.log('Conexión establecida.');\n  let data = {\n    command: \"connect\"\n  };\n  socket.send(JSON.stringify(data));\n};\n\n/**\r\n * get the patch notes from the actual version fro the github api\r\n */\nasync function getPatchNotes() {\n  try {\n    if (versionNow.slice(-3) !== \"dev\") {\n      let response = await fetch(`https://api.github.com/repos/${repoOwner}/${repoName}/releases/tags/${versionNow}`);\n      let data = await response.json();\n      let changes = data.body;\n      let changesHTML = (0,marked__WEBPACK_IMPORTED_MODULE_0__.marked)(changes);\n      patchNotesBody.innerHTML = changesHTML;\n      let h1Elements = patchNotesBody.querySelectorAll(\"h1\");\n      h1Elements.forEach(function (h1Element) {\n        let h4Element = document.createElement(\"h4\");\n        h4Element.textContent = h1Element.textContent;\n        h4Element.classList.add(\"bold-font\");\n        patchNotesBody.replaceChild(h4Element, h1Element);\n      });\n      let h2Elements = patchNotesBody.querySelectorAll(\"h2\");\n      h2Elements.forEach(function (h1Element) {\n        let h4Element = document.createElement(\"h4\");\n        h4Element.textContent = h1Element.textContent;\n        h4Element.classList.add(\"bold-font\");\n        patchNotesBody.replaceChild(h4Element, h1Element);\n      });\n    }\n  } catch {\n    console.log(\"Couldn't find patch notes\");\n  }\n}\n\n/**\r\n * Places and manages the notifications that appear in the tool\r\n * @param {string} noti message of the notification\r\n * @param {bool} error if the notification is an error or not\r\n */\nfunction update_notifications(noti, code) {\n  let newNoti;\n  newNoti = document.createElement('div');\n  newNoti.className = 'notification';\n  newNoti.textContent = noti;\n  let toast = createToast(noti, code);\n  setTimeout(function () {\n    toast.classList.remove(\"myShow\");\n  }, 300);\n  notificationPanel.appendChild(toast);\n  if (code !== \"error\") {\n    setTimeout(function () {\n      toast.classList.add(\"hide\");\n      setTimeout(function () {\n        notificationPanel.removeChild(toast);\n      }, 280);\n    }, 4000);\n  }\n}\n\n/**\r\n * Creates the toast with the message and the error status\r\n * @param {string} msg string with the notification message\r\n * @param {boolean} err if it's an error or not\r\n * @returns \r\n */\nfunction createToast(msg, cod) {\n  let toastFull = document.createElement('div');\n  let toastIcon = document.createElement('div');\n  let toastBodyDiv = document.createElement('div');\n  let generalDiv = document.createElement('div');\n  let icon = document.createElement('i');\n  let cross = document.createElement('i');\n  generalDiv.classList.add('d-flex', \"align-items-center\");\n  // Asignar clases y atributos\n  toastFull.classList.add('toast', \"d-flex\", \"myShow\", \"d-block\", \"custom-toast\");\n  toastFull.style.flexDirection = \"column\";\n  toastFull.setAttribute('role', 'alert');\n  toastFull.setAttribute('aria-live', 'assertive');\n  toastFull.setAttribute('aria-atomic', 'true');\n  toastIcon.classList.add(\"toast-icon\");\n  if (cod === \"ok\") {\n    icon.className = \"bi bi-check-circle\";\n    toastIcon.classList.add(\"success\");\n  } else if (cod === \"error\" || cod === \"lighterror\") {\n    icon.className = \"bi bi-x-circle\";\n    toastIcon.classList.add(\"error\");\n  } else if (cod === \"monaco\") {\n    icon.className = \"bi bi-heartbreak\";\n    toastIcon.classList.add(\"error\");\n  }\n  toastIcon.appendChild(icon);\n  toastBodyDiv.classList.add('d-flex', 'toast-body', \"custom-toast-body\");\n  toastBodyDiv.textContent = msg;\n  toastBodyDiv.style.opacity = \"1\";\n  toastBodyDiv.style.color = \"white\";\n  toastBodyDiv.style.zIndex = \"6\";\n  generalDiv.appendChild(toastIcon);\n  generalDiv.appendChild(toastBodyDiv);\n  toastFull.appendChild(generalDiv);\n  toastFull.appendChild(cross);\n  cross.className = \"bi bi-x custom-toast-cross\";\n  cross.addEventListener(\"click\", function () {\n    toastFull.classList.add(\"hide\");\n    setTimeout(function () {\n      notificationPanel.removeChild(toastFull);\n    }, 280);\n  });\n  return toastFull;\n}\nfunction editModeHandler() {\n  let stats = \"\";\n  document.querySelectorAll(\".elegible\").forEach(function (elem) {\n    stats += elem.value + \" \";\n  });\n  stats = stats.slice(0, -1);\n  let id;\n  if (document.querySelector(\".clicked\").dataset.driverid) {\n    id = document.querySelector(\".clicked\").dataset.driverid;\n  }\n  let driverName = (0,_stats__WEBPACK_IMPORTED_MODULE_8__.getName)(document.querySelector(\".clicked .name-div-edit-stats\"));\n  document.querySelector(\".clicked\").dataset.stats = stats;\n  let globalMentality = 2;\n  let mentality = -1;\n  if (document.querySelector(\".clicked\").dataset.mentality0) {\n    mentality = \"\";\n    document.querySelectorAll(\".mentality-level-indicator\").forEach(function (elem, index) {\n      mentality += elem.dataset.value + \" \";\n      document.querySelector(\".clicked\").dataset[\"mentality\" + index] = elem.dataset.value;\n      globalMentality += parseInt(elem.dataset.value);\n    });\n    globalMentality = Math.floor(globalMentality / 3);\n  }\n  document.querySelector(\".clicked\").dataset.globalMentality = globalMentality;\n  let new_ovr = (0,_stats__WEBPACK_IMPORTED_MODULE_8__.calculateOverall)(stats, _stats__WEBPACK_IMPORTED_MODULE_8__.typeOverall, _config__WEBPACK_IMPORTED_MODULE_3__.mentality_to_global_menatality[globalMentality]);\n  document.querySelector(\".clicked\").childNodes[1].childNodes[0].textContent = \"\";\n  if (new_ovr[1] !== new_ovr[0]) {\n    document.querySelector(\".clicked\").childNodes[1].childNodes[0].textContent = new_ovr[1];\n  }\n  document.querySelector(\".clicked\").childNodes[1].childNodes[1].textContent = new_ovr[0];\n  let retirement = document.querySelector(\".actual-retirement\").textContent.split(\" \")[1];\n  let age = document.querySelector(\".actual-age\").textContent.split(\" \")[1];\n  document.querySelector(\".clicked\").dataset.retirement = retirement;\n  let ageGap = parseInt(document.querySelector(\".clicked\").dataset.age - age);\n  document.querySelector(\".clicked\").dataset.age = age;\n  let newName = document.querySelector(\"#driverStatsTitle\").value;\n  if (newName === document.querySelector(\".clicked\").dataset.name) {\n    newName = \"-1\";\n  } else {\n    (0,_transfers__WEBPACK_IMPORTED_MODULE_4__.update_name)(id, newName);\n  }\n  let newCode = document.querySelector(\"#driverCode\").value;\n  if (newCode === document.querySelector(\".clicked\").dataset.code) {\n    newCode = \"-1\";\n  } else {\n    document.querySelector(\".clicked\").dataset.driverCode = newCode;\n  }\n  let driverNum = document.querySelector(\"#numberButton .front-gradient\").textContent;\n  let wants1, superLicense, isRetired;\n  document.querySelector(\".clicked\").dataset.number = driverNum;\n  if (document.querySelector(\"#driverNumber1\").checked) {\n    wants1 = 1;\n    document.querySelector(\".clicked\").dataset.numWC = 1;\n  } else {\n    wants1 = 0;\n    document.querySelector(\".clicked\").dataset.numWC = 0;\n  }\n  if (document.querySelector(\"#retiredInput\").checked) {\n    isRetired = 1;\n    document.querySelector(\".clicked\").dataset.isRetired = 1;\n  } else {\n    isRetired = 0;\n    document.querySelector(\".clicked\").dataset.isRetired = 0;\n  }\n  document.querySelector(\".clicked\").dataset.numWC = wants1;\n  if (document.getElementById(\"superLicense\").checked) {\n    superLicense = 1;\n    document.querySelector(\".clicked\").dataset.superLicense = 1;\n  } else {\n    superLicense = 0;\n    document.querySelector(\".clicked\").dataset.superLicense = 0;\n  }\n  let marketability = document.getElementById(\"marketabilityInput\").value;\n  let dataStats = {\n    driverID: id,\n    driver: driverName,\n    statsArray: stats,\n    typeStaff: _stats__WEBPACK_IMPORTED_MODULE_8__.typeEdit,\n    retirement: retirement,\n    age: ageGap,\n    isRetired: isRetired,\n    driverNum: driverNum,\n    wants1: wants1,\n    mentality: mentality,\n    superLicense: superLicense,\n    marketability: marketability,\n    newName: newName,\n    newCode: newCode\n  };\n  const message = {\n    command: 'editStats',\n    data: dataStats\n  };\n  const command = factory.createCommand(message);\n  command.execute();\n}\nfunction calendarModeHandler() {\n  let dataCodesString = '';\n  document.querySelectorAll(\".race-calendar\").forEach(race => {\n    dataCodesString += race.dataset.trackid.toString() + race.dataset.rainP.toString() + race.dataset.rainQ.toString() + race.dataset.rainR.toString() + race.dataset.type.toString() + race.dataset.state.toString() + ' ';\n  });\n  dataCodesString = dataCodesString.trim();\n  let dataCalendar = {\n    calendarCodes: dataCodesString\n  };\n  const message = {\n    command: 'editCalendar',\n    data: dataCalendar\n  };\n  const command = factory.createCommand(message);\n  command.execute();\n}\nfunction teamsModeHandler() {\n  let seasonObjData = document.querySelector(\"#seasonObjectiveInput\").value;\n  let longTermData = _teams__WEBPACK_IMPORTED_MODULE_1__.longTermObj;\n  let longTermYearData = document.querySelector(\"#longTermInput\").value;\n  let teamBudgetData = document.querySelector(\"#teamBudgetInput\").value.replace(/[$,]/g, \"\");\n  let costCapTransactionData = _teams__WEBPACK_IMPORTED_MODULE_1__.originalCostCap - document.querySelector(\"#costCapInput\").value.replace(/[$,]/g, \"\");\n  let confidenceData = document.querySelector(\"#confidenceInput\").value;\n  let facilitiesData = (0,_teams__WEBPACK_IMPORTED_MODULE_1__.gather_team_data)();\n  let pitCrew = (0,_teams__WEBPACK_IMPORTED_MODULE_1__.gather_pit_crew)();\n  let engine = document.querySelector(\"#engineButton\").dataset.value;\n  let data = {\n    teamID: _teams__WEBPACK_IMPORTED_MODULE_1__.teamCod,\n    facilities: facilitiesData,\n    seasonObj: seasonObjData,\n    longTermObj: longTermData,\n    longTermYear: longTermYearData,\n    teamBudget: teamBudgetData,\n    costCapEdit: costCapTransactionData,\n    confidence: confidenceData,\n    pitCrew: pitCrew,\n    engine: engine,\n    teamName: _config__WEBPACK_IMPORTED_MODULE_3__.default_dict[_teams__WEBPACK_IMPORTED_MODULE_1__.teamCod]\n  };\n  const message = {\n    command: 'editTeam',\n    data: data\n  };\n  const command = factory.createCommand(message);\n  command.execute();\n}\nfunction performanceModeHandler() {\n  let data;\n  if (_performance__WEBPACK_IMPORTED_MODULE_6__.teamsEngine === \"teams\") {\n    let parts = {};\n    let n_parts_designs = {};\n    let loadouts = {};\n    document.querySelectorAll(\".part-performance\").forEach(function (elem) {\n      let part = elem.dataset.part;\n      let partID = elem.dataset.partid;\n      let loadout1 = elem.dataset.loadout1;\n      let loadout2 = elem.dataset.loadout2;\n      let stats = {};\n      elem.querySelectorAll(\".part-performance-stat\").forEach(function (stat) {\n        if (stat.dataset.attribute !== \"-1\") {\n          let statNum = stat.dataset.attribute;\n          let value = stat.querySelector(\"input\").value.split(\" \")[0];\n          stats[statNum] = value;\n        }\n      });\n      stats[\"designEditing\"] = elem.querySelector(\".part-subtitle\").dataset.editing;\n      parts[part] = stats;\n      loadouts[partID] = [loadout1, loadout2];\n    });\n    document.querySelectorAll(\".one-part\").forEach(function (elem) {\n      let designID = elem.querySelector(\".one-part-name\").dataset.designId;\n      let number = elem.querySelector(\".n-parts\").innerText.split(\"x\")[1];\n      n_parts_designs[designID] = number;\n    });\n    data = {\n      teamID: _performance__WEBPACK_IMPORTED_MODULE_6__.teamSelected,\n      parts: parts,\n      n_parts_designs: n_parts_designs,\n      loadouts: loadouts,\n      teamName: document.querySelector(\".selected\").dataset.teamname\n    };\n    const message = {\n      command: 'editPerformance',\n      data: data\n    };\n    const command = factory.createCommand(message);\n    command.execute();\n  } else if (_performance__WEBPACK_IMPORTED_MODULE_6__.teamsEngine === \"engines\") {\n    let engineData = (0,_performance__WEBPACK_IMPORTED_MODULE_6__.gather_engines_data)();\n    data = {\n      engines: engineData\n    };\n    const message = {\n      command: 'editEngine',\n      data: data\n    };\n    const command = factory.createCommand(message);\n    command.execute();\n  }\n}\nfunction first_show_animation() {\n  let button = document.querySelector(\".save-button\");\n  if (!firstShow) {\n    firstShow = true;\n    button.classList.add(\"first-show\");\n    setTimeout(function () {\n      button.classList.remove('first-show');\n    }, 3000);\n  }\n}\nfunction manageSaveButton(show, mode) {\n  let button = document.querySelector(\".save-button\");\n  button.removeEventListener(\"click\", editModeHandler);\n  button.removeEventListener(\"click\", calendarModeHandler);\n  button.removeEventListener(\"click\", teamsModeHandler);\n  button.removeEventListener(\"click\", performanceModeHandler);\n  if (!show) {\n    button.classList.add(\"d-none\");\n  } else {\n    button.classList.remove(\"d-none\");\n    first_show_animation();\n  }\n  if (mode === \"stats\") {\n    button.addEventListener(\"click\", editModeHandler);\n  } else if (mode === \"calendar\") {\n    button.addEventListener(\"click\", calendarModeHandler);\n  } else if (mode === \"teams\") {\n    button.addEventListener(\"click\", teamsModeHandler);\n  } else if (mode === \"performance\") {\n    button.addEventListener(\"click\", performanceModeHandler);\n  }\n}\nfunction updateFront(data) {\n  console.log(\"UPDATING FRONT\");\n  console.log(data);\n  let responseTyppe = data.responseMessage;\n  let message = data.content;\n  let handler = messageHandlers[responseTyppe];\n  if (handler) {\n    handler(message);\n  }\n}\nconst messageHandlers = {\n  \"ERROR\": message => {\n    update_notifications(message[1], \"error\");\n  },\n  \"Save loaded succesfully\": message => {\n    isSaveSelected = 1;\n    (0,_transfers__WEBPACK_IMPORTED_MODULE_4__.remove_drivers)();\n    (0,_stats__WEBPACK_IMPORTED_MODULE_8__.removeStatsDrivers)();\n    (0,_stats__WEBPACK_IMPORTED_MODULE_8__.listenersStaffGroups)();\n    (0,_transfers__WEBPACK_IMPORTED_MODULE_4__.place_drivers)(message);\n    (0,_transfers__WEBPACK_IMPORTED_MODULE_4__.sortList)(\"free-drivers\");\n    (0,_stats__WEBPACK_IMPORTED_MODULE_8__.place_drivers_editStats)(message);\n  },\n  \"Staff fetched\": message => {\n    (0,_transfers__WEBPACK_IMPORTED_MODULE_4__.place_staff)(message);\n    (0,_transfers__WEBPACK_IMPORTED_MODULE_4__.sortList)(\"free-staff\");\n    (0,_stats__WEBPACK_IMPORTED_MODULE_8__.place_staff_editStats)(message);\n  },\n  \"Calendar fetched\": message => {\n    (0,_calendar__WEBPACK_IMPORTED_MODULE_5__.load_calendar)(message);\n  },\n  \"Engines fetched\": message => {\n    (0,_performance__WEBPACK_IMPORTED_MODULE_6__.manage_engineStats)(message[0]);\n    update_engine_allocations(message);\n  },\n  \"Contract fetched\": message => {\n    (0,_transfers__WEBPACK_IMPORTED_MODULE_4__.manage_modal)(message);\n  },\n  \"Year fetched\": message => {\n    (0,_seasonViewer__WEBPACK_IMPORTED_MODULE_2__.generateYearsMenu)(message);\n  },\n  \"Numbers fetched\": message => {\n    (0,_transfers__WEBPACK_IMPORTED_MODULE_4__.loadNumbers)(message);\n  },\n  \"H2H fetched\": message => {\n    (0,_head2head__WEBPACK_IMPORTED_MODULE_9__.sprintsListeners)();\n    (0,_head2head__WEBPACK_IMPORTED_MODULE_9__.racePaceListener)();\n    (0,_head2head__WEBPACK_IMPORTED_MODULE_9__.qualiPaceListener)();\n    (0,_head2head__WEBPACK_IMPORTED_MODULE_9__.manage_h2h_bars)(message);\n  },\n  \"DriversH2H fetched\": message => {\n    (0,_head2head__WEBPACK_IMPORTED_MODULE_9__.load_drivers_h2h)(message);\n  },\n  \"H2HDriver fetched\": message => {\n    (0,_head2head__WEBPACK_IMPORTED_MODULE_9__.load_labels_initialize_graphs)(message);\n  },\n  \"Results fetched\": message => {\n    (0,_seasonViewer__WEBPACK_IMPORTED_MODULE_2__.new_drivers_table)(message[0]);\n    (0,_seasonViewer__WEBPACK_IMPORTED_MODULE_2__.new_load_drivers_table)(message.slice(1));\n    (0,_seasonViewer__WEBPACK_IMPORTED_MODULE_2__.new_teams_table)(message[0]);\n    (0,_seasonViewer__WEBPACK_IMPORTED_MODULE_2__.new_load_teams_table)(message.slice(1));\n  },\n  \"TeamData fetched\": message => {\n    (0,_teams__WEBPACK_IMPORTED_MODULE_1__.fillLevels)(message);\n  },\n  \"Events to Predict Fetched\": message => {\n    (0,_predictions__WEBPACK_IMPORTED_MODULE_7__.placeRaces)(message.slice(1));\n  },\n  \"Events to Predict Modal Fetched\": message => {\n    (0,_predictions__WEBPACK_IMPORTED_MODULE_7__.placeRacesInModal)(message.slice(1));\n  },\n  \"Prediction Fetched\": message => {\n    predictDrivers(message.slice(1));\n  },\n  \"Montecarlo Fetched\": message => {\n    loadMontecarlo(message.slice(1));\n  },\n  \"Progress\": message => {\n    manageProgress(message.slice(1));\n  },\n  \"Config\": message => {\n    manage_config(message.slice(1));\n  },\n  \"24 Year\": message => {\n    manage_config(message, true);\n  },\n  \"Performance fetched\": message => {\n    (0,_performance__WEBPACK_IMPORTED_MODULE_6__.load_performance)(message[0]);\n    (0,_performance__WEBPACK_IMPORTED_MODULE_6__.load_attributes)(message[1]);\n    //wait 100 ms\n    setTimeout(function () {\n      (0,_performance__WEBPACK_IMPORTED_MODULE_6__.order_by)(\"overall\");\n    }, 100);\n  },\n  \"Season performance fetched\": message => {\n    (0,_performance__WEBPACK_IMPORTED_MODULE_6__.load_performance_graph)(message);\n  },\n  \"Parts stats fetched\": message => {\n    (0,_performance__WEBPACK_IMPORTED_MODULE_6__.load_parts_stats)(message[0]);\n    (0,_performance__WEBPACK_IMPORTED_MODULE_6__.load_parts_list)(message[1]);\n    (0,_performance__WEBPACK_IMPORTED_MODULE_6__.update_max_design)(message[2]);\n  },\n  \"Game Year\": message => {\n    manage_game_year(message);\n  },\n  \"Part values fetched\": message => {\n    (0,_performance__WEBPACK_IMPORTED_MODULE_6__.load_one_part)(message);\n  },\n  \"Cars fetched\": message => {\n    (0,_performance__WEBPACK_IMPORTED_MODULE_6__.load_cars)(message[0]);\n    (0,_performance__WEBPACK_IMPORTED_MODULE_6__.load_car_attributes)(message[1]);\n    (0,_performance__WEBPACK_IMPORTED_MODULE_6__.order_by)(\"overall\");\n  },\n  \"Custom Engines fetched\": message => {\n    (0,_performance__WEBPACK_IMPORTED_MODULE_6__.load_custom_engines)(message.slice(1));\n  }\n};\nfunction update_engine_allocations(message) {\n  let engine_map = {};\n  message[1].forEach(function (team) {\n    engine_map[team[0]] = team[1];\n  });\n  (0,_seasonViewer__WEBPACK_IMPORTED_MODULE_2__.setEngineAllocations)(engine_map);\n  for (let key in _seasonViewer__WEBPACK_IMPORTED_MODULE_2__.engine_names) {\n    if (key > 10) {\n      (0,_seasonViewer__WEBPACK_IMPORTED_MODULE_2__.deleteEngineName)(key);\n    }\n  }\n  message[0].forEach(function (engine) {\n    if (engine[0] > 10) {\n      (0,_seasonViewer__WEBPACK_IMPORTED_MODULE_2__.addEngineName)(engine[0], engine[2]);\n    }\n  });\n}\n\n/**\r\n * Handles the receiving end from the messages sent from backend\r\n * @param {string} event the message tha tcomes fro the backend\r\n */\nsocket.onmessage = event => {\n  let message = JSON.parse(event.data);\n  let handler = messageHandlers[message[0]];\n  if (handler) {\n    handler(message);\n  }\n  if (!noNotifications.includes(message[0])) {\n    update_notifications(message[0], \"ok\");\n  }\n};\n\n/**\r\n * Opens the log file\r\n */\nlogButton.addEventListener(\"click\", function () {\n  window.location.href = '../log.txt';\n});\nfunction resizeWindowToHeight(mode) {\n  if (mode === \"11teams\") {\n    document.querySelectorAll(\".main-resizable\").forEach(function (elem) {\n      elem.style.height = \"720.5px\";\n      if (elem.id === \"enginesPerformance\") {\n        elem.style.maxHeight = \"720px\";\n      }\n    });\n    document.querySelectorAll(\".staff-list\").forEach(function (elem) {\n      elem.style.height = \"672px\";\n    });\n    document.querySelectorAll(\".parts-list\").forEach(function (elem) {\n      elem.classList.remove(\"noCustom\");\n    });\n    document.getElementById(\"free-drivers\").style.height = \"672px\";\n    document.getElementById(\"free-staff\").style.height = \"672px\";\n    document.getElementById(\"raceMenu\").style.height = \"686px\";\n  } else if (mode === \"10teams\") {\n    document.querySelectorAll(\".main-resizable\").forEach(function (elem) {\n      elem.style.height = \"660px\";\n      if (elem.id === \"enginesPerformance\") {\n        elem.style.maxHeight = \"660px\";\n      }\n    });\n    document.querySelectorAll(\".parts-list\").forEach(function (elem) {\n      elem.classList.add(\"noCustom\");\n    });\n    document.querySelectorAll(\".staff-list\").forEach(function (elem) {\n      elem.style.height = \"612px\";\n    });\n    document.getElementById(\"free-drivers\").style.height = \"612px\";\n    document.getElementById(\"free-staff\").style.height = \"612px\";\n    document.getElementById(\"raceMenu\").style.height = \"660px\";\n  }\n}\nfunction manage_game_year(info) {\n  let year = info[0];\n  if (year === \"24\") {\n    document.getElementById(\"year23\").classList.remove(\"activated\");\n    document.getElementById(\"year24\").classList.add(\"activated\");\n    document.getElementById(\"drs24\").classList.remove(\"d-none\");\n    document.getElementById(\"drs24\").dataset.attribute = \"3\";\n    game_version = 2024;\n    (0,_predictions__WEBPACK_IMPORTED_MODULE_7__.setMaxRaces)(24);\n    manage_custom_team(info);\n    document.querySelectorAll(\".brake-cooling-replace\").forEach(function (elem) {\n      elem.textContent = \"Tyre preservation\";\n    });\n    document.querySelectorAll(\".engine24\").forEach(function (elem) {\n      elem.classList.add(\"d-none\");\n    });\n    document.querySelector(\".only-mentality\").classList.remove(\"d-none\");\n  } else if (year === \"23\") {\n    resizeWindowToHeight(\"10teams\");\n    document.getElementById(\"year24\").classList.remove(\"activated\");\n    document.getElementById(\"year23\").classList.add(\"activated\");\n    document.getElementById(\"drs24\").classList.add(\"d-none\");\n    document.getElementById(\"drs24\").dataset.attribute = \"-1\";\n    if (\"32\" in _config__WEBPACK_IMPORTED_MODULE_3__.combined_dict) {\n      delete _config__WEBPACK_IMPORTED_MODULE_3__.combined_dict[32];\n    }\n    game_version = 2023;\n    (0,_predictions__WEBPACK_IMPORTED_MODULE_7__.setMidGrid)(10);\n    (0,_predictions__WEBPACK_IMPORTED_MODULE_7__.setMaxRaces)(23);\n    (0,_predictions__WEBPACK_IMPORTED_MODULE_7__.setRelativeGrid)(5);\n    manage_custom_team([null, null]);\n    document.querySelectorAll(\".brake-cooling-replace\").forEach(function (elem) {\n      elem.textContent = \"Brake cooling\";\n    });\n    document.querySelectorAll(\".engine24\").forEach(function (elem) {\n      elem.classList.remove(\"d-none\");\n    });\n    document.querySelector(\".only-mentality\").classList.add(\"d-none\");\n  }\n  replace_modal_teams(game_version);\n}\nfunction manage_custom_team(nameColor) {\n  if (nameColor[1] !== null) {\n    resizeWindowToHeight(\"11teams\");\n    custom_team = true;\n    _config__WEBPACK_IMPORTED_MODULE_3__.combined_dict[32] = nameColor[1];\n    _config__WEBPACK_IMPORTED_MODULE_3__.abreviations_dict[32] = nameColor[1].slice(0, 3).toUpperCase();\n    document.querySelectorAll(\".ct-teamname\").forEach(function (elem) {\n      elem.dataset.teamshow = nameColor[1];\n    });\n    document.getElementById(\"customTeamTransfers\").classList.remove(\"d-none\");\n    document.getElementById(\"customTeamPerformance\").classList.remove(\"d-none\");\n    document.getElementById(\"customTeamDropdown\").classList.remove(\"d-none\");\n    document.getElementById(\"customTeamComparison\").classList.remove(\"d-none\");\n    document.getElementById(\"customTeamContract\").classList.remove(\"d-none\");\n    document.getElementById(\"customizeTeam\").classList.remove(\"d-none\");\n    document.querySelectorAll(\".ct-replace\").forEach(function (elem) {\n      elem.textContent = nameColor[1].toUpperCase();\n    });\n    document.querySelectorAll(\".custom-car-performance\").forEach(function (elem) {\n      elem.classList.remove(\"d-none\");\n    });\n    replace_custom_team_color(nameColor[2], nameColor[3]);\n    (0,_predictions__WEBPACK_IMPORTED_MODULE_7__.setMidGrid)(11);\n    (0,_predictions__WEBPACK_IMPORTED_MODULE_7__.setRelativeGrid)(4.54);\n  } else {\n    resizeWindowToHeight(\"10teams\");\n    custom_team = false;\n    document.getElementById(\"customTeamTransfers\").classList.add(\"d-none\");\n    document.getElementById(\"customTeamPerformance\").classList.add(\"d-none\");\n    document.getElementById(\"customTeamDropdown\").classList.add(\"d-none\");\n    document.getElementById(\"customTeamComparison\").classList.add(\"d-none\");\n    document.getElementById(\"customTeamContract\").classList.add(\"d-none\");\n    document.getElementById(\"customizeTeam\").classList.add(\"d-none\");\n    document.querySelectorAll(\".custom-car-performance\").forEach(function (elem) {\n      elem.classList.add(\"d-none\");\n    });\n    (0,_predictions__WEBPACK_IMPORTED_MODULE_7__.setMidGrid)(10);\n    (0,_predictions__WEBPACK_IMPORTED_MODULE_7__.setRelativeGrid)(5);\n    if (\"32\" in _config__WEBPACK_IMPORTED_MODULE_3__.combined_dict) {\n      delete _config__WEBPACK_IMPORTED_MODULE_3__.combined_dict[32];\n    }\n  }\n}\nfunction replace_custom_team_color(primary, secondary) {\n  let root = document.documentElement;\n  root.style.setProperty('--custom-team-primary', primary);\n  root.style.setProperty('--custom-team-secondary', secondary);\n  root.style.setProperty('--custom-team-primary-transparent', primary + \"30\");\n  root.style.setProperty('--custom-team-secondary-transparent', secondary + \"30\");\n  _head2head__WEBPACK_IMPORTED_MODULE_9__.colors_dict[\"320\"] = primary;\n  _head2head__WEBPACK_IMPORTED_MODULE_9__.colors_dict[\"321\"] = secondary;\n  document.getElementById(\"primarySelector\").value = primary;\n  document.getElementById(\"secondarySelector\").value = secondary;\n  document.getElementById(\"primaryReader\").value = primary.toUpperCase();\n  document.getElementById(\"secondaryReader\").value = secondary.toUpperCase();\n}\nselectImageButton.addEventListener('click', () => {\n  fileInput.click();\n});\n\n// Función para manejar la selección de archivo\nfileInput.addEventListener('change', event => {\n  let file = event.target.files[0];\n  if (file) {\n    customIconPath = `../assets/custom/${file.name}`;\n  }\n  document.querySelector(\".logo-preview\").src = customIconPath;\n});\nfunction replace_custom_team_logo(path) {\n  _config__WEBPACK_IMPORTED_MODULE_3__.logos_disc[32] = path;\n  document.querySelectorAll(\".custom-replace\").forEach(function (elem) {\n    elem.src = path;\n  });\n  document.querySelector(\".logo-preview\").src = path;\n  document.getElementById(\"selectImage\").innerText = path.split(\"/\").pop();\n}\nfunction ajustScrollWrapper() {\n  var windowHeight = window.innerHeight - 80;\n  document.querySelector('.scroll-wrapper').style.height = windowHeight + 'px';\n}\nwindow.addEventListener('resize', ajustScrollWrapper);\nwindow.addEventListener('load', ajustScrollWrapper);\ndocument.querySelector(\".gear-container\").addEventListener(\"click\", function () {\n  let configDetailModal = new bootstrap.Modal(document.getElementById('configDetailModal'), {\n    keyboard: false\n  });\n  configDetailModal.show();\n});\nfunction manage_config(info, year_config = false) {\n  document.querySelector(\".bi-gear\").classList.remove(\"hidden\");\n  configCopy = info;\n  manage_config_content(info, year_config);\n}\nfunction replace_all_teams(info) {\n  let teams = info[\"teams\"];\n  alphaTauriReplace(teams[\"alphatauri\"]);\n  alpineReplace(teams[\"alpine\"]);\n  alfaReplace(teams[\"alfa\"]);\n  (0,_seasonViewer__WEBPACK_IMPORTED_MODULE_2__.update_logo)(\"alpine\", logos_configs[teams[\"alpine\"]], teams[\"alpine\"]);\n  (0,_seasonViewer__WEBPACK_IMPORTED_MODULE_2__.update_logo)(\"alfa\", logos_configs[teams[\"alfa\"]], teams[\"alfa\"]);\n  (0,_seasonViewer__WEBPACK_IMPORTED_MODULE_2__.update_logo)(\"alphatauri\", logos_configs[teams[\"alphatauri\"]], teams[\"alphatauri\"]);\n}\nfunction manage_config_content(info, year_config = false) {\n  replace_all_teams(info);\n  if (!year_config) {\n    if (info[\"icon\"]) {\n      replace_custom_team_logo(info[\"icon\"]);\n      customIconPath = info[\"icon\"];\n    }\n    if (info[\"primaryColor\"]) {\n      replace_custom_team_color(info[\"primaryColor\"], info[\"secondaryColor\"]);\n    }\n    if (info[\"mentalityFrozen\"] === 1) {\n      document.getElementById(\"freezeMentalityToggle\").checked = true;\n    } else {\n      document.getElementById(\"freezeMentalityToggle\").checked = false;\n    }\n    if (info[\"refurbish\"] === 1) {\n      document.getElementById(\"refurbishingToggle\").checked = true;\n    } else {\n      document.getElementById(\"refurbishingToggle\").checked = false;\n    }\n    update_mentality_span(info[\"mentalityFrozen\"]);\n    let difficultySlider = document.getElementById(\"difficultySlider\");\n    difficultySlider.value = info[\"difficulty\"];\n    update_difficulty_span(info[\"difficulty\"]);\n    if (info[\"difficulty\"] === -2) {\n      //custom difficulty\n      load_difficulty_warnings(info[\"triggerList\"]);\n    } else {\n      manage_difficulty_warnings(difficulty_dict[parseInt(info[\"difficulty\"])]);\n    }\n    update_refurbish_span(info[\"refurbish\"]);\n  }\n}\ndocument.querySelectorAll(\".color-picker\").forEach(function (elem) {\n  let reader = elem.parentNode.querySelector(\".color-reader\");\n  elem.addEventListener(\"input\", function () {\n    reader.value = elem.value.toUpperCase();\n  });\n  reader.value = elem.value.toUpperCase();\n});\ndocument.querySelectorAll(\".color-reader\").forEach(function (elem) {\n  elem.addEventListener(\"input\", function () {\n    let picker = elem.parentNode.querySelector(\".color-picker\");\n    picker.value = elem.value.toLowerCase();\n  });\n});\nfunction alphaTauriReplace(info) {\n  document.querySelector(\"#alphaTauriReplaceButton\").querySelector(\"button\").textContent = names_configs[info];\n  document.querySelector(\"#alphaTauriReplaceButton\").querySelector(\"button\").dataset.value = info;\n  _config__WEBPACK_IMPORTED_MODULE_3__.combined_dict[8] = pretty_names[info];\n  _config__WEBPACK_IMPORTED_MODULE_3__.abreviations_dict[8] = abreviations_for_replacements[info];\n  document.querySelectorAll(\".at-teamname\").forEach(function (elem) {\n    elem.dataset.teamshow = pretty_names[info];\n  });\n  document.querySelectorAll(\".at-name\").forEach(function (elem) {\n    //if it has the class complete, put names_configs[info], else out VCARB\n    if (info === \"visarb\" && !elem.classList.contains(\"complete\")) {\n      elem.textContent = \"VCARB\";\n    } else {\n      elem.textContent = names_configs[info];\n    }\n  });\n  if (info !== \"alphatauri\") {\n    document.querySelectorAll(\".atlogo-replace\").forEach(function (elem) {\n      if (!elem.classList.contains(\"non-changable\")) {\n        elem.src = logos_configs[info];\n        elem.classList.remove(\"alphataurilogo\");\n        elem.classList.remove(\"toyotalogo\");\n        elem.classList.remove(\"hugologo\");\n        elem.classList.remove(\"visarblogo\");\n        elem.classList.remove(\"ferrarilogo\");\n        elem.classList.remove(\"brawnlogo\");\n        elem.classList.add(logos_classes_configs[info]);\n      }\n      if (elem.classList.contains(\"secondary\")) {\n        if (info !== \"toyota\") {\n          elem.src = elem.src.slice(0, -4) + \"2.png\";\n        }\n      }\n    });\n    let alphaVarName = \"--alphatauri-primary\";\n    let newVarName = \"--\" + info + \"-primary\";\n    change_css_variables(alphaVarName, newVarName);\n    let value = getComputedStyle(document.documentElement).getPropertyValue(newVarName).trim();\n    _head2head__WEBPACK_IMPORTED_MODULE_9__.colors_dict[\"80\"] = value;\n    alphaVarName = \"--alphatauri-secondary\";\n    newVarName = \"--\" + info + \"-secondary\";\n    change_css_variables(alphaVarName, newVarName);\n    value = getComputedStyle(document.documentElement).getPropertyValue(newVarName).trim();\n    _head2head__WEBPACK_IMPORTED_MODULE_9__.colors_dict[\"81\"] = value;\n    alphaVarName = \"--alphatauri-primary-transparent\";\n    newVarName = \"--\" + info + \"-primary-transparent\";\n    change_css_variables(alphaVarName, newVarName);\n    alphaVarName = \"--alphatauri-secondary-transparent\";\n    newVarName = \"--\" + info + \"-secondary-transparent\";\n    change_css_variables(alphaVarName, newVarName);\n  } else {\n    document.querySelectorAll(\".atlogo-replace\").forEach(function (elem) {\n      if (!elem.classList.contains(\"non-changable\")) {\n        elem.src = logos_configs[info];\n        elem.classList.remove(\"alphataurilogo\");\n        elem.classList.remove(\"toyotalogo\");\n        elem.classList.remove(\"hugologo\");\n        elem.classList.remove(\"visarblogo\");\n        elem.classList.remove(\"ferrarilogo\");\n        elem.classList.remove(\"brawnlogo\");\n        elem.classList.add(\"alphataurilogo\");\n      }\n      if (elem.classList.contains(\"secondary\")) {\n        elem.src = elem.src.slice(0, -4) + \"2.png\";\n      }\n    });\n    let alphaVarName = \"--alphatauri-primary\";\n    let newVarName = \"--alphatauri-original\";\n    change_css_variables(alphaVarName, newVarName);\n    let value = getComputedStyle(document.documentElement).getPropertyValue(\"--alphatauri-original\").trim();\n    _head2head__WEBPACK_IMPORTED_MODULE_9__.colors_dict[\"80\"] = value;\n    alphaVarName = \"--alphatauri-secondary\";\n    newVarName = \"--alphatauri-secondary-original\";\n    change_css_variables(alphaVarName, newVarName);\n    value = getComputedStyle(document.documentElement).getPropertyValue(\"--alphatauri-secondary-original\").trim();\n    _head2head__WEBPACK_IMPORTED_MODULE_9__.colors_dict[\"81\"] = value;\n    alphaVarName = \"--alphatauri-primary-transparent\";\n    newVarName = \"--alphatauri-primary-transparent-original\";\n    change_css_variables(alphaVarName, newVarName);\n    alphaVarName = \"--alphatauri-secondary-transparent\";\n    newVarName = \"--alphatauri-secondary-transparent-original\";\n    change_css_variables(alphaVarName, newVarName);\n  }\n  document.querySelectorAll(\".team-menu-alphatauri-replace\").forEach(function (elem) {\n    let classes = elem.className.split(\" \");\n    classes.forEach(function (cl) {\n      if (cl.includes(\"changable\")) {\n        elem.classList.remove(cl);\n        elem.classList.add(\"changable-team-menu-\" + info);\n      }\n    });\n  });\n}\nfunction alpineReplace(info) {\n  document.querySelector(\"#alpineReplaceButton\").querySelector(\"button\").textContent = names_configs[info];\n  document.querySelector(\"#alpineReplaceButton\").querySelector(\"button\").dataset.value = info;\n  _config__WEBPACK_IMPORTED_MODULE_3__.combined_dict[5] = pretty_names[info];\n  _config__WEBPACK_IMPORTED_MODULE_3__.abreviations_dict[5] = abreviations_for_replacements[info];\n  document.querySelectorAll(\".al-teamname\").forEach(function (elem) {\n    elem.dataset.teamshow = pretty_names[info];\n  });\n  document.querySelectorAll(\".alpine-name\").forEach(function (elem) {\n    elem.textContent = names_configs[info];\n  });\n  if (info !== \"alpine\") {\n    document.querySelectorAll(\".alpinelogo-replace\").forEach(function (elem) {\n      if (!elem.classList.contains(\"non-changable\")) {\n        elem.src = logos_configs[info];\n        elem.classList.remove(\"alpinelogo\");\n        elem.classList.remove(\"ferrarilogo\");\n        elem.classList.remove(\"lotuslogo\");\n        elem.classList.add(logos_classes_configs[info]);\n      }\n      if (elem.classList.contains(\"secondary\")) {\n        elem.src = elem.src.slice(0, -4) + \"2.png\";\n      }\n    });\n    let alpineVarName = \"--alpine-primary\";\n    let newVarName = \"--\" + info + \"-primary\";\n    change_css_variables(alpineVarName, newVarName);\n    let value = getComputedStyle(document.documentElement).getPropertyValue(newVarName).trim();\n    _head2head__WEBPACK_IMPORTED_MODULE_9__.colors_dict[\"50\"] = value;\n    alpineVarName = \"--alpine-secondary\";\n    newVarName = \"--\" + info + \"-secondary\";\n    change_css_variables(alpineVarName, newVarName);\n    value = getComputedStyle(document.documentElement).getPropertyValue(newVarName).trim();\n    _head2head__WEBPACK_IMPORTED_MODULE_9__.colors_dict[\"51\"] = value;\n    alpineVarName = \"--alpine-primary-transparent\";\n    newVarName = \"--\" + info + \"-primary-transparent\";\n    change_css_variables(alpineVarName, newVarName);\n    alpineVarName = \"--alpine-secondary-transparent\";\n    newVarName = \"--\" + info + \"-secondary-transparent\";\n    change_css_variables(alpineVarName, newVarName);\n  } else {\n    document.querySelectorAll(\".alpinelogo-replace\").forEach(function (elem) {\n      if (!elem.classList.contains(\"non-changable\")) {\n        elem.src = logos_configs[info];\n        elem.classList.remove(\"alpinelogo\");\n        elem.classList.remove(\"ferrarilogo\");\n        elem.classList.remove(\"lotuslogo\");\n        elem.classList.add(\"alpinelogo\");\n      }\n      if (elem.classList.contains(\"secondary\")) {\n        elem.src = elem.src.slice(0, -4) + \"2.png\";\n      }\n    });\n    let alpineVarName = \"--alpine-primary\";\n    let newVarName = \"--alpine-original\";\n    change_css_variables(alpineVarName, newVarName);\n    let value = getComputedStyle(document.documentElement).getPropertyValue(\"--alpine-original\").trim();\n    _head2head__WEBPACK_IMPORTED_MODULE_9__.colors_dict[\"50\"] = value;\n    alpineVarName = \"--alpine-secondary\";\n    newVarName = \"--alpine-secondary-original\";\n    change_css_variables(alpineVarName, newVarName);\n    value = getComputedStyle(document.documentElement).getPropertyValue(\"--alpine-secondary-original\").trim();\n    _head2head__WEBPACK_IMPORTED_MODULE_9__.colors_dict[\"51\"] = value;\n    alpineVarName = \"--alpine-primary-transparent\";\n    newVarName = \"--alpine-primary-transparent-original\";\n    change_css_variables(alpineVarName, newVarName);\n    alpineVarName = \"--alpine-secondary-transparent\";\n    newVarName = \"--alpine-secondary-transparent-original\";\n    change_css_variables(alpineVarName, newVarName);\n  }\n  document.querySelectorAll(\".team-menu-alpine-replace\").forEach(function (elem) {\n    let classes = elem.className.split(\" \");\n    classes.forEach(function (cl) {\n      if (cl.includes(\"changable\")) {\n        elem.classList.remove(cl);\n        elem.classList.add(\"changable-team-menu-\" + info);\n      }\n    });\n  });\n}\nfunction alfaReplace(info) {\n  document.querySelector(\"#alfaReplaceButton\").querySelector(\"button\").textContent = names_configs[info];\n  document.querySelector(\"#alfaReplaceButton\").querySelector(\"button\").dataset.value = info;\n  _config__WEBPACK_IMPORTED_MODULE_3__.combined_dict[9] = pretty_names[info];\n  _config__WEBPACK_IMPORTED_MODULE_3__.abreviations_dict[9] = abreviations_for_replacements[info];\n  document.querySelectorAll(\".af-teamname\").forEach(function (elem) {\n    elem.dataset.teamshow = pretty_names[info];\n  });\n  document.querySelectorAll(\".alfa-name\").forEach(function (elem) {\n    elem.textContent = names_configs[info];\n  });\n  if (info !== \"alfa\") {\n    document.querySelectorAll(\".alfalogo-replace\").forEach(function (elem) {\n      if (!elem.classList.contains(\"non-changable\")) {\n        elem.src = logos_configs[info];\n        elem.classList.remove(\"alfaromeologo\");\n        elem.classList.remove(\"audilogo\");\n        elem.classList.remove(\"sauberlogo\");\n        elem.classList.add(logos_classes_configs[info]);\n      }\n    });\n    let alfaVarName = \"--alfa-primary\";\n    let newVarName = \"--\" + info + \"-primary\";\n    change_css_variables(alfaVarName, newVarName);\n    let value = getComputedStyle(document.documentElement).getPropertyValue(newVarName).trim();\n    _head2head__WEBPACK_IMPORTED_MODULE_9__.colors_dict[\"90\"] = value;\n    alfaVarName = \"--alfa-secondary\";\n    newVarName = \"--\" + info + \"-secondary\";\n    change_css_variables(alfaVarName, newVarName);\n    value = getComputedStyle(document.documentElement).getPropertyValue(newVarName).trim();\n    _head2head__WEBPACK_IMPORTED_MODULE_9__.colors_dict[\"91\"] = value;\n    alfaVarName = \"--alfa-primary-transparent\";\n    newVarName = \"--\" + info + \"-primary-transparent\";\n    change_css_variables(alfaVarName, newVarName);\n    alfaVarName = \"--alfa-secondary-transparent\";\n    newVarName = \"--\" + info + \"-secondary-transparent\";\n    change_css_variables(alfaVarName, newVarName);\n  } else {\n    document.querySelectorAll(\".alfalogo-replace\").forEach(function (elem) {\n      if (!elem.classList.contains(\"non-changable\")) {\n        elem.src = logos_configs[info];\n        elem.className = \"alfalogo-replace alfalogo\";\n      }\n    });\n    let alfaVarName = \"--alfa-primary\";\n    let newVarName = \"--alfa-original\";\n    change_css_variables(alfaVarName, newVarName);\n    let value = getComputedStyle(document.documentElement).getPropertyValue(\"--alfa-original\").trim();\n    _head2head__WEBPACK_IMPORTED_MODULE_9__.colors_dict[\"90\"] = value;\n    alfaVarName = \"--alfa-secondary\";\n    newVarName = \"--alfa-secondary-original\";\n    change_css_variables(alfaVarName, newVarName);\n    value = getComputedStyle(document.documentElement).getPropertyValue(\"--alfa-secondary-original\").trim();\n    _head2head__WEBPACK_IMPORTED_MODULE_9__.colors_dict[\"91\"] = value;\n    alfaVarName = \"--alfa-primary-transparent\";\n    newVarName = \"--alfa-primary-transparent-original\";\n    change_css_variables(alfaVarName, newVarName);\n    alfaVarName = \"--alfa-secondary-transparent\";\n    newVarName = \"--alfa-secondary-transparent-original\";\n    change_css_variables(alfaVarName, newVarName);\n  }\n  document.querySelectorAll(\".team-menu-alfa-replace\").forEach(function (elem) {\n    let classes = elem.className.split(\" \");\n    classes.forEach(function (cl) {\n      if (cl.includes(\"changable\")) {\n        elem.classList.remove(cl);\n        elem.classList.add(\"changable-team-menu-\" + info);\n      }\n    });\n  });\n}\nfunction change_css_variables(oldVar, newVar) {\n  let root = document.documentElement;\n  let newVal = getComputedStyle(root).getPropertyValue(newVar).trim();\n  root.style.setProperty(oldVar, newVal);\n}\nfunction replace_modal_teams(version) {\n  if (version === 2024) {\n    document.getElementById(\"alphaModalLogo\").src = logos_configs[\"visarb\"];\n    document.getElementById(\"alphaModalLogo\").className = \"visarblogo non-changable\";\n    document.getElementById(\"alphaModalName\").textContent = pretty_names[\"visarb\"];\n    document.getElementById(\"alfaModalLogo\").src = logos_configs[\"stake\"];\n    document.getElementById(\"alfaModalName\").textContent = pretty_names[\"stake\"];\n  } else if (version === 2023) {\n    document.getElementById(\"alphaModalLogo\").src = logos_configs[\"alphatauri\"];\n    document.getElementById(\"alphaModalLogo\").className = \"alphataurilogo non-changable\";\n    document.getElementById(\"alphaModalName\").textContent = pretty_names[\"alphatauri\"];\n    document.getElementById(\"alfaModalLogo\").src = logos_configs[\"alfa\"];\n    document.getElementById(\"alfaModalName\").textContent = pretty_names[\"alfa\"];\n  }\n}\n\n//select all team-change-button\ndocument.querySelectorAll(\".team-change-button\").forEach(function (elem) {\n  elem.querySelectorAll(\"a\").forEach(function (a) {\n    a.addEventListener(\"click\", function () {\n      elem.querySelector(\"button\").textContent = a.textContent;\n      elem.querySelector(\"button\").dataset.value = a.dataset.value;\n    });\n  });\n});\ndocument.querySelector(\"#configDetailsButton\").addEventListener(\"click\", function () {\n  save = document.querySelector(\"#saveSelector\").textContent;\n  save = save.slice(0, -4);\n  alphatauri = document.querySelector(\"#alphaTauriReplaceButton\").querySelector(\"button\").dataset.value;\n  alpine = document.querySelector(\"#alpineReplaceButton\").querySelector(\"button\").dataset.value;\n  alfa = document.querySelector(\"#alfaReplaceButton\").querySelector(\"button\").dataset.value;\n  let mentalityFrozen = 0;\n  if (document.getElementById(\"freezeMentalityToggle\").checked) {\n    mentalityFrozen = 1;\n  }\n  let refurbish = 0;\n  if (document.getElementById(\"refurbishingToggle\").checked) {\n    refurbish = 1;\n  }\n  let difficulty = 0;\n  let difficultySlider = document.getElementById(\"difficultySlider\");\n  let difficultyValue = document.getElementById(\"difficultySpan\").textContent === \"Custom\" ? -2 : parseInt(difficultySlider.value);\n  let disabledList = {};\n  let triggerList = {};\n  document.querySelectorAll(\".dif-warning:not(.default)\").forEach(function (elem) {\n    let id = elem.id;\n    if (elem.classList.contains(\"disabled\") || elem.classList.contains(\"d-none\")) {\n      disabledList[id] = 1;\n    } else {\n      disabledList[id] = 0;\n    }\n    triggerList[id] = elem.classList && (elem.classList.contains(\"d-none\") || elem.classList.contains(\"disabled\")) ? -1 : inverted_difficulty_dict[elem.className.split(\" \")[1]];\n  });\n  let data = {\n    command: \"configUpdate\",\n    save: save,\n    alphatauri: alphatauri,\n    alpine: alpine,\n    alfa: alfa,\n    mentalityFrozen: mentalityFrozen,\n    difficulty: difficultyValue,\n    refurbish: refurbish,\n    disabled: disabledList,\n    triggerList: triggerList\n  };\n  if (customIconPath !== null) {\n    data[\"icon\"] = customIconPath;\n    replace_custom_team_logo(customIconPath);\n  }\n  if (custom_team) {\n    data[\"primaryColor\"] = document.getElementById(\"primarySelector\").value;\n    data[\"secondaryColor\"] = document.getElementById(\"secondarySelector\").value;\n    replace_custom_team_color(data[\"primaryColor\"], data[\"secondaryColor\"]);\n  }\n  socket.send(JSON.stringify(data));\n  info = {\n    teams: {\n      alphatauri: alphatauri,\n      alpine: alpine,\n      alfa: alfa\n    }\n  };\n  replace_all_teams(info);\n  reloadTables();\n});\ndocument.querySelector(\".bi-file-earmark-arrow-down\").addEventListener(\"click\", function () {\n  const db = (0,_backend_dbManager__WEBPACK_IMPORTED_MODULE_12__.getDatabase)();\n  const metadata = (0,_backend_dbManager__WEBPACK_IMPORTED_MODULE_12__.getMetadata)();\n  (0,_backend_UESaveHandler__WEBPACK_IMPORTED_MODULE_11__.repack)(db, metadata);\n});\n\n/**\r\n * checks if a save and a script have been selected to unlock the tool\r\n */\nfunction check_selected() {\n  if (scriptSelected === 1) {\n    document.getElementById(\"scriptSelected\").classList.add(\"completed\");\n  }\n  setTimeout(function () {\n    if (isSaveSelected == 1 && scriptSelected == 1 && divBlocking == 1) {\n      document.getElementById(\"blockDiv\").classList.add(\"disappear\");\n      divBlocking = 0;\n    }\n  }, 300);\n}\nh2hPill.addEventListener(\"click\", function () {\n  manageScripts(\"hide\", \"show\", \"hide\", \"hide\", \"hide\", \"hide\", \"hide\", \"hide\");\n  scriptSelected = 1;\n  check_selected();\n  manageSaveButton(false);\n});\nviewPill.addEventListener(\"click\", function () {\n  manageScripts(\"hide\", \"hide\", \"show\", \"hide\", \"hide\", \"hide\", \"hide\", \"hide\");\n  scriptSelected = 1;\n  check_selected();\n  manageSaveButton(false);\n});\ndriverTransferPill.addEventListener(\"click\", function () {\n  manageScripts(\"hide\", \"hide\", \"hide\", \"show\", \"hide\", \"hide\", \"hide\", \"hide\");\n  scriptSelected = 1;\n  check_selected();\n  manageSaveButton(false);\n});\neditStatsPill.addEventListener(\"click\", function () {\n  manageScripts(\"hide\", \"hide\", \"hide\", \"hide\", \"show\", \"hide\", \"hide\", \"hide\");\n  scriptSelected = 1;\n  check_selected();\n  manageSaveButton(true, \"stats\");\n});\nconstructorsPill.addEventListener(\"click\", function () {\n  manageScripts(\"hide\", \"hide\", \"hide\", \"hide\", \"hide\", \"hide\", \"hide\", \"show\");\n  scriptSelected = 1;\n  check_selected();\n  manageSaveButton(true, \"teams\");\n});\nCalendarPill.addEventListener(\"click\", function () {\n  manageScripts(\"hide\", \"hide\", \"hide\", \"hide\", \"hide\", \"show\", \"hide\", \"hide\");\n  scriptSelected = 1;\n  check_selected();\n  manageSaveButton(true, \"calendar\");\n});\ncarPill.addEventListener(\"click\", function () {\n  manageScripts(\"hide\", \"hide\", \"hide\", \"hide\", \"hide\", \"hide\", \"show\", \"hide\");\n  scriptSelected = 1;\n  check_selected();\n  manageSaveButton(!_performance__WEBPACK_IMPORTED_MODULE_6__.viewingGraph, \"performance\");\n});\ngamePill.addEventListener(\"click\", function () {\n  document.querySelector(\"#editorChanges\").classList.add(\"d-none\");\n  document.querySelector(\"#gameChanges\").classList.remove(\"d-none\");\n});\neditorPill.addEventListener(\"click\", function () {\n  document.querySelector(\"#editorChanges\").classList.remove(\"d-none\");\n  document.querySelector(\"#gameChanges\").classList.add(\"d-none\");\n});\ndocument.getElementById(\"difficultySlider\").addEventListener(\"input\", function () {\n  let value = this.value;\n  update_difficulty_span(value);\n  manage_difficulty_warnings(difficulty_dict[parseInt(value)]);\n  difcultyCustom = \"default\";\n  document.getElementById(\"customGearButton\").classList.remove(\"custom\");\n});\nfunction update_difficulty_span(value) {\n  let span = document.querySelector(\"#difficultySpan\");\n  let difficulty = difficulty_dict[parseInt(value)];\n  if (difficulty === \"reduced weight\") {\n    span.className = \"option-state reduced-weight\";\n  } else if (difficulty === \"Custom\") {\n    span.className = \"option-state custom\";\n    document.getElementById(\"customGearButton\").classList.remove(\"custom\");\n    document.getElementById(\"customGearButton\").click();\n  } else {\n    span.className = \"option-state \" + difficulty;\n  }\n  span.textContent = difficulty.charAt(0).toUpperCase() + difficulty.slice(1);\n}\ndocument.getElementById(\"freezeMentalityToggle\").addEventListener(\"change\", function () {\n  let value = this.checked;\n  update_mentality_span(value);\n});\nfunction update_mentality_span(value) {\n  let span = document.querySelector(\"#mentalitySpan\");\n  if (value) {\n    span.className = \"option-state frozen\";\n    span.textContent = \"Frozen\";\n  } else {\n    span.className = \"option-state default\";\n    span.textContent = \"Unfrozen\";\n  }\n}\ndocument.getElementById(\"refurbishingToggle\").addEventListener(\"change\", function () {\n  let value = this.checked;\n  update_refurbish_span(value);\n});\nfunction update_refurbish_span(value) {\n  let span = document.querySelector(\"#refurbishSpan\");\n  if (value) {\n    span.className = \"option-state fixed\";\n    span.textContent = \"Fixed\";\n  } else {\n    span.className = \"option-state default\";\n    span.textContent = \"Default\";\n  }\n}\nfunction manage_difficulty_warnings(level) {\n  const elements = [\"defaultDif\", \"lightDif\", \"researchDif\", \"statDif\", \"designTimeDif\", \"factoryDif\", \"buildDif\"];\n  const selectedConfig = _config__WEBPACK_IMPORTED_MODULE_3__.difficultyConfig[level] || _config__WEBPACK_IMPORTED_MODULE_3__.difficultyConfig[\"default\"];\n  elements.forEach(id => {\n    document.getElementById(id).classList.add(\"d-none\");\n  });\n  selectedConfig.visible.forEach(id => {\n    document.getElementById(id).classList.remove(\"d-none\");\n  });\n  elements.forEach(id => {\n    if (selectedConfig[id]) {\n      const elementConfig = selectedConfig[id];\n      const element = document.getElementById(id);\n      element.className = elementConfig.className;\n      element.textContent = elementConfig.text;\n    }\n  });\n}\nfunction load_difficulty_warnings(triggerList) {\n  for (let id in triggerList) {\n    let warn = document.getElementById(id);\n    let difName = difficulty_dict[triggerList[id]];\n    if (triggerList[id] !== -1) {\n      warn.className = _config__WEBPACK_IMPORTED_MODULE_3__.difficultyConfig[difName][id].className;\n      warn.textContent = _config__WEBPACK_IMPORTED_MODULE_3__.difficultyConfig[difName][id].text;\n    } else {\n      warn.classList.add(\"disabled\");\n    }\n  }\n}\ndocument.getElementById(\"customGearButton\").addEventListener(\"click\", function () {\n  this.classList.toggle(\"custom\");\n  if (this.classList.contains(\"custom\")) {\n    difcultyCustom = \"custom\";\n    document.querySelector(\"#difficultySpan\").textContent = \"Custom\";\n    document.querySelector(\"#difficultySpan\").className = \"option-state custom\";\n    document.querySelector(\".custom-description\").textContent = \"cycle through its states\";\n    let warnigs = document.querySelectorAll(\".dif-warning\");\n    warnigs.forEach(function (elem) {\n      if (elem.id !== \"defaultDif\") {\n        for (let level in _config__WEBPACK_IMPORTED_MODULE_3__.difficultyConfig) {\n          if (_config__WEBPACK_IMPORTED_MODULE_3__.difficultyConfig[level].visible.includes(elem.id)) {\n            elem.className = _config__WEBPACK_IMPORTED_MODULE_3__.difficultyConfig[level][elem.id]?.className || \"dif-warning\";\n            elem.textContent = _config__WEBPACK_IMPORTED_MODULE_3__.difficultyConfig[level][elem.id]?.text || \"\";\n            break;\n          }\n        }\n      } else {\n        elem.classList.add(\"d-none\");\n      }\n    });\n  } else {\n    difcultyCustom = \"default\";\n    document.querySelector(\".custom-description\").textContent = \"remove/add it\";\n    actualDifficulty = document.getElementById(\"difficultySlider\").value;\n    manage_difficulty_warnings(difficulty_dict[parseInt(actualDifficulty)]);\n    update_difficulty_span(actualDifficulty);\n  }\n});\nfunction rotateDifficultyLevel(elementId) {\n  const levels = [\"extra-hard\", \"brutal\", \"unfair\", \"insane\", \"impossible\"];\n  const element = document.getElementById(elementId);\n\n  // Detectar si el elemento está en estado \"disabled\" actualmente\n  if (element.classList.contains(\"disabled\")) {\n    let nextConfig;\n    for (let level in _config__WEBPACK_IMPORTED_MODULE_3__.difficultyConfig) {\n      if (_config__WEBPACK_IMPORTED_MODULE_3__.difficultyConfig[level].visible.includes(elementId)) {\n        nextConfig = _config__WEBPACK_IMPORTED_MODULE_3__.difficultyConfig[level][elementId];\n        break;\n      }\n    }\n    if (nextConfig) {\n      element.className = nextConfig.className;\n      element.textContent = nextConfig.text;\n    }\n    return;\n  }\n  let currentLevelIndex = levels.findIndex(level => {\n    return _config__WEBPACK_IMPORTED_MODULE_3__.difficultyConfig[level][elementId] && element.classList.contains(_config__WEBPACK_IMPORTED_MODULE_3__.difficultyConfig[level][elementId].className.split(\" \")[1]);\n  });\n  if (currentLevelIndex === levels.length - 1) {\n    element.className = \"dif-warning disabled\";\n    return;\n  }\n  let nextLevelIndex = (currentLevelIndex + 1) % levels.length;\n  let nextConfig = _config__WEBPACK_IMPORTED_MODULE_3__.difficultyConfig[levels[nextLevelIndex]][elementId];\n  while ((!nextConfig || nextConfig.className === element.className && nextConfig.text === element.textContent || !_config__WEBPACK_IMPORTED_MODULE_3__.difficultyConfig[levels[nextLevelIndex]].visible.includes(elementId)) && nextLevelIndex !== currentLevelIndex) {\n    nextLevelIndex = (nextLevelIndex + 1) % levels.length;\n    nextConfig = _config__WEBPACK_IMPORTED_MODULE_3__.difficultyConfig[levels[nextLevelIndex]][elementId];\n  }\n  if (nextConfig) {\n    element.className = nextConfig.className;\n    element.textContent = nextConfig.text;\n  }\n}\ndocument.querySelectorAll(\".dif-warning:not(.default)\").forEach(function (elem) {\n  elem.addEventListener(\"click\", function () {\n    if (difcultyCustom === \"custom\") {\n      rotateDifficultyLevel(elem.id);\n    } else {\n      elem.classList.toggle(\"disabled\");\n    }\n  });\n});\n\n/**\r\n * Manages the stats of the divs associated with the pills\r\n * @param  {Array} divs array of state of the divs\r\n */\nfunction manageScripts(...divs) {\n  scriptsArray.forEach(function (div, index) {\n    if (divs[index] === \"show\") {\n      div.className = \"script-view\";\n    } else {\n      div.className = \"script-view d-none\";\n    }\n  });\n}\ndocument.querySelector(\"#cancelDetailsButton\").addEventListener(\"click\", function () {\n  manage_config_content(configCopy[0], false);\n});\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/frontend/renderer.js?");

/***/ }),

/***/ "./src/js/frontend/seasonViewer.js":
/*!*****************************************!*\
  !*** ./src/js/frontend/seasonViewer.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addEngineName: () => (/* binding */ addEngineName),\n/* harmony export */   deleteEngineName: () => (/* binding */ deleteEngineName),\n/* harmony export */   engine_allocations: () => (/* binding */ engine_allocations),\n/* harmony export */   engine_names: () => (/* binding */ engine_names),\n/* harmony export */   generateYearsMenu: () => (/* binding */ generateYearsMenu),\n/* harmony export */   new_drivers_table: () => (/* binding */ new_drivers_table),\n/* harmony export */   new_load_drivers_table: () => (/* binding */ new_load_drivers_table),\n/* harmony export */   new_load_teams_table: () => (/* binding */ new_load_teams_table),\n/* harmony export */   new_teams_table: () => (/* binding */ new_teams_table),\n/* harmony export */   resetViewer: () => (/* binding */ resetViewer),\n/* harmony export */   resetYearButtons: () => (/* binding */ resetYearButtons),\n/* harmony export */   setEngineAllocations: () => (/* binding */ setEngineAllocations),\n/* harmony export */   update_logo: () => (/* binding */ update_logo)\n/* harmony export */ });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"./src/js/frontend/config.js\");\n/* harmony import */ var _head2head__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./head2head */ \"./src/js/frontend/head2head.js\");\n/* harmony import */ var _renderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./renderer */ \"./src/js/frontend/renderer.js\");\n/* harmony import */ var _transfers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./transfers */ \"./src/js/frontend/transfers.js\");\n\n\n\n\n\nlet seasonTable;\nlet teamsTable;\nlet races_ids = [];\nlet seasonResults;\nlet calendarData;\nlet pointsOrPos = \"points\";\nlet alphaReplace = \"alphatauri\";\nlet alpineReplace = \"alpine\";\nlet alfaReplace = \"alfa\";\nlet driverOrTeams = \"drivers\";\nlet isYearSelected = false;\nlet engine_allocations;\nlet engine_names = {\n  //this one is changed as the user adds engines, so it will stayhere\n  1: \"Ferrari\",\n  4: \"Rbpt\",\n  7: \"Mercedes\",\n  10: \"Renault\"\n};\nfunction addEngineName(id, name) {\n  engine_names[id] = name;\n}\nfunction deleteEngineName(id) {\n  delete engine_names[id];\n}\nfunction setEngineAllocations(allocations) {\n  engine_allocations = allocations;\n}\nfunction resetViewer() {\n  if (seasonTable) {\n    seasonTable.destroy();\n  }\n  pointsOrPos = \"points\";\n  if (teamsTable) {\n    teamsTable.destroy();\n  }\n}\nfunction resetYearButtons() {\n  document.getElementById(\"yearButton\").textContent = \"Year\";\n  isYearSelected = false;\n  manage_show_tables();\n  document.getElementById(\"yearButtonH2H\").textContent = \"Year\";\n  document.getElementById(\"yearPredictionButton\").textContent = \"Year\";\n  document.getElementById(\"yearPredictionModalButton\").textContent = \"Year\";\n}\n\n/**\r\n * Pills for the drivers and teams tables\r\n */\ndocument.getElementById(\"driverspill\").addEventListener(\"click\", function () {\n  driverOrTeams = \"drivers\";\n  manage_show_tables();\n});\ndocument.getElementById(\"teamspill\").addEventListener(\"click\", function () {\n  driverOrTeams = \"teams\";\n  manage_show_tables();\n});\nfunction manage_show_tables() {\n  if (isYearSelected) {\n    if (driverOrTeams === \"drivers\") {\n      document.querySelector(\".teams-table\").classList.add(\"d-none\");\n      document.querySelector(\".drivers-table\").classList.remove(\"d-none\");\n    } else {\n      document.querySelector(\".teams-table\").classList.remove(\"d-none\");\n      document.querySelector(\".drivers-table\").classList.add(\"d-none\");\n    }\n  } else {\n    document.querySelector(\".teams-table\").classList.add(\"d-none\");\n    document.querySelector(\".drivers-table\").classList.add(\"d-none\");\n  }\n}\ndocument.querySelectorAll(\"#tableTypeDropdown a\").forEach(function (elem) {\n  elem.addEventListener(\"click\", function () {\n    pointsOrPos = elem.dataset.value;\n    change_points_pos_drivers();\n    change_points_pos_teams();\n    document.querySelector(\"#tableTypeButton\").textContent = elem.textContent;\n  });\n});\nfunction change_points_pos_drivers() {\n  let datazone = document.querySelector(\".drivers-table-data\");\n  let rows = datazone.querySelectorAll(\".drivers-table-row\");\n  rows.forEach(function (row, index) {\n    let cells = row.querySelectorAll(\".drivers-table-normal\");\n    cells.forEach(function (cell) {\n      let newCell = manageText(cell);\n      cell.innerText = newCell.innerText;\n    });\n  });\n}\nfunction change_points_pos_teams() {\n  let datazone = document.querySelector(\".teams-table-data\");\n  let rows = datazone.querySelectorAll(\".teams-table-row\");\n  rows.forEach(function (row, index) {\n    let cells = row.querySelectorAll(\".teams-table-normal\");\n    cells.forEach(function (cell) {\n      let newCell = manageTeamsText(cell);\n      cell.innerHTML = newCell.innerHTML;\n    });\n  });\n}\nfunction new_drivers_table(data) {\n  calendarData = data;\n  races_ids = [];\n  let header = document.querySelector(\".drivers-table-header\");\n  header.innerHTML = \"\";\n  let driverDiv = document.createElement(\"div\");\n  driverDiv.classList = \"drivers-table-driver bold-font\";\n  driverDiv.innerText = \"DRIVER\";\n  let PositionDiv = document.createElement(\"div\");\n  PositionDiv.classList = \"drivers-table-position bold-font\";\n  PositionDiv.innerText = \"#\";\n  header.appendChild(PositionDiv);\n  header.appendChild(driverDiv);\n  data.forEach(function (elem) {\n    races_ids.push(elem[0]);\n    let headerPos = document.createElement(\"div\");\n    headerPos.className = \"drivers-table-normal bold-font flag-header\";\n    let headerPosFlag = document.createElement(\"img\");\n    let race = _config__WEBPACK_IMPORTED_MODULE_0__.races_map[elem[1]];\n    let flag_src = _config__WEBPACK_IMPORTED_MODULE_0__.codes_dict[race];\n    headerPosFlag.src = flag_src;\n    let headerPosDiv = document.createElement(\"div\");\n    headerPosDiv.classList.add(\"text-in-front\");\n    headerPosDiv.classList.add(\"bold-font\");\n    headerPosDiv.innerText = _config__WEBPACK_IMPORTED_MODULE_0__.races_names[elem[1]];\n    headerPos.appendChild(headerPosFlag);\n    headerPos.appendChild(headerPosDiv);\n    header.appendChild(headerPos);\n  });\n  let PointsDiv = document.createElement(\"div\");\n  PointsDiv.classList = \"drivers-table-points bold-font\";\n  PointsDiv.innerText = \"PTS\";\n  header.appendChild(PointsDiv);\n}\nfunction new_teams_table(data) {\n  calendarData = data;\n  races_ids = [];\n  let header = document.querySelector(\".teams-table-header\");\n  header.innerHTML = \"\";\n  let driverDiv = document.createElement(\"div\");\n  driverDiv.classList = \"teams-table-team bold-font\";\n  driverDiv.innerText = \"TEAM\";\n  let PositionDiv = document.createElement(\"div\");\n  PositionDiv.classList = \"teams-table-position bold-font\";\n  PositionDiv.innerText = \"#\";\n  header.appendChild(PositionDiv);\n  header.appendChild(driverDiv);\n  data.forEach(function (elem) {\n    races_ids.push(elem[0]);\n    let headerPos = document.createElement(\"div\");\n    headerPos.className = \"teams-table-normal bold-font flag-header\";\n    let headerPosFlag = document.createElement(\"img\");\n    let race = _config__WEBPACK_IMPORTED_MODULE_0__.races_map[elem[1]];\n    let flag_src = _config__WEBPACK_IMPORTED_MODULE_0__.codes_dict[race];\n    headerPosFlag.src = flag_src;\n    let headerPosDiv = document.createElement(\"div\");\n    headerPosDiv.classList.add(\"text-in-front\");\n    headerPosDiv.classList.add(\"bold-font\");\n    headerPosDiv.innerText = _config__WEBPACK_IMPORTED_MODULE_0__.races_names[elem[1]];\n    headerPos.appendChild(headerPosFlag);\n    headerPos.appendChild(headerPosDiv);\n    header.appendChild(headerPos);\n  });\n  let PointsDiv = document.createElement(\"div\");\n  PointsDiv.classList = \"teams-table-points bold-font\";\n  PointsDiv.innerText = \"PTS\";\n  header.appendChild(PointsDiv);\n}\nfunction checkscroll() {\n  let datazone = document.querySelector(\".drivers-table-data\");\n  let pointscol = document.querySelector(\".drivers-table-header\").querySelector(\".drivers-table-points\");\n  if (datazone.scrollHeight > datazone.clientHeight) {\n    pointscol.style.width = \"84px\";\n  } else {\n    pointscol.style.width = \"80px\";\n  }\n}\nfunction new_color_drivers_table() {\n  let datazone = document.querySelector(\".drivers-table-data\");\n  let rows = datazone.querySelectorAll(\".drivers-table-row\");\n  rows.forEach(function (row, index) {\n    let cells = row.querySelectorAll(\".drivers-table-normal\");\n    cells.forEach(function (cell) {\n      if (cell.dataset.pos === \"1\") {\n        cell.classList.add(\"first\");\n      } else if (cell.dataset.pos === \"2\") {\n        cell.classList.add(\"second\");\n      } else if (cell.dataset.pos === \"3\") {\n        cell.classList.add(\"third\");\n      }\n      if (cell.dataset.fastlap === \"1\") {\n        cell.classList.add(\"fastest\");\n      }\n      if (cell.dataset.qualy === \"1\") {\n        cell.style.fontFamily = \"Formula1Bold\";\n      }\n    });\n  });\n}\nfunction manage_teams_table_logos() {\n  let logos = document.querySelectorAll(\".teams-table-logo-inner\");\n  logos.forEach(function (logo) {\n    if (logo.dataset.teamid === \"1\") {\n      logo.className = \"teams-table-logo-inner ferrari-team-table-logo\";\n    } else if (logo.dataset.teamid === \"2\") {\n      // logo.className = \"teams-table-logo-inner mclaren-team-table-logo\"\n      logo.src = \"../assets/images/mclaren2.png\";\n    } else if (logo.dataset.teamid === \"3\") {\n      logo.className = \"teams-table-logo-inner redbull-team-table-logo\";\n    } else if (logo.dataset.teamid === \"4\") {\n      logo.className = \"teams-table-logo-inner merc-team-table-logo\";\n    } else if (logo.dataset.teamid === \"5\") {\n      if (alpineReplace === \"alpine\") {\n        logo.className = \"teams-table-logo-inner alpine-team-table-logo\";\n      } else if (alpineReplace === \"andretti\") {\n        logo.className = \"teams-table-logo-inner ferrari-team-table-logo\";\n        logo.src = \"../assets/images/andretti2.png\";\n      } else if (alpineReplace === \"renault\") {\n        logo.className = \"teams-table-logo-inner ferrari-team-table-logo\";\n        logo.src = \"../assets/images/renault2.png\";\n      } else if (alpineReplace === \"lotus\") {\n        logo.src = \"../assets/images/lotus2.png\";\n      }\n    } else if (logo.dataset.teamid === \"6\") {\n      logo.className = \"teams-table-logo-inner williams-team-table-logo\";\n      logo.src = \"../assets/images/williams2.png\";\n    } else if (logo.dataset.teamid === \"7\") {\n      logo.className = \"teams-table-logo-inner haas-team-table-logo\";\n    } else if (logo.dataset.teamid === \"8\") {\n      if (alphaReplace === \"alphatauri\") {\n        logo.className = \"teams-table-logo-inner alphatauri-team-table-logo\";\n      } else if (alphaReplace === \"visarb\") {\n        logo.className = \"teams-table-logo-inner merc-team-table-logo\";\n      } else if (alphaReplace === \"hugo\") {\n        logo.className = \"teams-table-logo-inner hugo-team-table-logo\";\n      } else if (alphaReplace === \"toyota\") {\n        logo.className = \"teams-table-logo-inner toyota-team-table-logo\";\n        logo.src = \"../assets/images/toyota2.png\";\n      } else if (alphaReplace === \"porsche\") {\n        logo.className = \"teams-table-logo-inner porsche-team-table-logo\";\n      } else if (alphaReplace === \"brawn\") {\n        logo.className = \"teams-table-logo-inner brawn-team-table-logo\";\n        logo.src = \"../assets/images/brawn2.png\";\n      }\n    } else if (logo.dataset.teamid === \"9\") {\n      if (alfaReplace === \"alfa\") {\n        logo.className = \"teams-table-logo-inner merc-team-table-logo\";\n      } else if (alfaReplace === \"audi\") {\n        logo.className = \"teams-table-logo-inner audi-team-table-logo\";\n      } else if (alfaReplace === \"stake\") {\n        logo.className = \"teams-table-logo-inner stake-team-table-logo\";\n      } else if (alfaReplace === \"sauber\") {\n        logo.className = \"teams-table-logo-inner ferrari-team-table-logo\";\n        logo.src = \"../assets/images/sauber2.png\";\n      }\n    } else if (logo.dataset.teamid === \"10\") {\n      logo.className = \"teams-table-logo-inner aston-team-table-logo\";\n    } else if (logo.dataset.teamid === \"32\") {\n      logo.className = \"teams-table-logo-inner custom-team-table-logo\";\n    }\n  });\n}\nfunction manage_teams_table_names() {\n  let names = document.querySelectorAll(\".teams-table-team\");\n  names.forEach(function (name) {\n    if (name.dataset.teamid === \"5\") {\n      if (alpineReplace === \"alpine\") {\n        name.firstChild.innerText = \"ALPINE\";\n      } else if (alpineReplace === \"andretti\") {\n        name.firstChild.innerText = \"ANDRETTI\";\n      } else if (alpineReplace === \"renault\") {\n        name.firstChild.innerText = \"RENAULT\";\n      } else if (alpineReplace === \"lotus\") {\n        name.firstChild.innerText = \"LOTUS\";\n      }\n    } else if (name.dataset.teamid === \"8\") {\n      if (alphaReplace === \"alphatauri\") {\n        name.firstChild.innerText = \"ALPHA TAURI\";\n      } else if (alphaReplace === \"visarb\") {\n        name.firstChild.innerText = \"VISA CASHAPP RB\";\n      } else if (alphaReplace === \"hugo\") {\n        name.firstChild.innerText = \"HUGO\";\n      } else if (alphaReplace === \"toyota\") {\n        name.firstChild.innerText = \"TOYOTA\";\n      } else if (alphaReplace === \"porsche\") {\n        name.firstChild.innerText = \"PORSCHE\";\n      } else if (alphaReplace === \"brawn\") {\n        name.firstChild.innerText = \"BRAWN GP\";\n      }\n    } else if (name.dataset.teamid === \"9\") {\n      if (alfaReplace === \"alfa\") {\n        name.firstChild.innerText = \"ALFA ROMEO\";\n      } else if (alfaReplace === \"audi\") {\n        name.firstChild.innerText = \"AUDI\";\n      } else if (alfaReplace === \"stake\") {\n        name.firstChild.innerText = \"STAKE SAUBER\";\n      } else if (alfaReplace === \"sauber\") {\n        name.firstChild.innerText = \"SAUBER\";\n      }\n    }\n  });\n}\nfunction new_color_teams_table() {\n  let datazone = document.querySelector(\".teams-table-data\");\n  calendarData.forEach(function (race) {\n    let id = race[0];\n    let colCells = datazone.querySelectorAll(\".teams-table-normal[data-raceid='\" + id + \"']\");\n    if (colCells.length > 0) {\n      let values = [];\n      colCells.forEach(function (cell, index) {\n        let value = cell.dataset.points;\n        values.push([value, index]);\n        if (cell.dataset.quali1 === \"1\" || cell.dataset.quali2 === \"1\") {\n          cell.style.fontFamily = \"Formula1Bold\";\n        }\n        if (cell.dataset.fastlap1 === \"1\" || cell.dataset.fastlap2 === \"1\") {\n          cell.classList.add(\"fastest\");\n        }\n      });\n      values.sort((a, b) => b[0] - a[0]);\n      let topThree = values.slice(0, 3);\n      colCells[topThree[0][1]].classList.add(\"first\");\n      colCells[topThree[1][1]].classList.add(\"second\");\n      colCells[topThree[2][1]].classList.add(\"third\");\n    }\n  });\n}\nfunction order_teams_table() {\n  let datazone = document.querySelector(\".teams-table-data\");\n  let rows = datazone.querySelectorAll(\".teams-table-row\");\n  let ordered = Array.from(rows).sort((a, b) => parseInt(a.querySelector(\".teams-table-position\").innerText) - parseInt(b.querySelector(\".teams-table-position\").innerText));\n  datazone.innerHTML = \"\";\n  ordered.forEach(function (row, index) {\n    let odd = index % 2 === 0;\n    if (odd) {\n      row.classList.add(\"odd\");\n    }\n    datazone.appendChild(row);\n  });\n}\nfunction new_load_drivers_table(data) {\n  seasonResults = data;\n  let datazone = document.querySelector(\".drivers-table-data\");\n  datazone.innerHTML = \"\";\n  data = data[0];\n  data = new_order_drivers(data);\n  data.forEach(function (driver, index) {\n    let odd = index % 2 === 0;\n    let races_done = driver.slice(3).map(x => x[0]);\n    new_addDriver(driver, races_done, odd);\n  });\n  hoverListeners();\n  checkscroll();\n  new_color_drivers_table();\n}\nfunction new_order_drivers(array) {\n  return array.sort((a, b) => a[2] - b[2]);\n}\nfunction update_logo(team, logo, newTeam) {\n  if (team === \"alpine\") {\n    alpineReplace = newTeam;\n    _config__WEBPACK_IMPORTED_MODULE_0__.logos_disc[5] = logo;\n  } else if (team === \"williams\") {\n    _config__WEBPACK_IMPORTED_MODULE_0__.logos_disc[6] = logo;\n  } else if (team === \"haas\") {\n    _config__WEBPACK_IMPORTED_MODULE_0__.logos_disc[7] = logo;\n  } else if (team === \"alphatauri\") {\n    alphaReplace = newTeam;\n    _config__WEBPACK_IMPORTED_MODULE_0__.logos_disc[8] = logo;\n  } else if (team === \"alfa\") {\n    alfaReplace = newTeam;\n    _config__WEBPACK_IMPORTED_MODULE_0__.logos_disc[9] = logo;\n  }\n}\nfunction reloadTables() {\n  let datazone = document.querySelector(\".drivers-table-data\");\n  //if not empty\n  if (datazone.innerHTML !== \"\") {\n    new_drivers_table(calendarData);\n    new_load_drivers_table(seasonResults);\n    new_teams_table(calendarData);\n    new_load_teams_table(seasonResults);\n  }\n}\nfunction new_load_teams_table(data) {\n  let pairTeamPos = data[data.length - 1];\n  //create dict with dirst element of pair as key and second as value\n  let pairTeamPosDict = {};\n  pairTeamPos.forEach(function (pair) {\n    pairTeamPosDict[pair[0]] = pair[1];\n  });\n  data = data[0];\n  let datazone = document.querySelector(\".teams-table-data\");\n  datazone.innerHTML = \"\";\n  let teamData = {\n    1: [],\n    2: [],\n    3: [],\n    4: [],\n    5: [],\n    6: [],\n    7: [],\n    8: [],\n    9: [],\n    10: []\n  };\n  if (_renderer__WEBPACK_IMPORTED_MODULE_2__.game_version === 2024 && _renderer__WEBPACK_IMPORTED_MODULE_2__.custom_team) {\n    teamData[32] = [];\n  }\n  data.forEach(function (driver) {\n    let races = driver.slice(3);\n    races.forEach(function (race) {\n      let team = race[race.length - 1];\n      teamData[team].push(race);\n    });\n  });\n  for (let team in teamData) {\n    //order the rray by the firit element of each elmeent\n    teamData[team].sort((a, b) => a[0] - b[0]);\n    let seasonLong = races_ids.length * 2;\n    let racesDone = teamData.length;\n    //push [] until the length is the same as the\n    while (teamData[team].length < seasonLong) {\n      teamData[team].push([]);\n    }\n  }\n  for (let team in _config__WEBPACK_IMPORTED_MODULE_0__.combined_dict) {\n    if (_config__WEBPACK_IMPORTED_MODULE_0__.f1_teams.includes(parseInt(team))) {\n      let pos = pairTeamPosDict[team];\n      new_addTeam(teamData[team], _config__WEBPACK_IMPORTED_MODULE_0__.combined_dict[team], pos, team);\n    }\n  }\n  new_color_teams_table();\n  order_teams_table();\n  manage_teams_table_logos();\n  manage_teams_table_names();\n}\nfunction new_addTeam(teamData, name, pos, id) {\n  let data = document.querySelector(\".teams-table-data\");\n  let row = document.createElement(\"div\");\n  row.classList = \"teams-table-row\";\n  let nameDiv = document.createElement(\"div\");\n  let teamName = document.createElement(\"span\");\n  let engineName = document.createElement(\"span\");\n  engineName.classList = \"teams-table-engine-name bold-font\";\n  engineName.textContent = engine_names[engine_allocations[id]];\n  nameDiv.dataset.teamid = id;\n  nameDiv.classList = \"teams-table-team bold-font\";\n  teamName.innerText = name.toUpperCase();\n  nameDiv.appendChild(teamName);\n  nameDiv.appendChild(engineName);\n  row.appendChild(nameDiv);\n  let posDiv = document.createElement(\"div\");\n  posDiv.classList = \"teams-table-position bold-font\";\n  posDiv.innerText = pos;\n  row.appendChild(posDiv);\n  let logoDiv = document.createElement(\"div\");\n  logoDiv.classList = \"teams-table-logo\";\n  let logo = document.createElement(\"img\");\n  logo.classList = \"teams-table-logo-inner\";\n  logo.dataset.teamid = id;\n  logoDiv.classList.add(_config__WEBPACK_IMPORTED_MODULE_0__.team_dict[id] + \"iconback\");\n  logo.setAttribute(\"src\", _config__WEBPACK_IMPORTED_MODULE_0__.logos_disc[id]);\n  logoDiv.appendChild(logo);\n  row.appendChild(logoDiv);\n  row.appendChild(nameDiv);\n  let driverCounted = 0;\n  let teampoints = 0;\n  //only take pair indexes\n  if (teamData !== undefined) {\n    teamData.forEach(function (race, index) {\n      if (index % 2 === 0) {\n        let raceDiv = document.createElement(\"div\");\n        raceDiv.classList = \"teams-table-normal\";\n        if (race.length > 0) {\n          let driver1 = teamData[index];\n          let driver2 = teamData[index + 1];\n          raceDiv.dataset.raceid = driver1[0];\n          let driver1Points = 0;\n          let driver2Points = 0;\n          let driver1Pos = 0;\n          let driver2Pos = 0;\n          if (driver1[2] === -1) {\n            driver1Points = 0;\n            driver1Pos = \"DNF\";\n          } else {\n            driver1Points = driver1[2];\n            driver1Pos = driver1[1];\n          }\n          if (driver2[2] === -1) {\n            driver2Points = 0;\n            driver2Pos = \"DNF\";\n          } else {\n            driver2Points = driver2[2];\n            driver2Pos = driver2[1];\n          }\n          raceDiv.dataset.points = parseInt(driver1Points) + parseInt(driver2Points);\n          raceDiv.dataset.pos1 = driver1Pos;\n          raceDiv.dataset.pos2 = driver2Pos;\n          raceDiv.dataset.quali1 = driver1[4];\n          raceDiv.dataset.quali2 = driver2[4];\n          raceDiv.dataset.fastlap1 = driver1[3];\n          raceDiv.dataset.fastlap2 = driver2[3];\n          raceDiv.dataset.gapToWinner1 = driver1[5];\n          raceDiv.dataset.gapToWinner2 = driver2[5];\n          raceDiv.dataset.gapToPole1 = driver1[6];\n          raceDiv.dataset.gapToPole2 = driver2[6];\n          teampoints += parseInt(raceDiv.dataset.points);\n          if (race.length > 8) {\n            let d1SprintPoints = 0;\n            let d2SprintPoints = 0;\n            let d1SprintPos = 0;\n            let d2SprintPos = 0;\n            if (driver1[5] === -1) {\n              d1SprintPoints = 0;\n              d1SprintPos = \"DNF\";\n            } else {\n              d1SprintPoints = driver1[7];\n              d1SprintPos = driver1[8];\n            }\n            if (driver2[5] === -1) {\n              d2SprintPoints = 0;\n              d2SprintPos = \"DNF\";\n            } else {\n              d2SprintPoints = driver2[7];\n              d2SprintPos = driver2[8];\n            }\n            raceDiv.dataset.sprintpoints = parseInt(d1SprintPoints) + parseInt(d2SprintPoints);\n            raceDiv.dataset.sprintpos1 = d1SprintPos;\n            teampoints += parseInt(raceDiv.dataset.sprintpoints);\n            raceDiv.dataset.sprintpos2 = d2SprintPos;\n          }\n        } else {\n          raceDiv.innerText = \"-\";\n        }\n        let newText = manageTeamsText(raceDiv);\n        raceDiv.innerHTML = newText.innerHTML;\n        row.appendChild(raceDiv);\n      }\n    });\n  }\n  let pointsDiv = document.createElement(\"div\");\n  pointsDiv.classList = \"teams-table-points bold-font\";\n  pointsDiv.innerText = teampoints;\n  row.appendChild(pointsDiv);\n  data.appendChild(row);\n}\nfunction new_addDriver(driver, races_done, odd) {\n  let data = document.querySelector(\".drivers-table-data\");\n  let row = document.createElement(\"div\");\n  row.classList = \"drivers-table-row\";\n  if (odd) {\n    row.classList.add(\"odd\");\n  }\n  let nameDiv = document.createElement(\"div\");\n  nameDiv.classList = \"drivers-table-driver\";\n  let name = driver[0].split(\" \");\n  let nameContainer = document.createElement(\"div\");\n  nameContainer.className = \"name-container\";\n  let spanName = document.createElement(\"span\");\n  let spanLastName = document.createElement(\"span\");\n  (0,_transfers__WEBPACK_IMPORTED_MODULE_3__.format_name)(driver[0], name, spanName, spanLastName);\n  spanLastName.classList.add(\"bold-font\");\n  spanLastName.dataset.teamid = driver[1];\n  row.dataset.teamid = driver[1];\n  nameContainer.appendChild(spanName);\n  nameContainer.appendChild(spanLastName);\n  nameDiv.appendChild(nameContainer);\n  (0,_transfers__WEBPACK_IMPORTED_MODULE_3__.manageColor)(spanLastName, spanLastName);\n  let posDiv = document.createElement(\"div\");\n  posDiv.classList = \"drivers-table-position bold-font\";\n  posDiv.innerText = driver[2];\n  row.appendChild(posDiv);\n  let logoDiv = document.createElement(\"div\");\n  logoDiv.classList = \"drivers-table-logo-div\";\n  let logo = document.createElement(\"img\");\n  logo.classList = \"drivers-table-logo\";\n  logo.dataset.teamid = driver[1];\n  if (driver[1] === 1) {\n    //ferrari\n    logo.classList.add(\"logo-ferrari-table\");\n  }\n  if (driver[1] === 2) {\n    //mclaren\n    logo.classList.add(\"logo-reduce\");\n  }\n  if (driver[1] === 3) {\n    //redbull\n    logo.classList.add(\"logo-up-down-mid\");\n  }\n  if (driver[1] === 6) {\n    logo.classList.add(\"logo-williams-table\");\n  }\n  if (driver[1] === 4 || driver[1] === 7) {\n    //mercedes  haas\n    logo.classList.add(\"logo-merc-table\");\n  }\n  if (driver[1] === 5) {\n    //different to aston\n    logo.classList.add(_config__WEBPACK_IMPORTED_MODULE_0__.driversTableLogosDict[alpineReplace]);\n  }\n  if (driver[1] === 8) {\n    //alphatauri\n    logo.classList.add(_config__WEBPACK_IMPORTED_MODULE_0__.driversTableLogosDict[alphaReplace]);\n  }\n  if (driver[1] === 9) {\n    //alfa\n    logo.classList.add(_config__WEBPACK_IMPORTED_MODULE_0__.driversTableLogosDict[alfaReplace]);\n  }\n  if (driver[1] === 10 || driver[1] === 32) {\n    logo.classList.add(\"logo-up-down-little\");\n  }\n  logoDiv.classList.add(_config__WEBPACK_IMPORTED_MODULE_0__.team_dict[driver[1]] + \"hoverback\");\n  logo.setAttribute(\"src\", _config__WEBPACK_IMPORTED_MODULE_0__.logos_disc[driver[1]]);\n  logoDiv.appendChild(logo);\n  row.appendChild(logoDiv);\n  row.appendChild(nameDiv);\n  let driverpoints = 0;\n  races_ids.forEach(function (raceid) {\n    let raceDiv = document.createElement(\"div\");\n    raceDiv.classList = \"drivers-table-normal\";\n    if (races_done.includes(raceid)) {\n      let index = races_done.indexOf(raceid);\n      let race = driver[index + 3];\n      raceDiv.dataset.pos = race[1];\n      raceDiv.dataset.points = race[2];\n      raceDiv.dataset.fastlap = race[3];\n      raceDiv.dataset.qualy = race[4];\n      raceDiv.dataset.gapToWinner = race[5];\n      raceDiv.dataset.gapToPole = race[6];\n      if (race.length > 8) {\n        //sprint \n        raceDiv.dataset.sprintpos = race[8];\n        raceDiv.dataset.sprintpoints = race[7];\n        if (raceDiv.dataset.sprintpoints !== \"-1\") {\n          driverpoints += parseInt(raceDiv.dataset.sprintpoints);\n        }\n      }\n      if (raceDiv.dataset.points !== \"-1\") {\n        driverpoints += parseInt(raceDiv.dataset.points);\n      }\n      raceDiv = manageText(raceDiv);\n      row.appendChild(raceDiv);\n    } else {\n      raceDiv.innerText = \"-\";\n      row.appendChild(raceDiv);\n    }\n  });\n  let pointsDiv = document.createElement(\"div\");\n  pointsDiv.classList = \"drivers-table-points bold-font\";\n  pointsDiv.innerText = driverpoints;\n  row.appendChild(pointsDiv);\n  row.addEventListener(\"hover\", function (elem) {\n    if (elem.dataset.teamid === 2) {\n      let logo = this.querySelector(\".drivers-table-logo\");\n      logo.style.opacity = \"0\";\n      let logo2 = this.querySelector(\".drivers-table-logo\").nextElementSibling;\n      logo2.style.opacity = \"1\";\n    }\n  });\n  data.appendChild(row);\n}\nfunction manageText(raceDiv) {\n  if (raceDiv.innerText === \"-\") {\n    return raceDiv;\n  }\n  if (pointsOrPos === \"points\" || pointsOrPos === \"pos\") {\n    let racePart = \"\";\n    let sprintPart = \"\";\n    if (raceDiv.dataset.points !== \"-1\") {\n      if (pointsOrPos === \"points\") {\n        racePart = raceDiv.dataset.points;\n      } else {\n        racePart = raceDiv.dataset.pos;\n      }\n    } else {\n      racePart = \"DNF\";\n    }\n    if (raceDiv.dataset.points === \"0\" && pointsOrPos === \"points\") {\n      racePart = \"\";\n    }\n    if (raceDiv.dataset.sprintpoints !== undefined) {\n      if (raceDiv.dataset.sprintpoints !== \"-1\") {\n        if (pointsOrPos === \"points\") {\n          sprintPart = raceDiv.dataset.sprintpoints;\n        } else {\n          sprintPart = raceDiv.dataset.sprintpos;\n        }\n      } else {\n        sprintPart = \"DNF\";\n      }\n    }\n    if (raceDiv.dataset.sprintpoints === undefined || raceDiv.dataset.sprintpoints === \"0\") {\n      raceDiv.innerText = racePart;\n    } else {\n      raceDiv.innerText = racePart + \"(\" + sprintPart + \")\";\n    }\n  } else if (pointsOrPos === \"quali\") {\n    raceDiv.innerText = raceDiv.dataset.qualy;\n  } else if (pointsOrPos === \"gapWinner\") {\n    if (raceDiv.dataset.pos === \"-1\") {\n      raceDiv.innerText = \"DNF\";\n    } else {\n      raceDiv.innerText = raceDiv.dataset.gapToWinner;\n    }\n  } else if (pointsOrPos === \"gapPole\") {\n    raceDiv.innerText = raceDiv.dataset.gapToPole;\n  }\n  return raceDiv;\n}\nfunction manageTeamsText(raceDiv) {\n  if (raceDiv.innerText === \"-\") {\n    return raceDiv;\n  }\n  if (pointsOrPos === \"points\") {\n    if (raceDiv.dataset.sprintpoints !== undefined) {\n      let racePart = raceDiv.dataset.points;\n      let sprintPart = \"(\" + raceDiv.dataset.sprintpoints + \")\";\n      if (racePart === \"0\") {\n        racePart = \"\";\n      }\n      if (sprintPart === \"0\") {\n        sprintPart = \"\";\n      }\n      raceDiv.innerText = racePart + sprintPart;\n    } else {\n      let racePart = raceDiv.dataset.points;\n      if (racePart === \"0\") {\n        racePart = \"\";\n      }\n      raceDiv.innerText = racePart;\n    }\n  } else if (pointsOrPos === \"pos\") {\n    let d1Pos = \"DNF\";\n    let d2Pos = \"DNF\";\n    let d1SprPos = \"\";\n    let d2SprPos = \"\";\n    if (raceDiv.dataset.pos1 !== \"DNF\") {\n      d1Pos = raceDiv.dataset.pos1;\n    }\n    if (raceDiv.dataset.pos2 !== \"DNF\") {\n      d2Pos = raceDiv.dataset.pos2;\n    }\n    if (raceDiv.dataset.sprintpos1 !== undefined) {\n      d1SprPos = raceDiv.dataset.sprintpos1;\n    }\n    if (raceDiv.dataset.sprintpos2 !== undefined) {\n      d2SprPos = raceDiv.dataset.sprintpos2;\n    }\n    let text = d1Pos + \"<br>\" + d2Pos;\n    if (d1SprPos !== \"\" && d2SprPos !== \"\") {\n      text = d1Pos + \"(\" + d1SprPos + \")\" + \"<br>\" + d2Pos + \"(\" + d2SprPos + \")\";\n    }\n    raceDiv.innerHTML = text;\n  } else if (pointsOrPos === \"quali\") {\n    raceDiv.innerHTML = raceDiv.dataset.quali1 + \"<br>\" + raceDiv.dataset.quali2;\n  } else if (pointsOrPos === \"gapWinner\") {\n    let d1, d2;\n    if (raceDiv.dataset.pos1 === \"DNF\") {\n      d1 = \"DNF\";\n    } else {\n      d1 = raceDiv.dataset.gapToWinner1;\n    }\n    if (raceDiv.dataset.pos2 === \"DNF\") {\n      d2 = \"DNF\";\n    } else {\n      d2 = raceDiv.dataset.gapToWinner2;\n    }\n    raceDiv.innerHTML = d1 + \"<br>\" + d2;\n  } else if (pointsOrPos === \"gapPole\") {\n    raceDiv.innerHTML = raceDiv.dataset.gapToPole1 + \"<br>\" + raceDiv.dataset.gapToPole2;\n  }\n  return raceDiv;\n}\nfunction hoverListeners() {\n  document.querySelectorAll(\".drivers-table-row\").forEach(function (row) {\n    row.addEventListener(\"mouseenter\", function () {\n      if (this.dataset.teamid === \"2\" || this.dataset.teamid === \"6\" || this.dataset.teamid === \"5\" && alpineReplace !== \"alpine\" || this.dataset.teamid === \"9\" && alfaReplace === \"sauber\" || this.dataset.teamid === \"8\" && (alphaReplace === \"brawn\" || alphaReplace === \"hugo\" || alphaReplace === \"toyota\")) {\n        let logo = this.querySelector(\".drivers-table-logo\");\n        let new_src = _config__WEBPACK_IMPORTED_MODULE_0__.logos_disc[this.dataset.teamid].slice(0, -4) + \"2\" + logo.src.slice(-4);\n        logo.src = new_src;\n      }\n    });\n    row.addEventListener(\"mouseleave\", function () {\n      if (this.dataset.teamid === \"2\" || this.dataset.teamid === \"6\" || this.dataset.teamid === \"5\" && alpineReplace !== \"alpine\" || this.dataset.teamid === \"9\" && alfaReplace === \"sauber\" || this.dataset.teamid === \"8\" && (alphaReplace === \"brawn\" || alphaReplace === \"hugo\" || alphaReplace === \"toyota\")) {\n        let logo = this.querySelector(\".drivers-table-logo\");\n        let new_src = _config__WEBPACK_IMPORTED_MODULE_0__.logos_disc[this.dataset.teamid].slice(0, -4) + logo.src.slice(-4);\n        logo.src = new_src;\n      }\n    });\n  });\n}\n\n/**\r\n * Creates the year selector menu\r\n * @param {String} actualYear current year of the save\r\n */\nfunction generateYearsMenu(actualYear) {\n  document.querySelector(\"#yearInput\").min = actualYear;\n  (0,_transfers__WEBPACK_IMPORTED_MODULE_3__.setCurrentSeason)(actualYear);\n  let yearMenu = document.querySelector(\"#yearMenu\");\n  let yearH2H = document.querySelector(\"#yearMenuH2H\");\n  let yearPrediction = document.querySelector(\"#yearPredictionMenu\");\n  let yearPredictionModal = document.querySelector(\"#yearPredictionModalMenu\");\n  yearMenu.innerHTML = \"\";\n  yearH2H.innerHTML = \"\";\n  yearPrediction.innerHTML = \"\";\n  yearPredictionModal.innerHTML = \"\";\n  for (let year = actualYear; year >= _renderer__WEBPACK_IMPORTED_MODULE_2__.game_version; year--) {\n    let a = document.createElement(\"a\");\n    a.textContent = year.toString();\n    a.classList = \"dropdown-item\";\n    a.style.cursor = \"pointer\";\n    yearMenu.appendChild(a);\n    a.addEventListener(\"click\", function () {\n      document.getElementById(\"yearButton\").textContent = a.textContent;\n      isYearSelected = true;\n      manage_show_tables();\n      const message = {\n        command: 'yearSelected',\n        data: {\n          year: a.textContent\n        }\n      };\n      const command = _renderer__WEBPACK_IMPORTED_MODULE_2__.factory.createCommand(message);\n      command.execute();\n    });\n    let a2 = document.createElement(\"a\");\n    a2.textContent = year.toString();\n    a2.classList = \"dropdown-item\";\n    a2.style.cursor = \"pointer\";\n    yearH2H.appendChild(a2);\n    a2.addEventListener(\"click\", function () {\n      (0,_head2head__WEBPACK_IMPORTED_MODULE_1__.resetH2H)();\n      document.querySelectorAll(\".modal-team\").forEach(function (elem) {\n        elem.classList.remove(\"d-none\");\n      });\n      document.getElementById(\"yearButtonH2H\").textContent = a2.textContent;\n      const message = {\n        command: 'yearSelectedH2H',\n        data: {\n          year: a2.textContent\n        }\n      };\n      const command = _renderer__WEBPACK_IMPORTED_MODULE_2__.factory.createCommand(message);\n      command.execute();\n    });\n    let a3 = document.createElement(\"a\");\n    a3.textContent = year.toString();\n    a3.classList = \"dropdown-item\";\n    a3.style.cursor = \"pointer\";\n    yearPrediction.appendChild(a3);\n    a3.addEventListener(\"click\", function () {\n      document.getElementById(\"yearPredictionButton\").textContent = a3.textContent;\n      document.querySelector(\"#mainPred\").classList.remove(\"d-none\");\n      let dataYear = {\n        command: \"yearSelectedPrediction\",\n        year: a3.textContent\n      };\n      _renderer__WEBPACK_IMPORTED_MODULE_2__.socket.send(JSON.stringify(dataYear));\n    });\n    let a4 = document.createElement(\"a\");\n    a4.textContent = year.toString();\n    a4.classList = \"dropdown-item\";\n    a4.style.cursor = \"pointer\";\n    yearPredictionModal.appendChild(a4);\n    a4.addEventListener(\"click\", function () {\n      document.getElementById(\"yearPredictionModalButton\").textContent = a4.textContent;\n      let dataYear = {\n        command: \"yearSelectedPredictionModal\",\n        year: a4.textContent\n      };\n      _renderer__WEBPACK_IMPORTED_MODULE_2__.socket.send(JSON.stringify(dataYear));\n    });\n  }\n  yearMenu.childNodes[0].click();\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/frontend/seasonViewer.js?");

/***/ }),

/***/ "./src/js/frontend/stats.js":
/*!**********************************!*\
  !*** ./src/js/frontend/stats.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateOverall: () => (/* binding */ calculateOverall),\n/* harmony export */   change_elegibles: () => (/* binding */ change_elegibles),\n/* harmony export */   getName: () => (/* binding */ getName),\n/* harmony export */   listenersStaffGroups: () => (/* binding */ listenersStaffGroups),\n/* harmony export */   manage_stat_bar: () => (/* binding */ manage_stat_bar),\n/* harmony export */   place_drivers_editStats: () => (/* binding */ place_drivers_editStats),\n/* harmony export */   place_staff_editStats: () => (/* binding */ place_staff_editStats),\n/* harmony export */   removeStatsDrivers: () => (/* binding */ removeStatsDrivers),\n/* harmony export */   setStatPanelShown: () => (/* binding */ setStatPanelShown),\n/* harmony export */   setTypeEdit: () => (/* binding */ setTypeEdit),\n/* harmony export */   setTypeOverall: () => (/* binding */ setTypeOverall),\n/* harmony export */   statPanelShown: () => (/* binding */ statPanelShown),\n/* harmony export */   typeEdit: () => (/* binding */ typeEdit),\n/* harmony export */   typeOverall: () => (/* binding */ typeOverall)\n/* harmony export */ });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"./src/js/frontend/config.js\");\n/* harmony import */ var _transfers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transfers */ \"./src/js/frontend/transfers.js\");\n\n\nlet driverStatTitle = document.getElementById(\"driverStatsTitle\");\nlet statPanelShown = 0;\nlet typeOverall = \"driver\";\nlet typeEdit;\nlet oldNum;\nfunction setStatPanelShown(value) {\n  statPanelShown = value;\n}\nfunction setTypeOverall(value) {\n  typeOverall = value;\n}\nfunction setTypeEdit(value) {\n  typeEdit = value;\n}\n\n/**\r\n * Removes all the staff from their list\r\n */\nfunction removeStatsDrivers() {\n  document.querySelectorAll(\".staff-list\").forEach(function (elem) {\n    elem.innerHTML = \"\";\n  });\n}\n\n/**\r\n * Places the drivers that the backend fetched on the driver list\r\n * @param {Object} driversArray Object with all the drivers that the backend fetched\r\n */\nfunction place_drivers_editStats(driversArray) {\n  let divPosition;\n  driversArray.forEach(driver => {\n    divPosition = \"fulldriverlist\";\n    let newDiv = document.createElement(\"div\");\n    let ovrDiv = document.createElement(\"div\");\n    let ovrSpan = document.createElement(\"span\");\n    newDiv.className = \"col normal-driver\";\n    newDiv.dataset.driverid = driver[1];\n    let nameDiv = document.createElement(\"div\");\n    nameDiv.className = \"name-div-edit-stats\";\n    newDiv.dataset.teamid = driver[2];\n    newDiv.dataset.type = 0;\n    let name = driver[0].split(\" \");\n    let spanName = document.createElement(\"span\");\n    let spanLastName = document.createElement(\"span\");\n    (0,_transfers__WEBPACK_IMPORTED_MODULE_1__.format_name)(driver[0], name, spanName, spanLastName);\n    newDiv.dataset.name = (0,_transfers__WEBPACK_IMPORTED_MODULE_1__.insert_space)(name[0]) + \" \" + name.slice(1).join(\" \");\n    spanLastName.classList.add(\"bold-font\");\n    spanLastName.classList.add(\"surname\");\n    nameDiv.appendChild(spanName);\n    nameDiv.appendChild(spanLastName);\n    (0,_transfers__WEBPACK_IMPORTED_MODULE_1__.manageColor)(newDiv, spanLastName);\n    newDiv.appendChild(nameDiv);\n    newDiv.classList.add(_config__WEBPACK_IMPORTED_MODULE_0__.team_dict[driver[2]] + \"-transparent\");\n    let statsString = '';\n    for (let i = 5; i <= 15; i++) {\n      statsString += driver[i] + ' ';\n    }\n    newDiv.dataset.stats = statsString;\n    newDiv.dataset.superLicense = driver[\"superlicense\"];\n    newDiv.dataset.age = driver[\"age\"];\n    newDiv.dataset.retirement = driver[\"retirement_age\"];\n    newDiv.dataset.numWC = driver[\"wants1\"];\n    newDiv.dataset.number = driver[\"driver_number\"];\n    newDiv.dataset.raceFormula = driver[\"race_formula\"];\n    newDiv.dataset.driverCode = driver[\"driver_code\"];\n    newDiv.dataset.isRetired = driver[4];\n    if (driver[\"nationality\"] !== \"\") {\n      let country_code = driver[\"nationality\"];\n      let flag = document.createElement(\"img\");\n      flag.className = \"name-flag\";\n      flag.src = `https://flagsapi.com/${country_code}/flat/24.png`;\n      nameDiv.appendChild(flag);\n    }\n    if (driver[\"mentality0\"] >= 0) {\n      newDiv.dataset.mentality0 = driver[\"mentality0\"];\n      newDiv.dataset.mentality1 = driver[\"mentality1\"];\n      newDiv.dataset.mentality2 = driver[\"mentality2\"];\n      newDiv.dataset.globalMentality = driver[\"global_mentality\"];\n    }\n    let mentality = driver[\"global_mentality\"];\n    newDiv.dataset.marketability = driver[\"marketability\"];\n    let ovr = calculateOverall(statsString, \"driver\", mentality);\n    ovrSpan.textContent = ovr[0];\n    ovrDiv.appendChild(ovrSpan);\n    ovrDiv.classList.add(\"bold-font\");\n    ovrDiv.classList.add(\"small-ovr\");\n    newDiv.appendChild(ovrDiv);\n    newDiv.addEventListener('click', () => {\n      let elementosClicked = document.querySelectorAll('.clicked');\n      elementosClicked.forEach(item => item.classList.remove('clicked'));\n      newDiv.classList.toggle('clicked');\n      driverStatTitle.value = newDiv.dataset.name;\n      load_stats(newDiv);\n      if (statPanelShown == 0) {\n        document.getElementById(\"editStatsPanel\").className = \"left-panel-stats\";\n        statPanelShown = 1;\n      }\n      recalculateOverall();\n    });\n    document.getElementById(divPosition).appendChild(newDiv);\n  });\n  document.querySelector(\"#edit_stats\").querySelectorAll(\".custom-input-number\").forEach(function (elem) {\n    elem.addEventListener(\"change\", function () {\n      if (elem.value > 100) {\n        elem.value = 100;\n      }\n      recalculateOverall();\n    });\n  });\n  manage_order(0);\n}\n\n/**\r\n * Places the staff that the backend fetched on their respective staff list\r\n * @param {Object} staffArray Object with all the staff that the backend fetched\r\n */\nfunction place_staff_editStats(staffArray) {\n  let divPosition;\n  staffArray.forEach(staff => {\n    let statsString = '';\n    if (staff[3] == 1) {\n      divPosition = \"fullTechnicalList\";\n      for (let i = 4; i <= 9; i++) {\n        statsString += staff[i] + ' ';\n      }\n    } else if (staff[3] == 2) {\n      divPosition = \"fullEngineerList\";\n      for (let i = 4; i <= 6; i++) {\n        statsString += staff[i] + ' ';\n      }\n    } else if (staff[3] == 3) {\n      divPosition = \"fullAeroList\";\n      for (let i = 4; i <= 11; i++) {\n        statsString += staff[i] + ' ';\n      }\n    } else if (staff[3] == 4) {\n      divPosition = \"fullDirectorList\";\n      for (let i = 4; i <= 7; i++) {\n        statsString += staff[i] + ' ';\n      }\n    }\n    statsString = statsString.slice(0, -1);\n    let newDiv = document.createElement(\"div\");\n    let ovrDiv = document.createElement(\"div\");\n    let ovrSpan = document.createElement(\"span\");\n    newDiv.className = \"col normal-driver\";\n    newDiv.dataset.driverid = staff[1];\n    newDiv.dataset.type = staff[3];\n    let nameDiv = document.createElement(\"div\");\n    nameDiv.className = \"name-div-edit-stats\";\n    newDiv.dataset.teamid = staff[2];\n    let name = staff[0].split(\" \");\n    let spanName = document.createElement(\"span\");\n    let spanLastName = document.createElement(\"span\");\n    (0,_transfers__WEBPACK_IMPORTED_MODULE_1__.format_name)(staff[0], name, spanName, spanLastName);\n    newDiv.dataset.name = (0,_transfers__WEBPACK_IMPORTED_MODULE_1__.insert_space)(name[0]) + \" \" + name.slice(1).join(\" \");\n    spanLastName.classList.add(\"bold-font\");\n    spanLastName.classList.add(\"surname\");\n    nameDiv.appendChild(spanName);\n    nameDiv.appendChild(spanLastName);\n    (0,_transfers__WEBPACK_IMPORTED_MODULE_1__.manageColor)(newDiv, spanLastName);\n    newDiv.appendChild(nameDiv);\n    newDiv.classList.add(_config__WEBPACK_IMPORTED_MODULE_0__.team_dict[staff[2]] + \"-transparent\");\n    newDiv.dataset.stats = statsString;\n    newDiv.dataset.age = staff[\"age\"];\n    newDiv.dataset.retirement = staff[\"retirement_age\"];\n    newDiv.dataset.raceFormula = staff[\"race_formula\"];\n    newDiv.dataset.isRetired = staff[4];\n    if (staff[\"nationality\"] !== \"\") {\n      let country_code = staff[\"nationality\"];\n      let flag = document.createElement(\"img\");\n      flag.className = \"name-flag\";\n      flag.src = `https://flagsapi.com/${country_code}/flat/24.png`;\n      nameDiv.appendChild(flag);\n    }\n    if (staff[\"mentality0\"] >= 0) {\n      newDiv.dataset.mentality0 = staff[\"mentality0\"];\n      newDiv.dataset.mentality1 = staff[\"mentality1\"];\n      newDiv.dataset.mentality2 = staff[\"mentality2\"];\n      newDiv.dataset.globalMentality = staff[\"global_mentality\"];\n    }\n    let mentality = staff[\"global_mentality\"];\n    let ovr = calculateOverall(statsString, \"staff\", mentality);\n    ovrSpan.textContent = ovr[0];\n    ovrDiv.appendChild(ovrSpan);\n    ovrDiv.classList.add(\"bold-font\");\n    ovrDiv.classList.add(\"small-ovr\");\n    newDiv.appendChild(ovrDiv);\n    newDiv.addEventListener('click', () => {\n      let elementosClicked = document.querySelectorAll('.clicked');\n      elementosClicked.forEach(item => item.classList.remove('clicked'));\n      newDiv.classList.toggle('clicked');\n      driverStatTitle.value = newDiv.dataset.name;\n      load_stats(newDiv);\n      if (statPanelShown == 0) {\n        document.getElementById(\"editStatsPanel\").className = \"left-panel-stats\";\n        statPanelShown = 1;\n      }\n      recalculateOverall();\n    });\n    document.getElementById(divPosition).appendChild(newDiv);\n  });\n}\nfunction getMentalityModifier(mentality) {\n  let keys = Object.keys(_config__WEBPACK_IMPORTED_MODULE_0__.mentalityModifiers).map(Number).sort((a, b) => a - b);\n  let nextKey = keys.find(key => key > mentality);\n  return nextKey !== undefined ? _config__WEBPACK_IMPORTED_MODULE_0__.mentalityModifiers[nextKey] : null;\n}\n\n/**\r\n * changes the overall placed in the overall square\r\n */\nfunction recalculateOverall() {\n  let stats = \"\";\n  document.querySelectorAll(\".elegible\").forEach(function (elem) {\n    stats += elem.value + \" \";\n  });\n  stats = stats.slice(0, -1);\n  let oldovr = document.getElementById(\"ovrholder\").innerHTML;\n  let ovr = calculateOverall(stats, typeOverall, 2, \"big\");\n  if (oldovr > ovr) {\n    document.getElementById(\"ovrholder\").innerHTML = ovr;\n    document.getElementById(\"ovrholder\").className = \"overall-holder bold-font alertNeg\";\n    setTimeout(() => {\n      document.getElementById(\"ovrholder\").className = \"overall-holder bold-font\";\n    }, 150);\n  } else if (oldovr < ovr) {\n    document.getElementById(\"ovrholder\").innerHTML = ovr;\n    document.getElementById(\"ovrholder\").className = \"overall-holder bold-font alertPos\";\n    setTimeout(() => {\n      document.getElementById(\"ovrholder\").className = \"overall-holder bold-font\";\n    }, 150);\n  }\n}\n\n/**\r\n * eventListeenr for the confirm button for the stats\r\n */\n\n/**\r\n * Gets the named with a space between name and lastname\r\n * @param {*} html element with the name bad formatted\r\n * @returns the name formatted\r\n */\nfunction getName(html) {\n  let name = \"\";\n  html.querySelectorAll('span').forEach(function (elem) {\n    name += elem.innerText + \" \";\n  });\n  name = name.slice(0, -1);\n  return name;\n}\n\n/**\r\n * Mathematic calculations to get a staff's overall value\r\n * @param {string} stats all stats spearated by a space between them\r\n * @param {string} type type of staff\r\n * @returns the number of his overall value\r\n */\nfunction calculateOverall(stats, type, mentality = 2, ovr = \"small\") {\n  let statsArray = stats.split(\" \").map(Number);\n  let mentality_stats = [];\n  for (let i = 0; i < statsArray.length; i++) {\n    mentality_stats[i] = statsArray[i] + getMentalityModifier(mentality);\n  }\n  let rating, mentality_rating;\n  if (type === \"driver\") {\n    let cornering = statsArray[0];\n    let braking = statsArray[1];\n    let control = statsArray[2];\n    let smoothness = statsArray[3];\n    let adaptability = statsArray[4];\n    let overtaking = statsArray[5];\n    let defence = statsArray[6];\n    let reactions = statsArray[7];\n    let accuracy = statsArray[8];\n    rating = (cornering + braking * 0.75 + reactions * 0.5 + control * 0.75 + smoothness * 0.5 + accuracy * 0.75 + adaptability * 0.25 + overtaking * 0.25 + defence * 0.25) / 5;\n    mentality_rating = (mentality_stats[0] + mentality_stats[1] * 0.75 + mentality_stats[7] * 0.5 + mentality_stats[2] * 0.75 + mentality_stats[3] * 0.5 + mentality_stats[8] * 0.75 + mentality_stats[4] * 0.25 + mentality_stats[5] * 0.25 + mentality_stats[6] * 0.25) / 5;\n  } else if (type === \"staff\") {\n    let suma = 0;\n    mentality_rating = 0;\n    for (let i = 0; i < statsArray.length; i++) {\n      suma += statsArray[i];\n      mentality_rating += mentality_stats[i];\n    }\n    rating = suma / statsArray.length;\n    mentality_rating = mentality_rating / statsArray.length;\n  }\n  if (ovr === \"small\") {\n    return [Math.round(rating), Math.round(mentality_rating)];\n  } else {\n    return Math.round(rating);\n  }\n}\nfunction updateStat(input, increment) {\n  let val = parseInt(input.value) + increment;\n  if (val > 100) val = 100;\n  if (val < 0) val = 0;\n  input.value = val;\n  recalculateOverall();\n  manage_stat_bar(input, val);\n}\ndocument.querySelectorAll(\".attirbutes-panel .bi-plus-lg\").forEach(button => {\n  let intervalId;\n  button.addEventListener('mousedown', function () {\n    let input = this.parentNode.parentNode.querySelector(\"input\");\n    updateStat(input, 1);\n    intervalId = setInterval(() => {\n      updateStat(input, 1);\n    }, 100);\n  });\n  button.addEventListener('mouseup', function () {\n    clearInterval(intervalId);\n  });\n  button.addEventListener('mouseleave', function () {\n    clearInterval(intervalId);\n  });\n});\ndocument.querySelectorAll(\".attirbutes-panel .bi-dash-lg\").forEach(button => {\n  let intervalId;\n  button.addEventListener('mousedown', function () {\n    let input = this.parentNode.parentNode.querySelector(\"input\");\n    updateStat(input, -1);\n    intervalId = setInterval(() => {\n      updateStat(input, -1);\n    }, 100);\n  });\n  button.addEventListener('mouseup', function () {\n    clearInterval(intervalId);\n  });\n  button.addEventListener('mouseleave', function () {\n    clearInterval(intervalId);\n  });\n});\ndocument.querySelectorAll(\".age-holder .bi-plus-lg\").forEach(function (elem) {\n  elem.addEventListener('mousedown', function (event) {\n    let intervalId;\n    let input = event.target.parentNode.parentNode.querySelector(\".age-ret\");\n    function updateRetirement(increment) {\n      let age = parseInt(input.innerText.split(\" \")[1]) + increment;\n      input.innerText = input.dataset.text + \" \" + age;\n    }\n    updateRetirement(1);\n    intervalId = setInterval(() => {\n      updateRetirement(1);\n    }, 100);\n    this.addEventListener('mouseup', function () {\n      clearInterval(intervalId);\n    });\n    this.addEventListener('mouseleave', function () {\n      clearInterval(intervalId);\n    });\n  });\n});\ndocument.querySelectorAll(\".age-holder .bi-dash-lg\").forEach(function (elem) {\n  elem.addEventListener('mousedown', function (event) {\n    let intervalId;\n    let input = event.target.parentNode.parentNode.querySelector(\".age-ret\");\n    function updateRetirement(increment) {\n      let age = parseInt(input.innerText.split(\" \")[1]) + increment;\n      input.innerText = input.dataset.text + \" \" + age;\n    }\n    updateRetirement(-1);\n    intervalId = setInterval(() => {\n      updateRetirement(-1);\n    }, 100);\n    this.addEventListener('mouseup', function () {\n      clearInterval(intervalId);\n    });\n    this.addEventListener('mouseleave', function () {\n      clearInterval(intervalId);\n    });\n  });\n});\ndocument.querySelector(\"#nameFilter\").addEventListener(\"input\", function (event) {\n  let text = event.target.value;\n  if (text !== \"\") {\n    document.querySelector(\"#filterContainer\").querySelector(\".bi-x\").classList.remove(\"d-none\");\n  } else {\n    document.querySelector(\"#filterContainer\").querySelector(\".bi-x\").classList.add(\"d-none\");\n  }\n  let elements = document.querySelectorAll(\".normal-driver\");\n  elements.forEach(function (elem) {\n    let first_name = elem.children[0].children[0].innerText;\n    let last_name = elem.children[0].children[1].innerText;\n    let full_name = first_name + \" \" + last_name;\n    let minus = full_name.toLowerCase();\n    let name = text.toLowerCase();\n    if (minus.includes(name)) {\n      elem.classList.remove(\"d-none\");\n    } else {\n      elem.classList.add(\"d-none\");\n    }\n  });\n});\ndocument.querySelectorAll(\".text-filter-container .bi-x\").forEach(function (elem) {\n  elem.addEventListener(\"click\", function () {\n    let input = elem.parentNode.querySelector(\"input\");\n    input.value = \"\";\n    elem.classList.add(\"d-none\");\n    let event = new Event('input', {\n      bubbles: true,\n      cancelable: true\n    });\n    input.dispatchEvent(event);\n  });\n});\ndocument.querySelector(\"#filterIcon\").addEventListener(\"click\", function () {\n  document.getElementById(\"edit_stats\").querySelector(\".category-filters\").classList.toggle(\"show\");\n  document.getElementById(\"edit_stats\").querySelector(\".filter-container\").classList.toggle(\"focused\");\n});\ndocument.getElementById(\"edit_stats\").querySelectorAll(\".filter-pills\").forEach(function (elem) {\n  elem.addEventListener(\"click\", function (event) {\n    let isActive = elem.classList.contains('active');\n    document.getElementById(\"edit_stats\").querySelectorAll('.filter-pills').forEach(function (el) {\n      el.classList.remove('active');\n    });\n    if (!isActive) {\n      elem.classList.add('active');\n    }\n  });\n});\ndocument.querySelector(\"#F1filter\").addEventListener(\"click\", function (event) {\n  if (!event.target.classList.contains(\"active\")) {\n    let elements = document.querySelectorAll(\".normal-driver\");\n    elements.forEach(function (elem) {\n      elem.classList.remove(\"d-none\");\n    });\n  } else {\n    let elements = document.querySelectorAll(\".normal-driver\");\n    elements.forEach(function (elem) {\n      if (parseInt(elem.dataset.raceFormula) === 1) {\n        elem.classList.remove(\"d-none\");\n      } else {\n        elem.classList.add(\"d-none\");\n      }\n    });\n  }\n});\ndocument.querySelector(\"#F2filter\").addEventListener(\"click\", function (event) {\n  if (!event.target.classList.contains(\"active\")) {\n    let elements = document.querySelectorAll(\".normal-driver\");\n    elements.forEach(function (elem) {\n      elem.classList.remove(\"d-none\");\n    });\n  } else {\n    let elements = document.querySelectorAll(\".normal-driver\");\n    elements.forEach(function (elem) {\n      if (parseInt(elem.dataset.raceFormula) === 2) {\n        elem.classList.remove(\"d-none\");\n      } else {\n        elem.classList.add(\"d-none\");\n      }\n    });\n  }\n});\ndocument.querySelector(\"#F3filter\").addEventListener(\"click\", function (event) {\n  if (!event.target.classList.contains(\"active\")) {\n    let elements = document.querySelectorAll(\".normal-driver\");\n    elements.forEach(function (elem) {\n      elem.classList.remove(\"d-none\");\n    });\n  } else {\n    let elements = document.querySelectorAll(\".normal-driver\");\n    elements.forEach(function (elem) {\n      if (parseInt(elem.dataset.raceFormula) === 3) {\n        elem.classList.remove(\"d-none\");\n      } else {\n        elem.classList.add(\"d-none\");\n      }\n    });\n  }\n});\ndocument.querySelector(\"#freefilter\").addEventListener(\"click\", function (event) {\n  if (!event.target.classList.contains(\"active\")) {\n    let elements = document.querySelectorAll(\".normal-driver\");\n    elements.forEach(function (elem) {\n      elem.classList.remove(\"d-none\");\n    });\n  } else {\n    let elements = document.querySelectorAll(\".normal-driver\");\n    elements.forEach(function (elem) {\n      if (parseInt(elem.dataset.raceFormula) === 4) {\n        elem.classList.remove(\"d-none\");\n      } else {\n        elem.classList.add(\"d-none\");\n      }\n    });\n  }\n});\ndocument.querySelector(\".order-space\").querySelectorAll(\"i\").forEach(function (elem) {\n  elem.addEventListener(\"click\", function (event) {\n    let parent = elem.parentNode;\n    let state = parent.dataset.state;\n    let orderNumUp = document.querySelector(\".bi-sort-numeric-up-alt\");\n    let orderNumDown = document.querySelector(\".bi-sort-numeric-down\");\n    parent.dataset.state = (parseInt(state) + 1) % 3;\n    if (parent.dataset.state == 0) {\n      orderNumUp.classList.remove(\"active\");\n      orderNumUp.classList.remove(\"hidden\");\n      orderNumDown.classList.add(\"hidden\");\n    } else if (parent.dataset.state == 1) {\n      orderNumDown.classList.add(\"hidden\");\n      orderNumDown.classList.add(\"active\");\n      orderNumUp.classList.add(\"active\");\n      orderNumUp.classList.remove(\"hidden\");\n    } else if (parent.dataset.state == 2) {\n      orderNumUp.classList.remove(\"active\");\n      orderNumUp.classList.add(\"hidden\");\n      orderNumDown.classList.add(\"active\");\n      orderNumDown.classList.remove(\"hidden\");\n    }\n    manage_order(parseInt(parent.dataset.state));\n  });\n});\n\n/**\r\n * Adds eventListeners to all the elements of the staff dropdown\r\n */\nfunction listenersStaffGroups() {\n  document.querySelectorAll('#staffMenu a').forEach(item => {\n    item.addEventListener(\"click\", function () {\n      const staffButton = document.getElementById('staffDropdown');\n      let staffSelected = item.innerHTML;\n      let staffCode = item.dataset.spacestats;\n      if (staffCode === \"driverStats\") {\n        typeOverall = \"driver\";\n        typeEdit = \"0\";\n        document.getElementById(\"driverSpecialAttributes\").classList.remove(\"d-none\");\n        document.querySelector(\"#superLicenseSwitch\").classList.remove(\"d-none\");\n        document.querySelector(\"#driverCode\").classList.remove(\"d-none\");\n      } else {\n        typeOverall = \"staff\";\n        document.getElementById(\"driverSpecialAttributes\").classList.add(\"d-none\");\n        document.querySelector(\"#superLicenseSwitch\").classList.add(\"d-none\");\n        document.querySelector(\"#driverCode\").classList.add(\"d-none\");\n        if (staffCode === \"chiefStats\") {\n          typeEdit = \"1\";\n        }\n        if (staffCode === \"engineerStats\") {\n          typeEdit = \"2\";\n        }\n        if (staffCode === \"aeroStats\") {\n          typeEdit = \"3\";\n        }\n        if (staffCode === \"directorStats\") {\n          typeEdit = \"4\";\n        }\n      }\n      staffButton.innerHTML = staffSelected;\n      change_elegibles(item.dataset.spacestats);\n      document.querySelectorAll(\".staff-list\").forEach(function (elem) {\n        elem.classList.add(\"d-none\");\n        if (item.dataset.list == elem.id) {\n          elem.classList.remove(\"d-none\");\n        }\n      });\n      document.querySelector(\".left-panel-stats\").classList.add(\"d-none\");\n      statPanelShown = 0;\n    });\n  });\n}\nfunction manage_order(state) {\n  let elements = document.querySelectorAll(\".normal-driver\");\n  let array = Array.from(elements);\n\n  // Crear un objeto para almacenar los padres originales\n  let parents = {};\n  array.forEach(elem => {\n    parents[elem.dataset.driverid] = elem.parentNode; // Asumiendo que cada .normal-driver tiene un data-id único\n  });\n  let sortedArray = array.sort(function (a, b) {\n    let ovrA = parseInt(a.children[1].innerText);\n    let ovrB = parseInt(b.children[1].innerText);\n    let teamA = parseInt(a.dataset.teamid);\n    let teamB = parseInt(b.dataset.teamid);\n    if (state == 0) {\n      if (teamA === 0) return 1;\n      if (teamB === 0) return -1;\n      let indexA = _config__WEBPACK_IMPORTED_MODULE_0__.teamOrder.indexOf(teamA);\n      let indexB = _config__WEBPACK_IMPORTED_MODULE_0__.teamOrder.indexOf(teamB);\n      if (indexA !== indexB) {\n        return indexA - indexB;\n      }\n      return ovrB - ovrA;\n    } else if (state == 1) {\n      return ovrB - ovrA;\n    } else {\n      return ovrA - ovrB;\n    }\n  });\n\n  // Limpiar los contenedores\n  document.querySelectorAll(\".staff-list\").forEach(function (elem) {\n    elem.innerHTML = \"\";\n  });\n\n  // Volver a colocar los elementos ordenados en sus padres originales\n  sortedArray.forEach(function (elem) {\n    let parent = parents[elem.dataset.driverid];\n    parent.appendChild(elem);\n  });\n}\nfunction manage_stat_bar(element, value) {\n  let container = element.parentNode.parentNode.parentNode;\n  let bar = container.querySelector(\".one-stat-progress\");\n  let percentage = value + \"%\";\n  bar.style.width = percentage;\n}\n\n/**\r\n * Loads the stats into the input numbers\r\n * @param {div} div div of the staff that is about to be edited\r\n */\nfunction load_stats(div) {\n  let statsArray = div.dataset.stats.split(\" \").map(Number);\n  let inputArray = document.querySelectorAll(\".elegible\");\n  inputArray.forEach(function (input, index) {\n    let value = statsArray[index];\n    input.value = value;\n    manage_stat_bar(input, value);\n  });\n  let actualAge = document.querySelector(\".actual-age\");\n  let retirementAge = document.querySelector(\".actual-retirement\");\n  let numberButton = document.querySelector(\"#numberButton\");\n  let numberWC = document.querySelector(\"#driverNumber1\");\n  let codeInput = document.querySelector(\"#driverCode\");\n  codeInput.value = div.dataset.driverCode;\n  oldNum = div.dataset.number;\n  actualAge.innerText = \"Age \" + div.dataset.age;\n  retirementAge.innerText = \"Ret \" + div.dataset.retirement;\n  numberButton.querySelector(\".front-gradient\").innerText = div.dataset.number;\n  if (div.dataset.numWC === \"0\") {\n    numberWC.checked = false;\n  } else {\n    numberWC.checked = true;\n  }\n  if (div.dataset.superLicense === \"1\") {\n    document.querySelector(\"#superLicense\").checked = true;\n  } else {\n    document.querySelector(\"#superLicense\").checked = false;\n  }\n  if (div.dataset.isRetired === \"1\") {\n    document.querySelector(\"#retiredInput\").checked = true;\n  } else {\n    document.querySelector(\"#retiredInput\").checked = false;\n  }\n  if (div.dataset.mentality0) {\n    for (let i = 0; i < 3; i++) {\n      let mentality = div.dataset[\"mentality\" + i];\n      let indicator = document.getElementById(\"mentality\" + i);\n      indicator.parentNode.parentNode.classList.remove(\"d-none\");\n      indicator.dataset.value = mentality;\n      let inverted_value = 5 - mentality;\n      let levels = indicator.querySelectorAll('.mentality-level');\n      let mentality_class = _config__WEBPACK_IMPORTED_MODULE_0__.mentality_dict[mentality];\n      for (let j = 0; j < 5; j++) {\n        levels[j].className = \"mentality-level\";\n        if (j <= inverted_value - 1) {\n          levels[j].classList.add(mentality_class);\n        }\n      }\n      let nameEmoji = indicator.parentNode.parentNode.querySelector(\".mentality-and-emoji\");\n      nameEmoji.innerText = capitalizeFirstLetter(mentality_class);\n      nameEmoji.className = \"mentality-and-emoji\";\n      nameEmoji.classList.add(mentality_class);\n    }\n  } else {\n    for (let i = 0; i < 3; i++) {\n      let indicator = document.getElementById(\"mentality\" + i);\n      indicator.parentNode.parentNode.classList.add(\"d-none\");\n    }\n  }\n  if (div.dataset.marketability) {\n    document.querySelector(\"#marketability\").classList.remove(\"d-none\");\n    document.getElementById(\"marketabilityInput\").value = div.dataset.marketability;\n    document.getElementById(\"marketabilityBar\").style.width = div.dataset.marketability + \"%\";\n  } else {\n    document.querySelector(\"#marketability\").classList.add(\"d-none\");\n  }\n}\ndocument.querySelectorAll(\".bar-container .bi-chevron-right\").forEach(function (elem) {\n  elem.addEventListener(\"click\", function () {\n    let indicator = elem.parentNode.querySelector(\".mentality-level-indicator\");\n    let value = parseInt(indicator.getAttribute('data-value')) - 1;\n    if (value < 0) {\n      value = 0;\n    }\n    let inverted_value = 5 - value;\n    indicator.setAttribute('data-value', value);\n    let levels = indicator.querySelectorAll('.mentality-level');\n    let mentality_class = _config__WEBPACK_IMPORTED_MODULE_0__.mentality_dict[value];\n    for (let j = 0; j < 5; j++) {\n      levels[j].className = \"mentality-level\";\n      if (j <= inverted_value - 1) {\n        levels[j].classList.add(mentality_class);\n      }\n    }\n    let nameEmoji = elem.parentNode.parentNode.querySelector(\".mentality-and-emoji\");\n    nameEmoji.innerText = capitalizeFirstLetter(mentality_class);\n    nameEmoji.className = \"mentality-and-emoji\";\n    nameEmoji.classList.add(mentality_class);\n  });\n});\ndocument.querySelectorAll(\".bar-container .bi-chevron-left\").forEach(function (elem) {\n  elem.addEventListener(\"click\", function () {\n    let indicator = elem.parentNode.querySelector(\".mentality-level-indicator\");\n    let value = parseInt(indicator.getAttribute('data-value')) + 1;\n    if (value > 4) {\n      value = 4;\n    }\n    let inverted_value = 5 - value;\n    indicator.setAttribute('data-value', value);\n    let levels = indicator.querySelectorAll('.mentality-level');\n    let mentality_class = _config__WEBPACK_IMPORTED_MODULE_0__.mentality_dict[value];\n    for (let j = 0; j < 5; j++) {\n      levels[j].className = \"mentality-level\";\n      if (j <= inverted_value - 1) {\n        levels[j].classList.add(mentality_class);\n      }\n    }\n    let nameEmoji = elem.parentNode.parentNode.querySelector(\".mentality-and-emoji\");\n    nameEmoji.innerText = capitalizeFirstLetter(mentality_class);\n    nameEmoji.className = \"mentality-and-emoji\";\n    nameEmoji.classList.add(mentality_class);\n  });\n});\nfunction capitalizeFirstLetter(str) {\n  if (!str) return str; // Manejo de cadena vacía\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n}\n\n/**\r\n * Generates the name title on the main panel of the edit stats\r\n * @param {div} html div from the staff selected\r\n * @returns the html necessary to put in the name with correct color\r\n */\nfunction manage_stats_title(html) {\n  let colorClass = \"\";\n  if (html.dataset.teamid != 0) {\n    colorClass = _config__WEBPACK_IMPORTED_MODULE_0__.team_dict[html.dataset.teamid] + \"font\";\n  }\n  let spanName = document.createElement(\"span\");\n  let spanLastName = document.createElement(\"span\");\n  let name = \"<span>\" + html.children[0].children[0].innerText + \" </span>\" + \"<span class='\" + colorClass + \"'>\" + html.children[0].children[1].innerText + \"</span>\";\n\n  //let name = html.substring(0,html.length - 2).trim();\n\n  return name;\n}\n\n/**\r\n * Changes the input number that are taken into account to change stats \r\n * @param {div} divID div that contains the correct input numbers  \r\n */\nfunction change_elegibles(divID) {\n  document.querySelectorAll(\".elegible\").forEach(function (elem) {\n    elem.classList.remove(\"elegible\");\n  });\n  let divStats = document.getElementById(divID);\n  divStats.querySelectorAll(\".custom-input-number\").forEach(function (elem) {\n    elem.classList.add(\"elegible\");\n  });\n  if (divID === \"driverStats\") {\n    document.getElementById(\"growthInput\").classList.add(\"elegible\");\n    document.getElementById(\"agressionInput\").classList.add(\"elegible\");\n  }\n  document.querySelectorAll(\".main-panel-stats\").forEach(function (elem) {\n    elem.className = \"main-panel-stats d-none\";\n  });\n  divStats.classList.remove(\"d-none\");\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/frontend/stats.js?");

/***/ }),

/***/ "./src/js/frontend/teams.js":
/*!**********************************!*\
  !*** ./src/js/frontend/teams.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fillLevels: () => (/* binding */ fillLevels),\n/* harmony export */   gather_pit_crew: () => (/* binding */ gather_pit_crew),\n/* harmony export */   gather_team_data: () => (/* binding */ gather_team_data),\n/* harmony export */   longTermObj: () => (/* binding */ longTermObj),\n/* harmony export */   originalCostCap: () => (/* binding */ originalCostCap),\n/* harmony export */   resetTeamEditing: () => (/* binding */ resetTeamEditing),\n/* harmony export */   teamCod: () => (/* binding */ teamCod)\n/* harmony export */ });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"./src/js/frontend/config.js\");\n/* harmony import */ var _renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./renderer */ \"./src/js/frontend/renderer.js\");\n/* harmony import */ var _stats__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stats */ \"./src/js/frontend/stats.js\");\n\n\n\nlet teamCod;\nlet currYear;\nlet originalCostCap;\nlet longTermObj;\n\n/**\r\n * Listener for the team menu buttons\r\n */\ndocument.querySelector(\"#teamMenu\").querySelectorAll(\"a\").forEach(function (elem) {\n  elem.addEventListener(\"click\", function () {\n    document.querySelector(\"#teamButton\").innerText = elem.querySelector(\".team-menu-name\").innerText;\n    teamCod = elem.dataset.teamid;\n    let data = {\n      teamID: teamCod\n    };\n    const message = {\n      command: 'teamRequest',\n      data: data\n    };\n    const command = _renderer__WEBPACK_IMPORTED_MODULE_1__.factory.createCommand(message);\n    command.execute();\n    document.querySelector(\".team-viewer\").classList.remove(\"d-none\");\n  });\n});\n\n/**\r\n * Listener for the objective menu dropdown\r\n */\ndocument.querySelector(\"#objectiveMenu\").querySelectorAll(\"a\").forEach(function (elem) {\n  elem.addEventListener(\"click\", function () {\n    document.querySelector(\".objective-label\").innerText = elem.textContent;\n    longTermObj = elem.id[elem.id.length - 1];\n  });\n});\n\n/**\r\n * Helper function to add mousedown listener with auto increment/decrement\r\n */\nfunction addContinuousListener(element, selector, incrementCallback, decrementCallback) {\n  let intervalId;\n  element.querySelectorAll(selector).forEach(function (elem) {\n    elem.addEventListener('mousedown', function () {\n      let input = this.parentNode.parentNode.querySelector(\"input\");\n      if (this.classList.contains('bi-chevron-up') || this.classList.contains('bi-plus-lg')) {\n        incrementCallback(input);\n        intervalId = setInterval(() => {\n          incrementCallback(input);\n        }, 100);\n      } else if (this.classList.contains('bi-chevron-down') || this.classList.contains('bi-dash-lg')) {\n        decrementCallback(input);\n        intervalId = setInterval(() => {\n          decrementCallback(input);\n        }, 100);\n      }\n    });\n    elem.addEventListener('mouseup', function () {\n      clearInterval(intervalId);\n    });\n    elem.addEventListener('mouseleave', function () {\n      clearInterval(intervalId);\n    });\n  });\n}\n\n/**\r\n * Listeners for the long term input year\r\n */\naddContinuousListener(document.querySelector(\"#objAndYear\"), \".bi-chevron-up, .bi-chevron-down\", function (input) {\n  input.value = Number(input.value) + 1;\n}, function (input) {\n  let value = Number(input.value) - 1;\n  if (value <= currYear) {\n    value = currYear;\n  }\n  input.value = value;\n});\n\n/**\r\n * Listeners for the season objective input\r\n */\naddContinuousListener(document.querySelector(\"#seasonObjective\"), \".bi-chevron-up, .bi-chevron-down\", function (input) {\n  let value = Number(input.value) - 1;\n  if (value <= 1) {\n    value = 1;\n  }\n  input.value = value;\n}, function (input) {\n  let value = Number(input.value) + 1;\n  if (value >= 10) {\n    value = 10;\n  }\n  input.value = value;\n});\n\n/**\r\n * Listeners for the board confidence input\r\n */\naddContinuousListener(document.querySelector(\"#confidence\"), \".bi-plus-lg, .bi-dash-lg\", function (input) {\n  let value = Number(input.value) + 5;\n  if (value >= 100) {\n    value = 100;\n  }\n  input.value = value;\n}, function (input) {\n  let value = Number(input.value) - 5;\n  if (value <= 0) {\n    value = 0;\n  }\n  input.value = value;\n});\n\n/**\r\n * Listeners for the cost cap input\r\n */\naddContinuousListener(document.querySelector(\"#costCap\"), \".bi-plus-lg, .bi-dash-lg\", function (input) {\n  let valorActual = input.value.replace(/[$,]/g, \"\");\n  let nuevoValor = Number(valorActual) + 100000;\n  input.value = nuevoValor.toLocaleString('en-US') + '$';\n}, function (input) {\n  let valorActual = input.value.replace(/[$,]/g, \"\");\n  let nuevoValor = Number(valorActual) - 100000;\n  input.value = nuevoValor.toLocaleString('en-US') + '$';\n});\n\n/**\r\n * Listeners for the team budget input\r\n */\naddContinuousListener(document.querySelector(\"#teamBudget\"), \".bi-plus-lg, .bi-dash-lg\", function (input) {\n  let valorActual = input.value.replace(/[$,]/g, \"\");\n  let nuevoValor = Number(valorActual) + 100000;\n  input.value = nuevoValor.toLocaleString('en-US') + '$';\n}, function (input) {\n  let valorActual = input.value.replace(/[$,]/g, \"\");\n  let nuevoValor = Number(valorActual) - 100000;\n  input.value = nuevoValor.toLocaleString('en-US') + '$';\n});\nfunction updateCondition(input, increment, bar) {\n  let actual = input.innerText.split(\"%\")[0];\n  let val = parseInt(actual) + increment;\n  if (val > 100) val = 100;\n  if (val < 0) val = 0;\n  input.innerText = val + \"%\";\n  bar.style.width = val + \"%\";\n}\ndocument.querySelectorAll(\".condition-container .bi-plus\").forEach(button => {\n  let intervalId;\n  button.addEventListener('mousedown', function () {\n    let input = button.parentNode.parentNode.querySelector(\".condition-container-value\");\n    let bar = button.parentNode.parentNode.querySelector(\".condition-container-bar-progress\");\n    updateCondition(input, 1, bar);\n    intervalId = setInterval(() => {\n      updateCondition(input, 1, bar);\n    }, 100);\n  });\n  button.addEventListener('mouseup', function () {\n    clearInterval(intervalId);\n  });\n  button.addEventListener('mouseleave', function () {\n    clearInterval(intervalId);\n  });\n});\ndocument.querySelectorAll(\".condition-container .bi-dash\").forEach(button => {\n  let intervalId;\n  button.addEventListener('mousedown', function () {\n    let input = button.parentNode.parentNode.querySelector(\".condition-container-value\");\n    let bar = button.parentNode.parentNode.querySelector(\".condition-container-bar-progress\");\n    updateCondition(input, -1, bar);\n    intervalId = setInterval(() => {\n      updateCondition(input, -1, bar);\n    }, 100);\n  });\n  button.addEventListener('mouseup', function () {\n    clearInterval(intervalId);\n  });\n  button.addEventListener('mouseleave', function () {\n    clearInterval(intervalId);\n  });\n});\n\n/**\r\n * Listeners for the show and hide buttons facilities\r\n */\ndocument.querySelector(\"#carDevButton\").addEventListener(\"click\", function () {\n  if (document.querySelector(\"#operationButton\").dataset.state === \"show\") {\n    document.querySelector(\"#operationButton\").click();\n  }\n  if (document.querySelector(\"#staffButton\").dataset.state === \"show\") {\n    document.querySelector(\"#staffButton\").click();\n  }\n  if (document.querySelector(\"#carDevButton\").dataset.state === \"show\") {\n    document.querySelector(\"#carDevButton\").dataset.state = \"hide\";\n    document.querySelector(\"#carDevButton\").querySelector(\".front-gradient\").innerText = \"Show\";\n  } else {\n    document.querySelector(\"#carDevButton\").dataset.state = \"show\";\n    document.querySelector(\"#carDevButton\").querySelector(\".front-gradient\").innerText = \"Hide\";\n  }\n});\ndocument.querySelector(\"#operationButton\").addEventListener(\"click\", function () {\n  if (document.querySelector(\"#carDevButton\").dataset.state === \"show\") {\n    document.querySelector(\"#carDevButton\").click();\n  }\n  if (document.querySelector(\"#staffButton\").dataset.state === \"show\") {\n    document.querySelector(\"#staffButton\").click();\n  }\n  if (document.querySelector(\"#operationButton\").dataset.state === \"show\") {\n    document.querySelector(\"#operationButton\").dataset.state = \"hide\";\n    document.querySelector(\"#operationButton\").querySelector(\".front-gradient\").innerText = \"Show\";\n  } else {\n    document.querySelector(\"#operationButton\").dataset.state = \"show\";\n    document.querySelector(\"#operationButton\").querySelector(\".front-gradient\").innerText = \"Hide\";\n  }\n});\ndocument.querySelector(\"#staffButton\").addEventListener(\"click\", function () {\n  if (document.querySelector(\"#operationButton\").dataset.state === \"show\") {\n    document.querySelector(\"#operationButton\").click();\n  }\n  if (document.querySelector(\"#carDevButton\").dataset.state === \"show\") {\n    document.querySelector(\"#carDevButton\").click();\n  }\n  if (document.querySelector(\"#staffButton\").dataset.state === \"show\") {\n    document.querySelector(\"#staffButton\").dataset.state = \"hide\";\n    document.querySelector(\"#staffButton\").querySelector(\".front-gradient\").innerText = \"Show\";\n  } else {\n    document.querySelector(\"#staffButton\").dataset.state = \"show\";\n    document.querySelector(\"#staffButton\").querySelector(\".front-gradient\").innerText = \"Hide\";\n  }\n});\n\n/**\r\n * Fills the level for each facility\r\n * @param {object} teamData info of the team facilities\r\n */\nfunction fillLevels(teamData) {\n  teamData.slice(0, 15).forEach(function (elem) {\n    let num = elem[0];\n    let level = num % 10;\n    let facilityID = Math.floor(num / 10);\n    let facility = document.querySelector(\"#facility\" + facilityID);\n    let indicator = facility.querySelector('.facility-level-indicator');\n    let condition_container = facility.querySelector('.condition-container');\n    let bar = condition_container.querySelector('.condition-container-bar-progress');\n    let condition_value = condition_container.querySelector('.condition-container-value');\n    bar.style.width = elem[1] * 100 + \"%\";\n    condition_value.innerText = parseInt(elem[1] * 100) + \"%\";\n    indicator.dataset.value = level;\n    let value = level;\n    let levels = indicator.querySelectorAll('.level');\n    for (let i = 0; i < 5; i++) {\n      levels[i].className = \"level\";\n      if (i <= value - 1) {\n        levels[i].classList.add(_config__WEBPACK_IMPORTED_MODULE_0__.team_dict[teamCod] + 'activated');\n      }\n    }\n  });\n  document.querySelector(\"#seasonObjectiveInput\").value = teamData[16];\n  document.querySelector(\"#longTermObj\" + teamData[17][0]).click();\n  document.querySelector(\"#longTermInput\").value = teamData[17][1];\n  document.querySelector(\"#teamBudgetInput\").value = teamData[18].toLocaleString(\"en-US\") + \"$\";\n  document.querySelector(\"#costCapInput\").value = Math.abs(teamData[19][0]).toLocaleString(\"en-US\") + \"$\";\n  manageConfidence(teamData[20]);\n  document.querySelector(\"#confidenceInput\").value = teamData[20];\n  currYear = teamData[21];\n  originalCostCap = Math.abs(teamData[19][0]);\n  for (let key in teamData[22]) {\n    let pitCrewStat = document.querySelector(`.pit-crew-details .one-stat-panel[data-crewStat='${key}']`);\n    let input = pitCrewStat.querySelector(\"input\");\n    let value = Math.round(teamData[22][key]);\n    if (key === \"38\") {\n      value = value / 10;\n    }\n    input.value = value + \"%\";\n    let bar = pitCrewStat.querySelector(\".one-stat-progress\");\n    bar.style.width = value + \"%\";\n  }\n  let engineManufacturer = teamData[23];\n  document.querySelector(`#engineMenu a[data-engine='${engineManufacturer}']`).click();\n  let bars = document.querySelector(\".pit-crew-details\").querySelectorAll(\".one-stat-progress\");\n  bars.forEach(function (elem) {\n    elem.classList = \"one-stat-progress \" + _config__WEBPACK_IMPORTED_MODULE_0__.team_dict[teamCod] + \"bar-primary\";\n  });\n}\ndocument.querySelectorAll(\".facility-refurbish svg\").forEach(function (elem) {\n  elem.addEventListener(\"click\", function () {\n    let facility = elem.parentNode.parentNode;\n    let condition_value = facility.querySelector('.condition-container-value');\n    let bar = facility.querySelector('.condition-container-bar-progress');\n    condition_value.innerText = \"100%\";\n    bar.style.width = \"100%\";\n  });\n});\ndocument.querySelectorAll(\"#engineMenu a\").forEach(function (elem) {\n  elem.addEventListener(\"click\", function () {\n    let engineiD = elem.dataset.engine;\n    let engine = elem.innerText;\n    document.querySelector(\"#engineLabel\").innerText = engine;\n    document.querySelector(\"#engineButton\").dataset.value = engineiD;\n  });\n});\n\n/**\r\n * Resets the view\r\n */\nfunction resetTeamEditing() {\n  document.querySelector(\".team-viewer\").classList.add(\"d-none\");\n  teamCod = null;\n  document.querySelector(\"#teamButton\").innerText = \"Team\";\n}\nfunction updatePitStat(input, increment) {\n  let actual = input.value.split(\"%\")[0];\n  let val = parseInt(actual) + increment;\n  if (val > 100) val = 100;\n  if (val < 0) val = 0;\n  input.value = val + \"%\";\n  (0,_stats__WEBPACK_IMPORTED_MODULE_2__.manage_stat_bar)(input, val);\n}\ndocument.querySelector(\".pit-crew-details\").querySelectorAll(\".bi-plus-lg\").forEach(function (elem) {\n  let intervalId;\n  elem.addEventListener('mousedown', function () {\n    let input = this.parentNode.parentNode.querySelector(\"input\");\n    updatePitStat(input, 1);\n    intervalId = setInterval(() => {\n      updatePitStat(input, 1);\n    }, 100);\n  });\n  elem.addEventListener('mouseup', function () {\n    clearInterval(intervalId);\n  });\n  elem.addEventListener('mouseleave', function () {\n    clearInterval(intervalId);\n  });\n});\ndocument.querySelector(\".pit-crew-details\").querySelectorAll(\".bi-dash-lg\").forEach(function (elem) {\n  let intervalId;\n  elem.addEventListener('mousedown', function () {\n    let input = this.parentNode.parentNode.querySelector(\"input\");\n    updatePitStat(input, -1);\n    intervalId = setInterval(() => {\n      updatePitStat(input, -1);\n    }, 100);\n  });\n  elem.addEventListener('mouseup', function () {\n    clearInterval(intervalId);\n  });\n  elem.addEventListener('mouseleave', function () {\n    clearInterval(intervalId);\n  });\n});\n\n/**\r\n * Manages state of blocking div for confidence\r\n * @param {Number} data Confidence number. If -1, blocking div is activated\r\n */\nfunction manageConfidence(data) {\n  if (Number(data[0]) !== -1) {\n    document.querySelector(\".blocking-confidence\").classList.add(\"d-none\");\n  } else {\n    document.querySelector(\".blocking-confidence\").classList.remove(\"d-none\");\n  }\n}\n\n/**\r\n * Listeners for the level indicators for each facility\r\n */\ndocument.querySelector(\"#edit_teams\").querySelectorAll(\".bi-chevron-right\").forEach(function (elem) {\n  elem.addEventListener(\"click\", function () {\n    let indicator = elem.parentNode.querySelector(\".facility-level-indicator\");\n    let value = parseInt(indicator.getAttribute('data-value')) + 1;\n    if (value > 5) {\n      value = 5;\n    }\n    indicator.setAttribute('data-value', value);\n    let levels = indicator.querySelectorAll('.level');\n    if (value <= levels.length) {\n      levels[value - 1].classList.add(_config__WEBPACK_IMPORTED_MODULE_0__.team_dict[teamCod] + 'activated');\n    }\n  });\n});\ndocument.querySelector(\"#edit_teams\").querySelectorAll(\".bi-chevron-left\").forEach(function (elem) {\n  elem.addEventListener(\"click\", function () {\n    let indicator = elem.parentNode.querySelector(\".facility-level-indicator\");\n    let value = parseInt(indicator.getAttribute('data-value')) - 1;\n    if (value < 0) {\n      value = 0;\n    }\n    indicator.setAttribute('data-value', value);\n    let levels = indicator.querySelectorAll('.level');\n    if (value < levels.length) {\n      levels[value].className = \"level\";\n    }\n  });\n});\n\n/**\r\n * Collects the data for each facility\r\n * @returns array with tuples for each facility\r\n */\nfunction gather_team_data() {\n  let facilities = document.getElementsByClassName('facility');\n  let result = [];\n  for (let i = 0; i < facilities.length; i++) {\n    let facility = facilities[i];\n    let id = facility.id.match(/\\d+$/)[0]; // Extrae el número al final del id\n    let levelIndicator = facility.getElementsByClassName('facility-level-indicator')[0];\n    let level = levelIndicator.getAttribute('data-value');\n    let number = id + level; // Compone el número concatenando los strings\n    let condition = facility.querySelector('.condition-container-value').innerText.split(\"%\")[0] / 100;\n    result.push([number, condition]); // Añade la tupla a la lista\n  }\n  return result;\n}\nfunction gather_pit_crew() {\n  let pitCrewStats = document.querySelectorAll(\".pit-crew-details .one-stat-panel\");\n  let result = {};\n  pitCrewStats.forEach(function (elem) {\n    let key = elem.dataset.crewstat;\n    let value = elem.querySelector(\"input\").value.split(\"%\")[0];\n    if (key === \"38\") {\n      value = value * 10;\n    }\n    result[key] = value;\n  });\n  return result;\n}\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/frontend/teams.js?");

/***/ }),

/***/ "./src/js/frontend/transfers.js":
/*!**************************************!*\
  !*** ./src/js/frontend/transfers.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   currentSeason: () => (/* binding */ currentSeason),\n/* harmony export */   format_name: () => (/* binding */ format_name),\n/* harmony export */   freeDriversDiv: () => (/* binding */ freeDriversDiv),\n/* harmony export */   insert_space: () => (/* binding */ insert_space),\n/* harmony export */   loadNumbers: () => (/* binding */ loadNumbers),\n/* harmony export */   manageColor: () => (/* binding */ manageColor),\n/* harmony export */   manage_modal: () => (/* binding */ manage_modal),\n/* harmony export */   place_drivers: () => (/* binding */ place_drivers),\n/* harmony export */   place_staff: () => (/* binding */ place_staff),\n/* harmony export */   remove_drivers: () => (/* binding */ remove_drivers),\n/* harmony export */   setCurrentSeason: () => (/* binding */ setCurrentSeason),\n/* harmony export */   sortList: () => (/* binding */ sortList),\n/* harmony export */   update_name: () => (/* binding */ update_name)\n/* harmony export */ });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"./src/js/frontend/config.js\");\n/* harmony import */ var _renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./renderer */ \"./src/js/frontend/renderer.js\");\n\n\nconst myModal = new bootstrap.Modal(document.getElementById('contractModal'));\nconst raceBonusAmt = document.getElementById(\"raceBonusAmt\");\nconst raceBonusPos = document.getElementById(\"raceBonusPos\");\nconst freeDriversPill = document.getElementById(\"freepill\");\nconst f2DriversPill = document.getElementById(\"F2pill\");\nconst f3DriversPill = document.getElementById(\"F3pill\");\nconst freeDriversDiv = document.getElementById(\"free-drivers\");\nconst freeStaffDiv = document.getElementById(\"free-staff\");\nconst f2DriversDiv = document.getElementById(\"f2-drivers\");\nconst f3DriversDiv = document.getElementById(\"f3-drivers\");\nconst autoContractToggle = document.getElementById(\"autoContractToggle\");\nconst divsArray = [freeDriversDiv, f2DriversDiv, f3DriversDiv];\nconst fileInput = document.getElementById('fileInput');\nlet originalParent;\nlet destinationParent;\nlet draggable;\nlet teamDestiniy;\nlet teamOrigin;\nlet posInTeam;\nlet modalType;\nlet driverEditingID;\nlet driverEditingName;\nlet driver1;\nlet driver2;\nlet originalTeamId;\nlet currentSeason;\nfunction setCurrentSeason(season) {\n  currentSeason = season;\n}\nlet name_dict = {\n  'ferrari': \"Ferrari\",\n  'mclaren': \"McLaren\",\n  'redbull': \"Red Bull\",\n  'merc': \"Mercedes\",\n  'alpine': \"Alpine\",\n  'williams': \"Williams\",\n  'haas': \"Haas\",\n  'alphatauri': \"Alpha Tauri\",\n  'alfaromeo': \"Alfa Romeo\",\n  'astonmartin': \"Aston Martin\",\n  \"F2\": \"F2\",\n  \"F3\": \"F3\",\n  \"custom\": \"Custom Team\"\n};\n//custom team name changes so this dict stays here\n\n/**\r\n * Removes all the drivers from teams and categories\r\n */\nfunction remove_drivers() {\n  document.querySelectorAll('.driver-space').forEach(item => {\n    item.innerHTML = \"\";\n  });\n  document.querySelectorAll('.staff-space').forEach(item => {\n    item.innerHTML = \"\";\n  });\n  document.querySelectorAll('.affiliates-space').forEach(item => {\n    item.innerHTML = \"\";\n  });\n  freeDriversDiv.innerHTML = \"\";\n  freeStaffDiv.innerHTML = \"\";\n}\nfunction insert_space(str) {\n  return str.replace(/([A-Z])/g, ' $1').trim();\n}\nfunction format_name(fullName, nameSplitted, spanName, spanLastName) {\n  if (fullName.length > 17) {\n    let nameArray = fullName.split(\" \");\n    let firstName = nameArray[0];\n    if (insert_space(firstName).includes(\" \")) {\n      let splitName = insert_space(firstName).split(\" \");\n      spanName.textContent = splitName[0][0] + \". \" + splitName[1] + \" \";\n    } else {\n      spanName.textContent = firstName[0] + \". \";\n    }\n    spanLastName.textContent = nameArray.slice(1).join(\" \").toUpperCase();\n  } else {\n    spanName.textContent = insert_space(nameSplitted[0]) + \" \";\n    spanLastName.textContent = nameSplitted.slice(1).join(\" \").toUpperCase();\n  }\n}\n\n/**\r\n * Places all drivers in their respective team, category etc\r\n * @param {Object} driversArray List of drivers\r\n */\nfunction place_drivers(driversArray) {\n  let divPosition;\n  driversArray.forEach(driver => {\n    let newDiv = document.createElement(\"div\");\n    newDiv.className = \"col free-driver\";\n    newDiv.dataset.driverid = driver[1];\n    newDiv.dataset.teamid = driver[2];\n    let name = driver[0].split(\" \");\n    let nameContainer = document.createElement(\"div\");\n    nameContainer.className = \"name-container\";\n    let spanName = document.createElement(\"span\");\n    let spanLastName = document.createElement(\"span\");\n    format_name(driver[0], name, spanName, spanLastName);\n    spanLastName.classList.add(\"bold-font\");\n    nameContainer.appendChild(spanName);\n    nameContainer.appendChild(spanLastName);\n    newDiv.appendChild(nameContainer);\n    newDiv.classList.add(_config__WEBPACK_IMPORTED_MODULE_0__.team_dict[driver[2]] + \"-transparent\");\n    if (driver[\"team_future\"] !== -1) {\n      add_future_team_noti(newDiv, driver[\"team_future\"]);\n    }\n    newDiv.dataset.futureteam = driver[\"team_future\"];\n    manageColor(newDiv, spanLastName);\n    divPosition = \"free-drivers\";\n    let position = driver[3];\n    if (position >= 3) {\n      position = 3;\n    }\n    addIcon(newDiv);\n    add_edit_container(newDiv);\n    if (driver[2] > 0 && driver[2] <= 10 || driver[2] === 32) {\n      divPosition = _config__WEBPACK_IMPORTED_MODULE_0__.team_dict[driver[2]] + position;\n    }\n    document.getElementById(divPosition).appendChild(newDiv);\n  });\n}\nfunction add_edit_container(div) {\n  let edit_container = document.createElement(\"div\");\n  edit_container.className = \"edit-container\";\n  let numbersicon = document.createElement(\"i\");\n  numbersicon.className = \"bi bi bi-123\";\n  let pencilicon = document.createElement(\"i\");\n  pencilicon.className = \"bi bi-pencil-fill\";\n  edit_container.appendChild(pencilicon);\n  edit_container.appendChild(numbersicon);\n  div.appendChild(edit_container);\n  edit_container.addEventListener(\"click\", function () {\n    let id = div.dataset.driverid;\n    document.getElementById(\"statspill\").click();\n    let edit_stats_div = document.querySelector(`.normal-driver[data-driverid=\"${id}\"]`);\n    let typeStaff = _config__WEBPACK_IMPORTED_MODULE_0__.typeStaff_dict[edit_stats_div.dataset.type];\n    let menuClick = document.querySelector(`#staffMenu a[data-list=\"${typeStaff}\"]`);\n    menuClick.click();\n    edit_stats_div.click();\n    edit_stats_div.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"center\"\n    });\n  });\n}\nfunction update_name(driverID, name) {\n  let freeDiv = document.querySelector(`.free-driver[data-driverid='${driverID}']`);\n  let normalDiv = document.querySelector(`.normal-driver[data-driverid='${driverID}']`);\n  let nameContainer = freeDiv.querySelector(\".name-container\");\n  let nameArray = name.split(\" \");\n  let new_name = nameArray[0];\n  let new_surname = nameArray.slice(1).join(\" \").toUpperCase();\n  let firstNameContainer = nameContainer.childNodes[0];\n  let lastNameContainer = nameContainer.querySelector(\".bold-font\");\n  firstNameContainer.textContent = new_name;\n  lastNameContainer.textContent = new_surname;\n  firstNameContainer = normalDiv.childNodes[0].childNodes[0];\n  lastNameContainer = normalDiv.childNodes[0].querySelector(\".bold-font\");\n  firstNameContainer.textContent = new_name + \" \";\n  lastNameContainer.textContent = new_surname;\n  normalDiv.dataset.name = name;\n}\nfunction sortList(divID) {\n  let container = document.getElementById(divID);\n  let divs = Array.from(container.querySelectorAll('.free-driver'));\n  let compareFunction = (a, b) => {\n    let futureTeamA = parseInt(a.dataset.futureteam);\n    let futureTeamB = parseInt(b.dataset.futureteam);\n    if (futureTeamA > futureTeamB) return -1;\n    if (futureTeamA < futureTeamB) return 1;\n    let textA = a.firstElementChild.textContent.toLowerCase();\n    let textB = b.firstElementChild.textContent.toLowerCase();\n    return textA.localeCompare(textB);\n  };\n  divs.sort(compareFunction);\n  container.innerHTML = '';\n  divs.forEach(div => container.appendChild(div));\n}\nfunction place_staff(staffArray) {\n  console.log(staffArray);\n  let divPosition;\n  staffArray.forEach(staff => {\n    let newDiv = document.createElement(\"div\");\n    newDiv.className = \"col free-driver\";\n    newDiv.dataset.driverid = staff[1];\n    newDiv.dataset.teamid = staff[2];\n    let name = staff[0].split(\" \");\n    let spanName = document.createElement(\"span\");\n    let spanLastName = document.createElement(\"span\");\n    let marqueeContainer = document.createElement(\"div\");\n    marqueeContainer.className = \"marquee-wrapper\";\n    let nameContainer = document.createElement(\"div\");\n    nameContainer.className = \"name-container\";\n    spanName.textContent = insert_space(name[0]) + \" \";\n    spanLastName.textContent = name.slice(1).join(\" \").toUpperCase();\n    spanLastName.classList.add(\"bold-font\");\n    let staffLogo = document.createElement(\"img\");\n    let position = staff[3];\n    staffLogo.src = _config__WEBPACK_IMPORTED_MODULE_0__.staff_pics[position];\n    staffLogo.className = \"staff-logo\";\n    newDiv.appendChild(staffLogo);\n    nameContainer.appendChild(spanName);\n    nameContainer.appendChild(spanLastName);\n    marqueeContainer.appendChild(nameContainer);\n    newDiv.appendChild(marqueeContainer);\n    newDiv.classList.add(_config__WEBPACK_IMPORTED_MODULE_0__.team_dict[staff[2]] + \"-transparent\");\n    if (staff[\"team_future\"] !== -1) {\n      add_future_team_noti(newDiv, staff[\"team_future\"]);\n    }\n    newDiv.dataset.futureteam = staff[\"team_future\"];\n    manageColor(newDiv, spanLastName);\n    // if (staff[4] === 1) {\n    //     addUnRetireIcon(newDiv)\n    // }\n    divPosition = \"free-staff\";\n    let staff_position = _config__WEBPACK_IMPORTED_MODULE_0__.staff_positions[position];\n    newDiv.dataset.type = staff_position;\n    staffLogo.classList.add(staff_position + \"-border\");\n    addIcon(newDiv);\n    add_edit_container(newDiv);\n    if (staff[2] > 0 && staff[2] <= 10 || staff[2] === 32) {\n      let teamDiv = document.querySelector(`.staff-section[data-teamid='${staff[2]}']`);\n      if (position !== 2) {\n        teamDiv.querySelector(`[data-type='${staff_position}']`).appendChild(newDiv);\n      } else {\n        let engineer_1_has_child = teamDiv.querySelector(`[data-type='${staff_position}'][data-pos='1']`).childElementCount;\n        if (engineer_1_has_child === 0) {\n          teamDiv.querySelector(`[data-type='${staff_position}'][data-pos='1']`).appendChild(newDiv);\n        } else {\n          teamDiv.querySelector(`[data-type='${staff_position}'][data-pos='2']`).appendChild(newDiv);\n        }\n      }\n    } else {\n      document.getElementById(divPosition).appendChild(newDiv);\n    }\n  });\n}\ndocument.querySelectorAll(\"#stafftransfersMenu a\").forEach(function (elem) {\n  elem.addEventListener(\"click\", function () {\n    document.querySelector(\"#staffTransfersDropdown\").innerText = elem.innerText;\n    let value = elem.dataset.value;\n    document.querySelector(\"#staffTransfersDropdown\").dataset.value = value;\n    manage_staff_drivers(value);\n  });\n});\nfunction manage_staff_drivers(value) {\n  if (value === \"drivers\") {\n    document.getElementById(\"free-drivers\").classList.remove(\"d-none\");\n    document.getElementById(\"free-staff\").classList.add(\"d-none\");\n    document.querySelectorAll(\".drivers-section\").forEach(function (elem) {\n      elem.classList.remove(\"d-none\");\n    });\n    document.querySelectorAll(\".staff-section\").forEach(function (elem) {\n      elem.classList.add(\"d-none\");\n    });\n  } else {\n    document.getElementById(\"free-drivers\").classList.add(\"d-none\");\n    document.getElementById(\"free-staff\").classList.remove(\"d-none\");\n    document.querySelectorAll(\".drivers-section\").forEach(function (elem) {\n      elem.classList.add(\"d-none\");\n    });\n    document.querySelectorAll(\".staff-section\").forEach(function (elem) {\n      elem.classList.remove(\"d-none\");\n    });\n  }\n}\nfunction add_future_team_noti(driverDiv, teamID) {\n  let notiDiv = document.createElement(\"div\");\n  notiDiv.className = \"future-contract-noti noti-\" + _config__WEBPACK_IMPORTED_MODULE_0__.team_dict[teamID];\n  driverDiv.appendChild(notiDiv);\n}\ndocument.querySelectorAll(\".affiliates-and-arrows\").forEach(function (elem) {\n  elem.querySelector(\".bi-chevron-right\").addEventListener(\"click\", function (event) {\n    let parent = elem.parentNode.parentNode;\n    let affiliatesDiv = parent.querySelector(\".affiliates-space\");\n    let maxScrollLeft = affiliatesDiv.scrollWidth - affiliatesDiv.clientWidth;\n    let newScrollLeft = affiliatesDiv.scrollLeft + 100;\n    if (newScrollLeft > maxScrollLeft) {\n      event.target.parentNode.classList.add(\"d-none\");\n    }\n    affiliatesDiv.scrollTo({\n      left: newScrollLeft,\n      behavior: 'smooth'\n    });\n  });\n  elem.querySelector(\".bi-chevron-left\").addEventListener(\"click\", function () {\n    let parent = elem.parentNode.parentNode;\n    let affiliatesDiv = parent.querySelector(\".affiliates-space\");\n    elem.parentNode.querySelector(\".bi-chevron-right\").parentNode.classList.remove(\"d-none\");\n    affiliatesDiv.scrollBy({\n      left: -100,\n      behavior: 'smooth'\n    });\n  });\n});\n\n/**\r\n * Updates the color from the div depending on the team, both in contract and stats view\r\n * @param {div} div div from the driver\r\n */\nfunction updateColor(div) {\n  let surnameDiv = div.querySelector(\".bold-font\");\n  surnameDiv.className = \"bold-font\";\n  manageColor(div, surnameDiv);\n  let statsDiv = document.querySelector('.normal-driver[data-driverid=\"' + div.dataset.driverid + '\"]');\n  statsDiv.dataset.teamid = div.dataset.teamid;\n  surnameDiv = statsDiv.querySelector(\".surname\");\n  surnameDiv.className = \"bold-font surname\";\n  manageColor(statsDiv, surnameDiv);\n  div.className = \"colr free-driver \" + _config__WEBPACK_IMPORTED_MODULE_0__.team_dict[div.dataset.teamid] + \"-transparent\";\n  statsDiv.className = \"colr normal-driver \" + _config__WEBPACK_IMPORTED_MODULE_0__.team_dict[div.dataset.teamid] + \"-transparent\";\n}\n\n/**\r\n * Manages the color depending on the team\r\n * @param {div} div div from the driver\r\n * @param {span} lastName the lastname span from the driver\r\n */\nfunction manageColor(div, lastName) {\n  if (div.dataset.teamid != 0) {\n    let colorClass = _config__WEBPACK_IMPORTED_MODULE_0__.team_dict[div.dataset.teamid] + \"font\";\n    lastName.classList.add(colorClass);\n  }\n}\n\n/**\r\n * Loads all the numbers into the number menu\r\n * @param {Object} nums all numbers array\r\n */\nfunction loadNumbers(nums) {\n  let numsMenu = document.getElementById(\"numberMenu\");\n  numsMenu.innerHTML = \"\";\n  nums.forEach(function (elem) {\n    let a = document.createElement(\"a\");\n    a.textContent = elem.toString();\n    a.classList = \"dropdown-item\";\n    a.style.cursor = \"pointer\";\n    numsMenu.appendChild(a);\n    a.addEventListener(\"click\", function () {\n      document.getElementById(\"numberButton\").querySelector(\".front-gradient\").textContent = a.textContent;\n    });\n  });\n}\n\n/**\r\n * Adds the edit icon\r\n * @param {div} div div from the driver that is going to add the icon into\r\n */\nfunction addIcon(div) {\n  let iconDiv = document.createElement(\"div\");\n  iconDiv.className = \"custom-icon\";\n  let iconElement = document.createElement(\"i\");\n  iconElement.className = \"bi bi-pencil-square\";\n  iconListener(iconElement);\n  iconDiv.appendChild(iconElement);\n  div.appendChild(iconDiv);\n}\n\n/**\r\n * Adds the eventlistener for one icon\r\n * @param {div} icon div from the icon\r\n */\nfunction iconListener(icon) {\n  icon.addEventListener(\"click\", function () {\n    modalType = \"edit\";\n    document.getElementById(\"contractModalTitle\").innerText = icon.parentNode.parentNode.innerText.replace(/\\n/g, ' ') + \"'s contract\";\n    queryContract(icon.parentNode.parentNode);\n    let space = icon.parentNode.parentNode.parentNode;\n    if (space.classList.contains(\"driver-space\") || space.classList.contains(\"affiliates-space\") || space.id === \"free-drivers\" && (f2_teams.includes(parseInt(icon.parentNode.parentNode.dataset.teamid)) || f3_teams.includes(parseInt(icon.parentNode.parentNode.dataset.teamid)))) {\n      manage_modal_driver_staff(\"driver\");\n    } else if (space.classList.contains(\"staff-space\") || space.id === \"free-staff\" && (f2_teams.includes(parseInt(icon.parentNode.parentNode.dataset.teamid)) || f3_teams.includes(parseInt(icon.parentNode.parentNode.dataset.teamid)))) {\n      if (event.target.parentNode.parentNode.dataset.type === \"race-engineer\") {\n        manage_modal_driver_staff(\"race-engineer\");\n      } else {\n        manage_modal_driver_staff(\"staff\");\n      }\n    } else if (space.id === \"free-drivers\") {\n      manage_modal_driver_staff(\"free-driver\");\n    } else if (space.id === \"free-staff\") {\n      if (event.target.parentNode.parentNode.dataset.type === \"race-engineer\") {\n        manage_modal_driver_staff(\"free-race-engineer\");\n      } else {\n        manage_modal_driver_staff(\"free-staff\");\n      }\n    }\n    myModal.show();\n  });\n}\nfunction manage_modal_driver_staff(type) {\n  if (type === \"staff\" || type === \"race-engineer\") {\n    document.getElementById(\"currentContractTitle\").classList.remove(\"d-none\");\n    document.getElementById(\"currentContractOptions\").classList.remove(\"d-none\");\n    document.querySelectorAll(\".driver-only\").forEach(function (elem) {\n      let input = elem.querySelector(\"input\");\n      input.disabled = true;\n      input.classList.add(\"disabled\");\n      let buttons = elem.querySelectorAll(\"i\");\n      buttons.forEach(function (button) {\n        button.classList.add(\"disabled\");\n      });\n    });\n  } else if (type === \"driver\") {\n    document.getElementById(\"currentContractTitle\").classList.remove(\"d-none\");\n    document.getElementById(\"currentContractOptions\").classList.remove(\"d-none\");\n    document.querySelectorAll(\".driver-only\").forEach(function (elem) {\n      let input = elem.querySelector(\"input\");\n      input.disabled = false;\n      input.classList.remove(\"disabled\");\n      let buttons = elem.querySelectorAll(\"i\");\n      buttons.forEach(function (button) {\n        button.classList.remove(\"disabled\");\n      });\n    });\n    let positionInput = document.querySelector(\"#positionInput input\");\n    positionInput.max = 999;\n  } else if (type === \"free-driver\") {\n    document.querySelectorAll(\".driver-only\").forEach(function (elem) {\n      let input = elem.querySelector(\"input\");\n      input.disabled = false;\n      input.classList.remove(\"disabled\");\n      let buttons = elem.querySelectorAll(\"i\");\n      buttons.forEach(function (button) {\n        button.classList.remove(\"disabled\");\n      });\n    });\n    let positionInput = document.querySelector(\"#positionInput input\");\n    positionInput.max = 999;\n    document.getElementById(\"currentContractOptions\").classList.add(\"d-none\");\n    document.getElementById(\"futureContractOptions\").classList.add(\"d-none\");\n    document.getElementById(\"futureContractTitle\").classList.add(\"d-none\");\n    document.getElementById(\"currentContractTitle\").classList.add(\"d-none\");\n    document.querySelector(\".add-contract\").classList.remove(\"d-none\");\n  } else if (type === \"free-staff\") {\n    document.querySelectorAll(\".driver-only\").forEach(function (elem) {\n      let input = elem.querySelector(\"input\");\n      input.disabled = true;\n      input.classList.add(\"disabled\");\n      let buttons = elem.querySelectorAll(\"i\");\n      buttons.forEach(function (button) {\n        button.classList.add(\"disabled\");\n      });\n    });\n    let positionInput = document.querySelector(\"#positionInput input\");\n    positionInput.disabled = true;\n    let buttons = document.querySelectorAll(\"#positionInput i\");\n    buttons.forEach(function (button) {\n      button.classList.add(\"disabled\");\n    });\n    document.getElementById(\"currentContractOptions\").classList.add(\"d-none\");\n    document.getElementById(\"futureContractOptions\").classList.add(\"d-none\");\n    document.getElementById(\"futureContractTitle\").classList.add(\"d-none\");\n    document.getElementById(\"currentContractTitle\").classList.add(\"d-none\");\n    document.querySelector(\".add-contract\").classList.remove(\"d-none\");\n  } else if (type === \"free-race-engineer\") {\n    document.querySelectorAll(\".driver-only\").forEach(function (elem) {\n      let input = elem.querySelector(\"input\");\n      input.disabled = true;\n      input.classList.add(\"disabled\");\n      let buttons = elem.querySelectorAll(\"i\");\n      buttons.forEach(function (button) {\n        button.classList.add(\"disabled\");\n      });\n    });\n    let input = document.querySelector(\"#positionInput input\");\n    let buttons = document.querySelectorAll(\"#positionInput i\");\n    input.disabled = false;\n    input.max = 2;\n    input.classList.remove(\"disabled\");\n    buttons.forEach(function (button) {\n      button.classList.remove(\"disabled\");\n    });\n    document.getElementById(\"currentContractOptions\").classList.add(\"d-none\");\n    document.getElementById(\"futureContractOptions\").classList.add(\"d-none\");\n    document.getElementById(\"futureContractTitle\").classList.add(\"d-none\");\n    document.getElementById(\"currentContractTitle\").classList.add(\"d-none\");\n    document.querySelector(\".add-contract\").classList.remove(\"d-none\");\n  }\n  if (type === \"race-engineer\") {\n    let input = document.querySelector(\"#positionInput input\");\n    let buttons = document.querySelectorAll(\"#positionInput i\");\n    input.disabled = false;\n    input.max = 2;\n    input.classList.remove(\"disabled\");\n    buttons.forEach(function (button) {\n      button.classList.remove(\"disabled\");\n    });\n  }\n}\n\n/**\r\n * Places all the values for the modal that just openend\r\n * @param {Object} info values for the contract modal that just opened\r\n */\nfunction manage_modal(info) {\n  if (info[0] !== null) {\n    let teamID;\n    if (info[0][5] <= 10 || info[0][5] === 32) {\n      teamID = info[0][5];\n    } else if (f2_teams.includes(info[0][5])) {\n      teamID = 33;\n    } else if (f3_teams.includes(info[0][5])) {\n      teamID = 34;\n    }\n    document.getElementById(\"currentContract\").innerText = _config__WEBPACK_IMPORTED_MODULE_0__.combined_dict[info[0][5]].toUpperCase();\n    document.getElementById(\"currentContract\").className = \"team-contract engine-\" + _config__WEBPACK_IMPORTED_MODULE_0__.team_dict[teamID];\n    document.getElementById(\"yearInput\").dataset.maxYear = info[2];\n    document.getElementById(\"yearInput\").min = info[2];\n    document.getElementById(\"yearInputFuture\").min = info[2] + 1;\n    document.querySelector(\"#currentContractOptions\").querySelectorAll(\".old-custom-input-number\").forEach(function (elem, index) {\n      if (elem.id === \"salaryInput\" || elem.id === \"signBonusInput\" || elem.id === \"raceBonusAmt\") {\n        elem.value = info[0][index].toLocaleString(\"en-US\") + \" $\";\n      } else {\n        elem.value = info[0][index];\n      }\n    });\n  }\n  if (info[1] === null) {\n    document.querySelector(\".add-contract\").classList.remove(\"d-none\");\n    document.querySelector(\"#futureContractTitle\").classList.add(\"d-none\");\n    document.querySelector(\"#futureContractOptions\").classList.add(\"d-none\");\n    document.querySelector(\"#teamContractButton\").innerText = \"Team\";\n    document.querySelector(\"#teamContractButton\").dataset.teamid = \"-1\";\n  } else {\n    document.querySelector(\".add-contract\").classList.add(\"d-none\");\n    document.querySelector(\"#futureContractTitle\").classList.remove(\"d-none\");\n    document.querySelector(\"#futureContractOptions\").classList.remove(\"d-none\");\n    document.getElementById(\"futureYear\").innerText = \"Contract for \" + parseInt(info[2] + 1);\n    document.getElementById(\"futureContract\").innerText = _config__WEBPACK_IMPORTED_MODULE_0__.combined_dict[info[1][6]].toUpperCase();\n    document.querySelector(\"#teamContractButton\").dataset.teamid = info[1][6];\n    document.getElementById(\"futureContract\").className = \"team-contract engine-\" + _config__WEBPACK_IMPORTED_MODULE_0__.team_dict[info[1][6]];\n    document.querySelector(\"#futureContractOptions\").querySelectorAll(\".old-custom-input-number\").forEach(function (elem, index) {\n      if (elem.id === \"salaryInputFuture\" || elem.id === \"signBonusInputFuture\" || elem.id === \"raceBonusAmtFuture\") {\n        elem.value = info[1][index].toLocaleString(\"en-US\") + \" $\";\n      } else {\n        elem.value = info[1][index];\n      }\n    });\n  }\n}\n\n/**\r\n * Listener for the team menu buttons\r\n */\ndocument.querySelector(\"#teamContractMenu\").querySelectorAll(\"a\").forEach(function (elem) {\n  elem.addEventListener(\"click\", function () {\n    document.querySelector(\"#teamContractButton\").innerText = elem.querySelector(\".team-menu-name\").innerText;\n    document.querySelector(\"#teamContractButton\").dataset.teamid = elem.dataset.teamid;\n    document.querySelector(\".add-contract\").classList.add(\"enabled\");\n  });\n});\nfunction formatNumber(num) {\n  return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\ndocument.querySelector(\".add-contract i\").addEventListener(\"click\", function () {\n  if (event.target.parentNode.classList.contains(\"enabled\")) {\n    document.getElementById(\"yearInput\").value = document.getElementById(\"yearInput\").dataset.maxYear;\n    document.querySelector(\"#futureYear\").innerText = \"Next year's contract\";\n    document.querySelector(\"#futureContract\").className = \"team-contract engine-\" + _config__WEBPACK_IMPORTED_MODULE_0__.team_dict[document.querySelector(\"#teamContractButton\").dataset.teamid];\n    document.querySelector(\"#futureContract\").innerText = document.querySelector(\"#teamContractButton\").innerText;\n    document.querySelector(\".add-contract\").classList.add(\"d-none\");\n    document.querySelector(\"#futureContractTitle\").classList.remove(\"d-none\");\n    document.querySelector(\"#futureContractOptions\").classList.remove(\"d-none\");\n    if (document.querySelector(\"#salaryInput\").value !== \"\") {\n      document.querySelector(\"#salaryInputFuture\").value = formatNumber((parseFloat(document.querySelector(\"#salaryInput\").value.replace(/,/g, '').split(\" \")[0]) * 1.3).toFixed(0)) + \" $\";\n      document.querySelector(\"#signBonusInputFuture\").value = formatNumber((parseFloat(document.querySelector(\"#signBonusInput\").value.replace(/,/g, '').split(\" \")[0]) * 1.15).toFixed(0)) + \" $\";\n      document.querySelector(\"#raceBonusAmtFuture\").value = formatNumber((parseFloat(document.querySelector(\"#raceBonusAmt\").value.replace(/,/g, '').split(\" \")[0]) * 1.15).toFixed(0)) + \" $\";\n      document.querySelector(\"#raceBonusPosFuture\").value = parseInt(document.querySelector(\"#raceBonusPos\").value);\n      document.querySelector(\"#yearInputFuture\").value = parseInt(document.querySelector(\"#yearInput\").value) + 2;\n    } else {\n      document.querySelector(\"#salaryInputFuture\").value = \"1,000,000 $\";\n      document.querySelector(\"#signBonusInputFuture\").value = \"100,000 $\";\n      document.querySelector(\"#raceBonusAmtFuture\").value = \"0 $\";\n      document.querySelector(\"#raceBonusPosFuture\").value = \"1\";\n      document.querySelector(\"#yearInputFuture\").value = parseInt(currentSeason) + 1;\n    }\n    document.querySelector(\"#posInTeamFuture\").value = 1;\n  }\n});\ndocument.querySelector(\".break-contract\").addEventListener(\"click\", function () {\n  document.querySelector(\".add-contract\").classList.remove(\"d-none\");\n  document.querySelector(\"#futureContractTitle\").classList.add(\"d-none\");\n  document.querySelector(\"#futureContractOptions\").classList.add(\"d-none\");\n  document.querySelector(\"#teamContractButton\").innerText = \"Team\";\n  document.querySelector(\"#teamContractButton\").dataset.teamid = \"-1\";\n  document.querySelector(\".add-contract\").classList.remove(\"enabled\");\n});\ndocument.querySelector(\".contract-options\").querySelectorAll('.bi-plus-lg').forEach(button => {\n  let intervalId;\n  let increment = 10000;\n  button.addEventListener('mousedown', function () {\n    let input = this.parentNode.parentNode.querySelector(\".old-custom-input-number\");\n    if (input.id === \"salaryInput\") {\n      increment = 100000;\n    }\n    updateContractMoneyValue(input, increment);\n    intervalId = setInterval(() => {\n      updateContractMoneyValue(input, increment);\n    }, 100);\n  });\n  button.addEventListener('mouseup', function () {\n    clearInterval(intervalId);\n  });\n  button.addEventListener('mouseleave', function () {\n    clearInterval(intervalId);\n  });\n});\ndocument.querySelector(\".contract-options\").querySelectorAll('.bi-dash-lg').forEach(button => {\n  let intervalId;\n  let increment = -10000;\n  button.addEventListener('mousedown', function () {\n    let input = this.parentNode.parentNode.querySelector(\".old-custom-input-number\");\n    if (input.id === \"salaryInput\") {\n      increment = -100000;\n    }\n    updateContractMoneyValue(input, increment);\n    intervalId = setInterval(() => {\n      updateContractMoneyValue(input, increment);\n    }, 100);\n  });\n  button.addEventListener('mouseup', function () {\n    clearInterval(intervalId);\n  });\n  button.addEventListener('mouseleave', function () {\n    clearInterval(intervalId);\n  });\n});\ndocument.querySelector(\".contract-options\").querySelectorAll('.bi-chevron-up').forEach(button => {\n  let intervalId;\n  let increment = 1;\n  button.addEventListener('mousedown', function () {\n    let input = this.parentNode.parentNode.querySelector(\".old-custom-input-number\");\n    if (input.id == \"raceBonusPos\") {\n      increment = -1;\n    }\n    updateContractValue(input, increment);\n    intervalId = setInterval(() => {\n      updateContractValue(input, increment);\n    }, 100);\n  });\n  button.addEventListener('mouseup', function () {\n    clearInterval(intervalId);\n  });\n  button.addEventListener('mouseleave', function () {\n    clearInterval(intervalId);\n  });\n});\ndocument.querySelector(\".contract-options\").querySelectorAll('.bi-chevron-down').forEach(button => {\n  let intervalId;\n  let increment = -1;\n  button.addEventListener('mousedown', function () {\n    let input = this.parentNode.parentNode.querySelector(\".old-custom-input-number\");\n    if (input.id == \"raceBonusPos\") {\n      increment = 1;\n    }\n    updateContractValue(input, increment);\n    intervalId = setInterval(() => {\n      updateContractValue(input, increment);\n    }, 100);\n  });\n  button.addEventListener('mouseup', function () {\n    clearInterval(intervalId);\n  });\n  button.addEventListener('mouseleave', function () {\n    clearInterval(intervalId);\n  });\n});\nfunction updateContractMoneyValue(input, increment) {\n  let val = input.value.replace(/[$,]/g, \"\");\n  let new_val = Number(val) + increment;\n  if (new_val < parseInt(input.min)) {\n    new_val = input.min;\n  }\n  let formatted = new_val.toLocaleString('en-US') + '$';\n  input.value = formatted;\n}\nfunction updateContractValue(input, increment) {\n  let val = input.value;\n  let new_val = Number(val) + increment;\n  if (new_val < parseInt(input.min)) {\n    new_val = input.min;\n  }\n  if (new_val > parseInt(input.max)) {\n    new_val = input.max;\n  }\n  input.value = new_val;\n}\n\n/**\r\n * Sends the message that requests the details from the driver\r\n * @param {div} elem div from the driver its requesting its details\r\n */\nfunction queryContract(elem) {\n  driverEditingID = elem.dataset.driverid;\n  driverEditingName = elem.innerText;\n  const message = {\n    command: 'driverRequest',\n    data: {\n      driverID: driverEditingID\n    }\n  };\n  const command = _renderer__WEBPACK_IMPORTED_MODULE_1__.factory.createCommand(message);\n  command.execute();\n}\n\n/**\r\n * Manages the state of the categorias\r\n * @param  {...string} divs the state of each div\r\n */\nfunction manageDrivers(...divs) {\n  divsArray.forEach(function (div, index) {\n    if (divs[index] === \"show\") {\n      div.className = \"main-columns-drag-section\";\n    } else {\n      div.className = \"main-columns-drag-section d-none\";\n    }\n  });\n}\n\n/**\r\n * Event listener for the confirm button from the modal\r\n */\ndocument.getElementById(\"confirmButton\").addEventListener('click', function () {\n  if (modalType === \"hire\") {\n    if ((f2_teams.includes(originalTeamId) | f3_teams.includes(originalTeamId) && !destinationParent.classList.contains(\"affiliates-space\")) | originalParent.className === \"driver-space\" | originalParent.classList.contains(\"affiliates-space\") | originalParent.className === \"staff-space\") {\n      signDriver(\"fireandhire\");\n    }\n    signDriver(\"regular\");\n    modalType = \"\";\n  } else if (modalType === \"edit\") {\n    editContract();\n    modalType = \"\";\n  }\n  setTimeout(clearModal, 500);\n  sortList(\"free-drivers\");\n  sortList(\"free-staff\");\n});\n\n/**\r\n * Clears the modal's inputs\r\n */\nfunction clearModal() {\n  document.querySelectorAll(\".old-custom-input-number\").forEach(function (elem) {\n    elem.value = \"\";\n  });\n}\n\n/**\r\n * Sends the message to the backend to edit the contract\r\n */\nfunction editContract() {\n  let values = [];\n  document.querySelector(\"#currentContractOptions\").querySelectorAll(\".old-custom-input-number\").forEach(function (elem) {\n    if (elem.id === \"salaryInput\" || elem.id === \"signBonusInput\" || elem.id === \"raceBonusAmt\") {\n      values.push(elem.value.replace(/[$,]/g, \"\"));\n    } else {\n      values.push(elem.value);\n    }\n  });\n  let futureValues = [];\n  document.querySelector(\"#futureContractOptions\").querySelectorAll(\".old-custom-input-number\").forEach(function (elem) {\n    if (elem.id === \"salaryInputFuture\" || elem.id === \"signBonusInputFuture\" || elem.id === \"raceBonusAmtFuture\") {\n      futureValues.push(elem.value.replace(/[$,]/g, \"\"));\n    } else {\n      futureValues.push(elem.value);\n    }\n  });\n  let future_team = document.querySelector(\"#teamContractButton\").dataset.teamid;\n  let data = {\n    driverID: driverEditingID,\n    salary: values[0],\n    year: values[1],\n    signBonus: values[2],\n    raceBonus: values[3],\n    raceBonusPos: values[4],\n    driver: driverEditingName,\n    futureTeam: future_team,\n    futureSalary: futureValues[0],\n    futureYear: futureValues[1],\n    futureSignBonus: futureValues[2],\n    futureRaceBonus: futureValues[3],\n    futureRaceBonusPos: futureValues[4],\n    futurePosition: futureValues[5]\n  };\n  const message = {\n    command: 'editContract',\n    data: data\n  };\n  const command = _renderer__WEBPACK_IMPORTED_MODULE_1__.factory.createCommand(message);\n  command.execute();\n  if (future_team !== \"-1\") {\n    let driverDiv = document.querySelector('.free-driver[data-driverid=\"' + driverEditingID + '\"]');\n    add_future_team_noti(driverDiv, future_team);\n    driverDiv.dataset.futureteam = future_team;\n  } else {\n    let driverDiv = document.querySelector('.free-driver[data-driverid=\"' + driverEditingID + '\"]');\n    driverDiv.querySelector(\".future-contract-noti\").remove();\n    driverDiv.dataset.futureteam = -1;\n  }\n}\n\n/**\r\n * Changes the positions of 2 drivers involved in a swap\r\n */\nfunction manage_swap() {\n  let parent1 = driver1.parentNode;\n  let parent2 = driver2.parentNode;\n  parent1.removeChild(driver1);\n  parent2.removeChild(driver2);\n  parent1.appendChild(driver2);\n  parent2.appendChild(driver1);\n}\n\n/**\r\n * Sends the necessary messages to hire a driver\r\n * @param {string} type type of the hiring of the driver, depending if he needs to be fired before or not\r\n */\nfunction signDriver(type) {\n  let driverName = draggable.innerText;\n  if (type === \"fireandhire\") {\n    let data = {\n      command: \"fire\",\n      driverID: draggable.dataset.driverid,\n      driver: driverName,\n      team: name_dict[teamOrigin.dataset.team],\n      teamID: originalTeamId\n    };\n    if (!data[\"team\"]) {\n      if (f2_teams.includes(originalTeamId)) {\n        data[\"team\"] = \"F2\";\n      } else if (f3_teams.includes(originalTeamId)) {\n        data[\"team\"] = \"F3\";\n      }\n    }\n    socket.send(JSON.stringify(data));\n  }\n  if (type === \"regular\") {\n    let salaryData = document.getElementById(\"salaryInput\").value.replace(/[$,]/g, \"\");\n    let yearData = document.getElementById(\"yearInput\").value;\n    let signBonusData = document.getElementById(\"signBonusInput\").value.replace(/[$,]/g, \"\");\n    let raceBonusData;\n    let raceBonusPosData;\n    if (signBonusData === \"\") signBonusData = \"0\";\n    if (raceBonusAmt.value === \"\") raceBonusData = \"0\";else raceBonusData = raceBonusAmt.value.replace(/[$,]/g, \"\");\n    if (raceBonusPos.value === \"\") raceBonusPosData = \"10\";else raceBonusPosData = raceBonusPos.value;\n    let data = {\n      command: \"hire\",\n      driverID: draggable.dataset.driverid,\n      teamID: inverted_dict[teamDestiniy],\n      position: posInTeam,\n      salary: salaryData,\n      signBonus: signBonusData,\n      raceBonus: raceBonusData,\n      raceBonusPos: raceBonusPosData,\n      year: yearData,\n      driver: driverName,\n      team: name_dict[teamDestiniy]\n    };\n    destinationParent.appendChild(draggable);\n    socket.send(JSON.stringify(data));\n  } else if (type === \"autocontract\") {\n    let dataAuto = {\n      command: \"autoContract\",\n      driverID: draggable.dataset.driverid,\n      teamID: inverted_dict[teamDestiniy],\n      position: posInTeam,\n      driver: driverName,\n      team: name_dict[teamDestiniy]\n    };\n    destinationParent.appendChild(draggable);\n    socket.send(JSON.stringify(dataAuto));\n  }\n}\n\n/**\r\n * Event listener for the cancel button on the modal\r\n */\ndocument.getElementById(\"cancelButton\").addEventListener('click', function () {\n  document.querySelector(\".add-contract\").classList.remove(\"enabled\");\n  if (modalType === \"hire\") {\n    originalParent.appendChild(draggable);\n    draggable.dataset.teamid = inverted_dict[teamOrigin.dataset.team];\n    updateColor(draggable);\n  }\n  setTimeout(clearModal, 500);\n});\ndocument.querySelector(\"#nameFilterTransfer\").addEventListener(\"input\", function (event) {\n  let text = event.target.value;\n  if (text !== \"\") {\n    document.querySelector(\"#filterTransfersContainer\").querySelector(\".bi-x\").classList.remove(\"d-none\");\n  } else {\n    document.querySelector(\"#filterTransfersContainer\").querySelector(\".bi-x\").classList.add(\"d-none\");\n  }\n  let driverElements = document.querySelectorAll(\"#free-drivers .free-driver\");\n  driverElements.forEach(function (elem) {\n    let first_name = elem.children[0].innerText;\n    let last_name = elem.children[1].innerText;\n    let full_name = first_name + \" \" + last_name;\n    let minus = full_name.toLowerCase();\n    let name = text.toLowerCase();\n    if (minus.includes(name)) {\n      elem.classList.remove(\"d-none\");\n    } else {\n      elem.classList.add(\"d-none\");\n    }\n  });\n  let staffElements = document.querySelectorAll(\"#free-staff .free-driver\");\n  staffElements.forEach(function (elem) {\n    let first_name = elem.children[0].innerText;\n    let last_name = elem.children[1].innerText;\n    let full_name = first_name + \" \" + last_name;\n    let minus = full_name.toLowerCase();\n    let name = text.toLowerCase();\n    if (minus.includes(name)) {\n      elem.classList.remove(\"d-none\");\n    } else {\n      elem.classList.add(\"d-none\");\n    }\n  });\n});\ndocument.querySelector(\"#filterIconTransfers\").addEventListener(\"click\", function () {\n  document.querySelector(\".category-filters\").classList.toggle(\"show\");\n  document.querySelector(\".filter-container\").classList.toggle(\"focused\");\n});\ndocument.getElementById(\"driver_transfers\").querySelectorAll(\".filter-pills\").forEach(function (elem) {\n  elem.addEventListener(\"click\", function (event) {\n    let isActive = elem.classList.contains('active');\n    document.getElementById(\"driver_transfers\").querySelectorAll('.filter-pills').forEach(function (el) {\n      el.classList.remove('active');\n    });\n    if (!isActive) {\n      elem.classList.add('active');\n    }\n  });\n});\ndocument.querySelector(\"#F2filterTransfers\").addEventListener(\"click\", function (event) {\n  if (!event.target.classList.contains(\"active\")) {\n    let driverElements = document.getElementById(\"free-drivers\").querySelectorAll(\".free-driver\");\n    driverElements.forEach(function (elem) {\n      elem.classList.remove(\"d-none\");\n    });\n    let staffElements = document.getElementById(\"free-staff\").querySelectorAll(\".free-driver\");\n    staffElements.forEach(function (elem) {\n      elem.classList.remove(\"d-none\");\n    });\n  } else {\n    let driverElements = document.getElementById(\"free-drivers\").querySelectorAll(\".free-driver\");\n    driverElements.forEach(function (elem) {\n      if (parseInt(elem.dataset.teamid) <= 21 && parseInt(elem.dataset.teamid) > 10) {\n        elem.classList.remove(\"d-none\");\n      } else {\n        elem.classList.add(\"d-none\");\n      }\n    });\n    let staffElements = document.getElementById(\"free-staff\").querySelectorAll(\".free-driver\");\n    staffElements.forEach(function (elem) {\n      if (parseInt(elem.dataset.teamid) <= 21 && parseInt(elem.dataset.teamid) > 10) {\n        elem.classList.remove(\"d-none\");\n      } else {\n        elem.classList.add(\"d-none\");\n      }\n    });\n  }\n});\ndocument.querySelector(\"#F3filterTransfers\").addEventListener(\"click\", function (event) {\n  if (!event.target.classList.contains(\"active\")) {\n    let driverElements = document.getElementById(\"free-drivers\").querySelectorAll(\".free-driver\");\n    driverElements.forEach(function (elem) {\n      elem.classList.remove(\"d-none\");\n    });\n    let staffElements = document.getElementById(\"free-staff\").querySelectorAll(\".free-driver\");\n    staffElements.forEach(function (elem) {\n      elem.classList.remove(\"d-none\");\n    });\n  } else {\n    let driverElements = document.getElementById(\"free-drivers\").querySelectorAll(\".free-driver\");\n    driverElements.forEach(function (elem) {\n      if (parseInt(elem.dataset.teamid) <= 31 && parseInt(elem.dataset.teamid) > 21) {\n        elem.classList.remove(\"d-none\");\n      } else {\n        elem.classList.add(\"d-none\");\n      }\n    });\n    let staffElements = document.getElementById(\"free-staff\").querySelectorAll(\".free-driver\");\n    staffElements.forEach(function (elem) {\n      if (parseInt(elem.dataset.teamid) <= 31 && parseInt(elem.dataset.teamid) > 21) {\n        elem.classList.remove(\"d-none\");\n      } else {\n        elem.classList.add(\"d-none\");\n      }\n    });\n  }\n});\ndocument.querySelector(\"#freefilterTransfers\").addEventListener(\"click\", function (event) {\n  if (!event.target.classList.contains(\"active\")) {\n    let driverElements = document.getElementById(\"free-drivers\").querySelectorAll(\".free-driver\");\n    driverElements.forEach(function (elem) {\n      elem.classList.remove(\"d-none\");\n    });\n    let staffElements = document.getElementById(\"free-staff\").querySelectorAll(\".free-driver\");\n    staffElements.forEach(function (elem) {\n      elem.classList.remove(\"d-none\");\n    });\n  } else {\n    let driverElements = document.getElementById(\"free-drivers\").querySelectorAll(\".free-driver\");\n    driverElements.forEach(function (elem) {\n      if (parseInt(elem.dataset.teamid) == 0) {\n        elem.classList.remove(\"d-none\");\n      } else {\n        elem.classList.add(\"d-none\");\n      }\n    });\n    let staffElements = document.getElementById(\"free-staff\").querySelectorAll(\".free-driver\");\n    staffElements.forEach(function (elem) {\n      if (parseInt(elem.dataset.teamid) == 0) {\n        elem.classList.remove(\"d-none\");\n      } else {\n        elem.classList.add(\"d-none\");\n      }\n    });\n  }\n});\nfunction hire_modal_standars() {\n  document.querySelector(\".add-contract\").classList.add(\"d-none\");\n  document.querySelector(\"#futureContractTitle\").classList.add(\"d-none\");\n  document.querySelector(\"#futureContractOptions\").classList.add(\"d-none\");\n  document.getElementById(\"currentContract\").innerText = _config__WEBPACK_IMPORTED_MODULE_0__.combined_dict[inverted_dict[teamDestiniy]].toUpperCase();\n  document.getElementById(\"currentContract\").className = \"team-contract engine-\" + _config__WEBPACK_IMPORTED_MODULE_0__.team_dict[inverted_dict[teamDestiniy]];\n}\n\n/**\r\n * Manages the interaction to drag drivers\r\n */\ninteract('.free-driver').draggable({\n  inertia: true,\n  listeners: {\n    start(event) {\n      originalParent = event.target.parentNode;\n      if (originalParent.className != \"main-columns-drag-section\") {\n        if (originalParent.classList.contains(\"affiliates-space\")) {\n          teamOrigin = originalParent.parentNode.parentNode;\n        } else {\n          teamOrigin = originalParent.parentNode;\n        }\n      } else {\n        teamOrigin = originalParent;\n      }\n      draggable = event.target;\n      let target = event.target;\n      let position = target.getBoundingClientRect();\n      let width = target.getBoundingClientRect().width;\n      target.style.width = width + \"px\";\n      target.style.position = \"fixed\";\n      target.style.top = position.top + \"px\";\n      target.style.left = position.left + \"px\"; // Añadir esta línea para manejar la posición izquierda\n    },\n    move(event) {\n      const target = event.target;\n      const x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx;\n      const y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;\n      target.style.transform = `translate(${x}px, ${y}px)`;\n      target.style.opacity = 1;\n      target.style.zIndex = 10;\n      target.setAttribute('data-x', x);\n      target.setAttribute('data-y', y);\n    },\n    end(event) {\n      let target = event.target;\n      target.style.position = \"relative\";\n      target.style.top = \"auto\";\n      target.style.left = \"auto\"; // Resetear la posición izquierda\n      target.style.width = \"auto\";\n      target.style.transform = 'none';\n      target.style.zIndex = 1;\n      target.setAttribute('data-x', 0);\n      target.setAttribute('data-y', 0);\n      //is driver\n      if (event.target.parentNode.classList.contains(\"driver-space\") | event.target.parentNode.classList.contains(\"affiliates-space\") | event.target.parentNode.id === \"free-drivers\") {\n        let freeDrivers = document.getElementById('free-drivers');\n        let freeRect = freeDrivers.getBoundingClientRect();\n        let driverSpaceElements = document.querySelectorAll('.driver-space');\n        driverSpaceElements.forEach(function (element) {\n          let rect = element.getBoundingClientRect();\n          if (event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom) {\n            if (element.classList.contains(\"affiliates-space\") && _renderer__WEBPACK_IMPORTED_MODULE_1__.game_version === 2024) {\n              posInTeam = 3 + element.childElementCount;\n              teamDestiniy = element.parentNode.parentNode.dataset.team;\n              destinationParent = element;\n              element.appendChild(target);\n              originalTeamId = parseInt(target.dataset.teamid);\n              target.dataset.teamid = inverted_dict[teamDestiniy];\n              updateColor(target);\n              document.getElementById(\"contractModalTitle\").innerText = target.innerText + \"'s contract with \" + name_dict[teamDestiniy];\n              if (autoContractToggle.checked) {\n                if (_renderer__WEBPACK_IMPORTED_MODULE_1__.game_version === 2024 && originalParent.className === \"driver-space\" | originalParent.classList.contains(\"affiliates-space\")) {\n                  signDriver(\"fireandhire\");\n                }\n                signDriver(\"autocontract\");\n              } else {\n                modalType = \"hire\";\n                hire_modal_standars();\n                manage_modal_driver_staff(\"driver\");\n                myModal.show();\n              }\n              if (target.querySelector(\".custom-icon\") === null) {\n                addIcon(target);\n              }\n            } else {\n              if (element.childElementCount < 1) {\n                posInTeam = element.id.charAt(2);\n                teamDestiniy = element.parentNode.dataset.team;\n                destinationParent = element;\n                element.appendChild(target);\n                originalTeamId = parseInt(target.dataset.teamid);\n                target.dataset.teamid = inverted_dict[teamDestiniy];\n                updateColor(target);\n                document.getElementById(\"contractModalTitle\").innerText = target.innerText + \"'s contract with \" + name_dict[teamDestiniy];\n                if (autoContractToggle.checked) {\n                  if (_renderer__WEBPACK_IMPORTED_MODULE_1__.game_version === 2023 && f2_teams.includes(originalTeamId) | f3_teams.includes(originalTeamId) | originalParent.className === \"driver-space\" | originalParent.classList.contains(\"affiliates-space\") || _renderer__WEBPACK_IMPORTED_MODULE_1__.game_version === 2024 && f2_teams.includes(originalTeamId) | f3_teams.includes(originalTeamId) | originalParent.className === \"driver-space\" | originalParent.classList.contains(\"affiliates-space\")) {\n                    signDriver(\"fireandhire\");\n                  }\n                  signDriver(\"autocontract\");\n                } else {\n                  modalType = \"hire\";\n                  hire_modal_standars();\n                  manage_modal_driver_staff(\"driver\");\n                  myModal.show();\n                }\n                if (target.querySelector(\".custom-icon\") === null) {\n                  addIcon(target);\n                }\n              } else if (element.childElementCount == 1) {\n                if (originalParent.classList.contains(\"driver-space\")) {\n                  driver1 = target;\n                  driver2 = element.firstChild;\n                  let team1 = driver1.parentNode.parentNode;\n                  let team2 = driver2.parentNode.parentNode;\n                  driver1.dataset.teamid = inverted_dict[team2.dataset.team];\n                  updateColor(driver1);\n                  driver2.dataset.teamid = inverted_dict[team1.dataset.team];\n                  updateColor(driver2);\n                  if (driver1 !== driver2) {\n                    let data = {\n                      command: \"swap\",\n                      driver1ID: target.dataset.driverid,\n                      driver2ID: element.firstChild.dataset.driverid,\n                      driver1: target.innerText,\n                      driver2: element.firstChild.innerText\n                    };\n                    socket.send(JSON.stringify(data));\n                    manage_swap();\n                  }\n                }\n              }\n            }\n          }\n        });\n        if (event.clientX >= freeRect.left && event.clientX <= freeRect.right && event.clientY >= freeRect.top && event.clientY <= freeRect.bottom) {\n          if (target.querySelector(\".custom-icon\") !== null) {\n            draggable.removeChild(draggable.querySelector(\".custom-icon\"));\n          }\n          if (originalParent.id !== \"free-drivers\") {\n            originalParent.removeChild(draggable);\n            originalTeamId = parseInt(target.dataset.teamid);\n            draggable.dataset.teamid = 0;\n            updateColor(draggable);\n            freeDrivers.appendChild(target);\n            let data = {\n              command: \"fire\",\n              driverID: draggable.dataset.driverid,\n              driver: draggable.innerText,\n              team: name_dict[teamOrigin.dataset.team],\n              teamID: originalTeamId\n            };\n            if (!data[\"team\"]) {\n              if (f2_teams.includes(originalTeamId)) {\n                data[\"team\"] = \"F2\";\n              } else if (f3_teams.includes(originalTeamId)) {\n                data[\"team\"] = \"F3\";\n              }\n            }\n            socket.send(JSON.stringify(data));\n          }\n        }\n      }\n      //is staff\n      else if (event.target.parentNode.classList.contains(\"staff-space\") | event.target.parentNode.id === \"free-staff\") {\n        let tfreeStaff = document.getElementById('free-staff');\n        let staffRect = tfreeStaff.getBoundingClientRect();\n        let staffSpaceElements = document.querySelectorAll('.staff-space');\n        staffSpaceElements.forEach(function (element) {\n          let rect = element.getBoundingClientRect();\n          if (event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom) {\n            if (element.dataset.type === event.target.dataset.type) {\n              if (element.childElementCount < 1) {\n                posInTeam = element.dataset.pos;\n                teamDestiniy = element.parentNode.dataset.team;\n                destinationParent = element;\n                element.appendChild(target);\n                originalTeamId = parseInt(target.dataset.teamid);\n                target.dataset.teamid = inverted_dict[teamDestiniy];\n                updateColor(target);\n                document.getElementById(\"contractModalTitle\").innerText = target.innerText + \"'s contract with \" + name_dict[teamDestiniy];\n                if (autoContractToggle.checked) {\n                  if (_renderer__WEBPACK_IMPORTED_MODULE_1__.game_version === 2023 && f2_teams.includes(originalTeamId) | f3_teams.includes(originalTeamId) | originalParent.className === \"staff-space\" || _renderer__WEBPACK_IMPORTED_MODULE_1__.game_version === 2024 && f2_teams.includes(originalTeamId) | f3_teams.includes(originalTeamId) | originalParent.className === \"staff-space\") {\n                    signDriver(\"fireandhire\");\n                  }\n                  signDriver(\"autocontract\");\n                } else {\n                  modalType = \"hire\";\n                  hire_modal_standars();\n                  if (event.target.dataset.type === \"race-engineer\") {\n                    manage_modal_driver_staff(\"race-engineer\");\n                  } else {\n                    manage_modal_driver_staff(\"staff\");\n                  }\n                  myModal.show();\n                }\n                if (target.querySelector(\".custom-icon\") === null) {\n                  addIcon(target);\n                }\n              } else if (element.childElementCount == 1) {\n                if (originalParent.classList.contains(\"staff-space\")) {\n                  driver1 = target;\n                  driver2 = element.firstChild;\n                  let team1 = driver1.parentNode.parentNode;\n                  let team2 = driver2.parentNode.parentNode;\n                  driver1.dataset.teamid = inverted_dict[team2.dataset.team];\n                  updateColor(driver1);\n                  driver2.dataset.teamid = inverted_dict[team1.dataset.team];\n                  updateColor(driver2);\n                  if (driver1 !== driver2) {\n                    let data = {\n                      command: \"swap\",\n                      driver1ID: target.dataset.driverid,\n                      driver2ID: element.firstChild.dataset.driverid,\n                      driver1: target.innerText,\n                      driver2: element.firstChild.innerText\n                    };\n                    socket.send(JSON.stringify(data));\n                    manage_swap();\n                  }\n                }\n              }\n            } else {\n              update_notifications(\"You can't change staff from different positions\", \"lighterror\");\n            }\n          }\n        });\n        if (event.clientX >= staffRect.left && event.clientX <= staffRect.right && event.clientY >= staffRect.top && event.clientY <= staffRect.bottom) {\n          if (target.querySelector(\".custom-icon\") !== null) {\n            draggable.removeChild(draggable.querySelector(\".custom-icon\"));\n          }\n          if (originalParent.id !== \"free-staff\") {\n            originalParent.removeChild(draggable);\n            originalTeamId = parseInt(target.dataset.teamid);\n            draggable.dataset.teamid = 0;\n            updateColor(draggable);\n            tfreeStaff.appendChild(target);\n            let data = {\n              command: \"fire\",\n              driverID: draggable.dataset.driverid,\n              driver: draggable.innerText,\n              team: name_dict[teamOrigin.dataset.team],\n              teamID: originalTeamId\n            };\n            if (!data[\"team\"]) {\n              if (f2_teams.includes(originalTeamId)) {\n                data[\"team\"] = \"F2\";\n              } else if (f3_teams.includes(originalTeamId)) {\n                data[\"team\"] = \"F3\";\n              }\n            }\n            socket.send(JSON.stringify(data));\n          }\n        }\n      }\n    }\n  }\n});\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/./src/js/frontend/transfers.js?");

/***/ }),

/***/ "?8893":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/crypto_(ignored)?");

/***/ }),

/***/ "?5041":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/fs_(ignored)?");

/***/ }),

/***/ "?c8d5":
/*!**********************!*\
  !*** path (ignored) ***!
  \**********************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://Database_Editor_F1_Manager/path_(ignored)?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/******/ 	// the startup function
/******/ 	__webpack_require__.x = () => {
/******/ 		// Load entry module and return exports
/******/ 		// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 		var __webpack_exports__ = __webpack_require__.O(undefined, ["vendors-node_modules_buffer_index_js-node_modules_file-saver_dist_FileSaver_min_js-node_modul-a6abe5"], () => (__webpack_require__("./src/js/backend/commands/worker.js")))
/******/ 		__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 		return __webpack_exports__;
/******/ 	};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks and sibling chunks for the entrypoint
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + ".bundle.js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) {
/******/ 					var i = scripts.length - 1;
/******/ 					while (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/importScripts chunk loading */
/******/ 	(() => {
/******/ 		__webpack_require__.b = self.location + "";
/******/ 		
/******/ 		// object to store loaded chunks
/******/ 		// "1" means "already loaded"
/******/ 		var installedChunks = {
/******/ 			"src_js_frontend_renderer_js": 1
/******/ 		};
/******/ 		
/******/ 		// importScripts chunk loading
/******/ 		var installChunk = (data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			for(var moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 			}
/******/ 			if(runtime) runtime(__webpack_require__);
/******/ 			while(chunkIds.length)
/******/ 				installedChunks[chunkIds.pop()] = 1;
/******/ 			parentChunkLoadingFunction(data);
/******/ 		};
/******/ 		__webpack_require__.f.i = (chunkId, promises) => {
/******/ 			// "1" is the signal for "already loaded"
/******/ 			if(!installedChunks[chunkId]) {
/******/ 				if(true) { // all chunks have JS
/******/ 					importScripts(__webpack_require__.p + __webpack_require__.u(chunkId));
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkDatabase_Editor_F1_Manager"] = self["webpackChunkDatabase_Editor_F1_Manager"] || [];
/******/ 		var parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);
/******/ 		chunkLoadingGlobal.push = installChunk;
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/startup chunk dependencies */
/******/ 	(() => {
/******/ 		var next = __webpack_require__.x;
/******/ 		__webpack_require__.x = () => {
/******/ 			return __webpack_require__.e("vendors-node_modules_buffer_index_js-node_modules_file-saver_dist_FileSaver_min_js-node_modul-a6abe5").then(next);
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// run startup
/******/ 	var __webpack_exports__ = __webpack_require__.x();
/******/ 	
/******/ })()
;